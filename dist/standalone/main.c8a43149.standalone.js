(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("path"), require("fs"), require("util"), require("assert"), require("constants"), require("crypto"), require("domain"), require("os"), require("stream"));
	else if(typeof define === 'function' && define.amd)
		define(["path", "fs", "util", "assert", "constants", "crypto", "domain", "os", "stream"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("path"), require("fs"), require("util"), require("assert"), require("constants"), require("crypto"), require("domain"), require("os"), require("stream")) : factory(root["path"], root["fs"], root["util"], root["assert"], root["constants"], root["crypto"], root["domain"], root["os"], root["stream"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_53__, __WEBPACK_EXTERNAL_MODULE_54__, __WEBPACK_EXTERNAL_MODULE_112__, __WEBPACK_EXTERNAL_MODULE_239__, __WEBPACK_EXTERNAL_MODULE_240__, __WEBPACK_EXTERNAL_MODULE_241__, __WEBPACK_EXTERNAL_MODULE_242__, __WEBPACK_EXTERNAL_MODULE_243__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "./";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 244);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

var fs = __webpack_require__(53)
var polyfills = __webpack_require__(179)
var legacy = __webpack_require__(178)
var clone = __webpack_require__(177)

var queue = []

var util = __webpack_require__(54)

function noop () {}

var debug = noop
if (util.debuglog)
  debug = util.debuglog('gfs4')
else if (/\bgfs4\b/i.test(__webpack_require__.i({"NODE_ENV":"production","PUBLIC_URL":".","PLATFORM":"standalone"}).NODE_DEBUG || ''))
  debug = function() {
    var m = util.format.apply(util, arguments)
    m = 'GFS4: ' + m.split(/\n/).join('\nGFS4: ')
    console.error(m)
  }

if (/\bgfs4\b/i.test(__webpack_require__.i({"NODE_ENV":"production","PUBLIC_URL":".","PLATFORM":"standalone"}).NODE_DEBUG || '')) {
  process.on('exit', function() {
    debug(queue)
    __webpack_require__(112).equal(queue.length, 0)
  })
}

module.exports = patch(clone(fs))
if (__webpack_require__.i({"NODE_ENV":"production","PUBLIC_URL":".","PLATFORM":"standalone"}).TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {
    module.exports = patch(fs)
    fs.__patched = true;
}

// Always patch fs.close/closeSync, because we want to
// retry() whenever a close happens *anywhere* in the program.
// This is essential when multiple graceful-fs instances are
// in play at the same time.
module.exports.close = (function (fs$close) { return function (fd, cb) {
  return fs$close.call(fs, fd, function (err) {
    if (!err)
      retry()

    if (typeof cb === 'function')
      cb.apply(this, arguments)
  })
}})(fs.close)

module.exports.closeSync = (function (fs$closeSync) { return function (fd) {
  // Note that graceful-fs also retries when fs.closeSync() fails.
  // Looks like a bug to me, although it's probably a harmless one.
  var rval = fs$closeSync.apply(fs, arguments)
  retry()
  return rval
}})(fs.closeSync)

// Only patch fs once, otherwise we'll run into a memory leak if
// graceful-fs is loaded multiple times, such as in test environments that
// reset the loaded modules between tests.
// We look for the string `graceful-fs` from the comment above. This
// way we are not adding any extra properties and it will detect if older
// versions of graceful-fs are installed.
if (!/\bgraceful-fs\b/.test(fs.closeSync.toString())) {
  fs.closeSync = module.exports.closeSync;
  fs.close = module.exports.close;
}

function patch (fs) {
  // Everything that references the open() function needs to be in here
  polyfills(fs)
  fs.gracefulify = patch
  fs.FileReadStream = ReadStream;  // Legacy name.
  fs.FileWriteStream = WriteStream;  // Legacy name.
  fs.createReadStream = createReadStream
  fs.createWriteStream = createWriteStream
  var fs$readFile = fs.readFile
  fs.readFile = readFile
  function readFile (path, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$readFile(path, options, cb)

    function go$readFile (path, options, cb) {
      return fs$readFile(path, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$readFile, [path, options, cb]])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
          retry()
        }
      })
    }
  }

  var fs$writeFile = fs.writeFile
  fs.writeFile = writeFile
  function writeFile (path, data, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$writeFile(path, data, options, cb)

    function go$writeFile (path, data, options, cb) {
      return fs$writeFile(path, data, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$writeFile, [path, data, options, cb]])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
          retry()
        }
      })
    }
  }

  var fs$appendFile = fs.appendFile
  if (fs$appendFile)
    fs.appendFile = appendFile
  function appendFile (path, data, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$appendFile(path, data, options, cb)

    function go$appendFile (path, data, options, cb) {
      return fs$appendFile(path, data, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$appendFile, [path, data, options, cb]])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
          retry()
        }
      })
    }
  }

  var fs$readdir = fs.readdir
  fs.readdir = readdir
  function readdir (path, options, cb) {
    var args = [path]
    if (typeof options !== 'function') {
      args.push(options)
    } else {
      cb = options
    }
    args.push(go$readdir$cb)

    return go$readdir(args)

    function go$readdir$cb (err, files) {
      if (files && files.sort)
        files.sort()

      if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
        enqueue([go$readdir, [args]])

      else {
        if (typeof cb === 'function')
          cb.apply(this, arguments)
        retry()
      }
    }
  }

  function go$readdir (args) {
    return fs$readdir.apply(fs, args)
  }

  if (process.version.substr(0, 4) === 'v0.8') {
    var legStreams = legacy(fs)
    ReadStream = legStreams.ReadStream
    WriteStream = legStreams.WriteStream
  }

  var fs$ReadStream = fs.ReadStream
  if (fs$ReadStream) {
    ReadStream.prototype = Object.create(fs$ReadStream.prototype)
    ReadStream.prototype.open = ReadStream$open
  }

  var fs$WriteStream = fs.WriteStream
  if (fs$WriteStream) {
    WriteStream.prototype = Object.create(fs$WriteStream.prototype)
    WriteStream.prototype.open = WriteStream$open
  }

  fs.ReadStream = ReadStream
  fs.WriteStream = WriteStream

  function ReadStream (path, options) {
    if (this instanceof ReadStream)
      return fs$ReadStream.apply(this, arguments), this
    else
      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)
  }

  function ReadStream$open () {
    var that = this
    open(that.path, that.flags, that.mode, function (err, fd) {
      if (err) {
        if (that.autoClose)
          that.destroy()

        that.emit('error', err)
      } else {
        that.fd = fd
        that.emit('open', fd)
        that.read()
      }
    })
  }

  function WriteStream (path, options) {
    if (this instanceof WriteStream)
      return fs$WriteStream.apply(this, arguments), this
    else
      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)
  }

  function WriteStream$open () {
    var that = this
    open(that.path, that.flags, that.mode, function (err, fd) {
      if (err) {
        that.destroy()
        that.emit('error', err)
      } else {
        that.fd = fd
        that.emit('open', fd)
      }
    })
  }

  function createReadStream (path, options) {
    return new ReadStream(path, options)
  }

  function createWriteStream (path, options) {
    return new WriteStream(path, options)
  }

  var fs$open = fs.open
  fs.open = open
  function open (path, flags, mode, cb) {
    if (typeof mode === 'function')
      cb = mode, mode = null

    return go$open(path, flags, mode, cb)

    function go$open (path, flags, mode, cb) {
      return fs$open(path, flags, mode, function (err, fd) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$open, [path, flags, mode, cb]])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
          retry()
        }
      })
    }
  }

  return fs
}

function enqueue (elem) {
  debug('ENQUEUE', elem[0].name, elem[1])
  queue.push(elem)
}

function retry () {
  var elem = queue.shift()
  if (elem) {
    debug('RETRY', elem[0].name, elem[1])
    elem[0].apply(null, elem[1])
  }
}


/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("path");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.fromCallback = function (fn) {
  return Object.defineProperty(function () {
    if (typeof arguments[arguments.length - 1] === 'function') fn.apply(this, arguments)
    else {
      return new Promise((resolve, reject) => {
        arguments[arguments.length] = (err, res) => {
          if (err) return reject(err)
          resolve(res)
        }
        arguments.length++
        fn.apply(this, arguments)
      })
    }
  }, 'name', { value: fn.name })
}

exports.fromPromise = function (fn) {
  return Object.defineProperty(function () {
    const cb = arguments[arguments.length - 1]
    if (typeof cb !== 'function') return fn.apply(this, arguments)
    else fn.apply(this, arguments).then(r => cb(null, r), cb)
  }, 'name', { value: fn.name })
}


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const u = __webpack_require__(2).fromCallback
const mkdirs = u(__webpack_require__(169))
const mkdirsSync = __webpack_require__(168)

module.exports = {
  mkdirs: mkdirs,
  mkdirsSync: mkdirsSync,
  // alias
  mkdirp: mkdirs,
  mkdirpSync: mkdirsSync,
  ensureDir: mkdirs,
  ensureDirSync: mkdirsSync
}


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(40)('wks');
var uid = __webpack_require__(30);
var Symbol = __webpack_require__(6).Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),
/* 5 */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),
/* 6 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(210);
} else {
  module.exports = require('./cjs/react.development.js');
}


/***/ }),
/* 8 */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.9' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(22)(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const u = __webpack_require__(2).fromPromise
const fs = __webpack_require__(87)

function pathExists (path) {
  return fs.access(path).then(() => true).catch(() => false)
}

module.exports = {
  pathExists: u(pathExists),
  pathExistsSync: fs.existsSync
}


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(14);
var IE8_DOM_DEFINE = __webpack_require__(69);
var toPrimitive = __webpack_require__(80);
var dP = Object.defineProperty;

exports.f = __webpack_require__(9) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory(__webpack_require__(32), __webpack_require__(20), __webpack_require__(19), __webpack_require__(57), __webpack_require__(58), __webpack_require__(59), __webpack_require__(25), __webpack_require__(26), __webpack_require__(60), __webpack_require__(108));
	else if(typeof define === 'function' && define.amd)
		define(["lodash", "@brightsign/bscore", "redux", "reselect", "base64-js", "core-js/es6/map", "core-js/es6/set", "core-js/fn/array/from", "core-js/fn/object/assign", "uuid"], factory);
	else if(typeof exports === 'object')
		exports["bsDataModel"] = factory(require("lodash"), require("@brightsign/bscore"), require("redux"), require("reselect"), require("base64-js"), require("core-js/es6/map"), require("core-js/es6/set"), require("core-js/fn/array/from"), require("core-js/fn/object/assign"), require("uuid"));
	else
		root["bsDataModel"] = factory(root["lodash"], root["@brightsign/bscore"], root["redux"], root["reselect"], root["base64-js"], root["core-js/es6/map"], root["core-js/es6/set"], root["core-js/fn/array/from"], root["core-js/fn/object/assign"], root["uuid"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_24__, __WEBPACK_EXTERNAL_MODULE_60__, __WEBPACK_EXTERNAL_MODULE_64__, __WEBPACK_EXTERNAL_MODULE_65__, __WEBPACK_EXTERNAL_MODULE_66__, __WEBPACK_EXTERNAL_MODULE_67__, __WEBPACK_EXTERNAL_MODULE_100__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 70);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __webpack_require__(32);

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = __webpack_require__(20);

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bsDmVersion_1 = __webpack_require__(48);
exports.BsDmIdNone = '0';
exports.BsDmStateVersion = bsDmVersion_1.version;
var DmEntityType = (function () {
    function DmEntityType() {
    }
    DmEntityType.Sign = 'Sign';
    DmEntityType.Zone = 'Zone';
    DmEntityType.MediaState = 'MediaState';
    DmEntityType.Event = 'Event';
    DmEntityType.Transition = 'Transition';
    DmEntityType.Command = 'Command';
    DmEntityType.DataFeed = 'DataFeed';
    DmEntityType.HtmlSite = 'HtmlSite';
    DmEntityType.UserVariable = 'UserVariable';
    DmEntityType.LiveText = 'LiveText';
    return DmEntityType;
}());
exports.DmEntityType = DmEntityType;
Object.freeze(DmEntityType);
exports.DmVideoContentItemDataNameArray = ['volume', 'videoDisplayMode', 'automaticallyLoop'];
exports.DmAudioContentItemDataNameArray = ['volume'];
exports.DmImageContentItemDataNameArray = [
    'useImageBuffer', 'videoPlayerRequired', 'defaultTransition', 'transitionDuration'
];
exports.DmHtmlContentItemDataNameArray = [
    'enableBrightSignJavascriptObjects',
    'enableCrossDomainPolicyChecks',
    'ignoreHttpsCertificateErrors',
    'enableCamera',
    'enableMouseEvents', 'displayCursor', 'hwzOn',
    'useUserStylesheet', 'userStylesheetAssetId', 'customFonts',
];
exports.DmMrssDataFeedContentItemDataNameArray = ['videoPlayerRequired'];
exports.DmTwitterFeedContentItemDataNameArray = [
    'userName', 'authToken', 'encryptedTwitterSecrets',
    'updateInterval', 'restrictNumberOfTweets', 'numberOfTweetsToShow', 'numberOfRecentDaysForTweets',
];
exports.DmLiveVideoContentItemDataNameArray = ['volume', 'overscan'];
exports.DmStreamContentItemDataNameArray = ['volume', 'url'];
exports.DmMjpegStreamContentItemDataNameArray = ['rotation', 'url'];
exports.DmMediaListContentItemDataNameArray = ['playbackType', 'shuffle', 'support4KImage',
    'sendMediaZoneMessage', 'transition', 'transitionDuration', 'autoTransitions',
    'startIndex', 'useDataFeed', 'dataFeedId'];
exports.DmPlayFileContentItemDataNameArray = ['triggerType', 'useDefaultMedia',
    'userVariableIdOrName', 'useDataFeed', 'dataFeedId'];
exports.DmPlayFileItemDataNameArray = ['name', 'key', 'exportKey'];
exports.DmEventHandlerContentItemDataNameArray = ['stopPlayback'];
exports.DmLiveTextContentItemDataNameArray = ['canvasId'];
exports.DmSuperStateContentItemDataNameArray = ['initialMediaStateId'];
var DmTimeClockEventType = (function () {
    function DmTimeClockEventType() {
    }
    DmTimeClockEventType.DateTime = 'timeClockDateTime';
    DmTimeClockEventType.ByUserVariable = 'timeClockDateTimeByUserVariable';
    DmTimeClockEventType.DailyOnce = 'timeClockDailyOnce';
    DmTimeClockEventType.DailyPeriodic = 'timeClockDailyPeriodic';
    return DmTimeClockEventType;
}());
exports.DmTimeClockEventType = DmTimeClockEventType;
Object.freeze(DmTimeClockEventType);
exports.DmParameterizedStringCommandPropertyNames = ['messageData', 'beaconName', 'presentationName'];
exports.DmParameterizedNumberCommandPropertyNames = ['volume', 'pauseTime'];
var MediaStateContainerType;
(function (MediaStateContainerType) {
    MediaStateContainerType[MediaStateContainerType["Zone"] = 0] = "Zone";
    MediaStateContainerType[MediaStateContainerType["MediaList"] = 1] = "MediaList";
    MediaStateContainerType[MediaStateContainerType["PlayFile"] = 2] = "PlayFile";
    MediaStateContainerType[MediaStateContainerType["SuperState"] = 3] = "SuperState";
})(MediaStateContainerType = exports.MediaStateContainerType || (exports.MediaStateContainerType = {}));
exports.DmDefaultFontName = 'System';
var SerialParity = (function () {
    function SerialParity() {
    }
    SerialParity.None = 'none';
    SerialParity.Even = 'even';
    SerialParity.Odd = 'odd';
    return SerialParity;
}());
exports.SerialParity = SerialParity;
Object.freeze(SerialParity);
var SerialProtocol = (function () {
    function SerialProtocol() {
    }
    SerialProtocol.Ascii = 'ASCII';
    SerialProtocol.Binary = 'Binary';
    return SerialProtocol;
}());
exports.SerialProtocol = SerialProtocol;
Object.freeze(SerialProtocol);
var SerialEol = (function () {
    function SerialEol() {
    }
    SerialEol.CR = 'CR';
    SerialEol.LF = 'LF';
    SerialEol.CRLF = 'CRLF';
    return SerialEol;
}());
exports.SerialEol = SerialEol;
Object.freeze(SerialEol);
var SerialConnectedDeviceType = (function () {
    function SerialConnectedDeviceType() {
    }
    SerialConnectedDeviceType.None = 'None';
    SerialConnectedDeviceType.Gps = 'GPS';
    return SerialConnectedDeviceType;
}());
exports.SerialConnectedDeviceType = SerialConnectedDeviceType;
Object.freeze(SerialConnectedDeviceType);
var DmTapProtocolType = (function () {
    function DmTapProtocolType() {
    }
    DmTapProtocolType.Serial = 'Serial';
    DmTapProtocolType.Cdc = 'CDC';
    DmTapProtocolType.Hid = 'HID';
    return DmTapProtocolType;
}());
exports.DmTapProtocolType = DmTapProtocolType;
Object.freeze(DmTapProtocolType);
var DmPartnerCommandLibraryType = (function () {
    function DmPartnerCommandLibraryType() {
    }
    DmPartnerCommandLibraryType.None = 'None';
    DmPartnerCommandLibraryType.Riviera = 'Riviera';
    return DmPartnerCommandLibraryType;
}());
exports.DmPartnerCommandLibraryType = DmPartnerCommandLibraryType;
Object.freeze(DmPartnerCommandLibraryType);
var LiveTextItemType = (function () {
    function LiveTextItemType() {
    }
    LiveTextItemType.StaticText = 'StaticText';
    LiveTextItemType.SystemVariable = 'SystemVariable';
    LiveTextItemType.MediaCounter = 'MediaCounter';
    LiveTextItemType.UserVariable = 'UserVariable';
    LiveTextItemType.SimpleRss = 'SimpleRss';
    LiveTextItemType.MediaRssText = 'MediaRssText';
    LiveTextItemType.MediaRssMedia = 'MediaRssMedia';
    LiveTextItemType.Image = 'Image';
    LiveTextItemType.IndexedDataFeed = 'IndexedDataFeed';
    LiveTextItemType.TitledDataFeed = 'TitledDataFeed';
    return LiveTextItemType;
}());
exports.LiveTextItemType = LiveTextItemType;
Object.freeze(LiveTextItemType);
var LiveTextEntityType = (function () {
    function LiveTextEntityType() {
    }
    LiveTextEntityType.StaticText = LiveTextItemType.StaticText;
    LiveTextEntityType.SystemVariable = LiveTextItemType.SystemVariable;
    LiveTextEntityType.MediaCounter = LiveTextItemType.MediaCounter;
    LiveTextEntityType.UserVariable = LiveTextItemType.UserVariable;
    LiveTextEntityType.Image = LiveTextItemType.Image;
    LiveTextEntityType.SimpleRss = LiveTextItemType.SimpleRss;
    LiveTextEntityType.MediaRss = 'MediaRss';
    LiveTextEntityType.DataFeed = 'DataFeed';
    return LiveTextEntityType;
}());
exports.LiveTextEntityType = LiveTextEntityType;
Object.freeze(LiveTextEntityType);
var RssTextElementName = (function () {
    function RssTextElementName() {
    }
    RssTextElementName.Title = 'Title';
    RssTextElementName.Description = 'Description';
    RssTextElementName.Custom = 'Custom';
    return RssTextElementName;
}());
exports.RssTextElementName = RssTextElementName;
Object.freeze(RssTextElementName);


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var uuid_1 = __webpack_require__(100);
var bsDmInterfaces_1 = __webpack_require__(2);
var lodash_1 = __webpack_require__(0);
exports.newBsDmId = function () { return uuid_1.v4(); };
var reValidId = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
exports.isValidBsDmId = function (id) {
    return !lodash_1.isNil(id) && id !== bsDmInterfaces_1.BsDmIdNone && id !== '';
};
exports.isValidGuidBsDmId = function (id) {
    if (lodash_1.isString(id)) {
        var ret = id.match(reValidId);
        return !lodash_1.isNil(ret) && id === ret[0];
    }
    return false;
};
var reValidHexString = /^[0-9a-f]+$/i;
exports.isValidHexString = function (val) {
    if (lodash_1.isString(val)) {
        var ret = val.match(reValidHexString);
        return !lodash_1.isNil(ret) && val === ret[0];
    }
    return false;
};
exports.deepUpdate = function (target, partial) {
    var updatedTarget = __assign({}, target);
    Object.keys(partial).forEach(function (propName) {
        if (!lodash_1.isNil(partial[propName]) && typeof partial[propName] === 'object') {
            updatedTarget[propName] = exports.deepUpdate(updatedTarget[propName], partial[propName]);
        }
        else {
            updatedTarget[propName] = partial[propName];
        }
    });
    return updatedTarget;
};
exports.moveIdsInSequence = function (sequence, indices, targetIndex) {
    if (targetIndex < 0 || targetIndex >= sequence.length) {
        targetIndex = sequence.length - 1;
    }
    var tempIndices = indices
        .filter(function (index) { return index >= 0 && index < sequence.length; })
        .sort(function (a, b) { return a - b; });
    var movedIds = [];
    var unmovedIds = [];
    sequence.forEach(function (id, index) {
        if (index === tempIndices[0]) {
            movedIds.push(id);
            tempIndices.shift();
        }
        else {
            unmovedIds.push(id);
        }
    });
    if (movedIds.length > 0) {
        return unmovedIds.slice(0, targetIndex).concat(movedIds, unmovedIds.slice(targetIndex));
    }
    return sequence;
};


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a;
var lodash_1 = __webpack_require__(0);
var DmErrorType;
(function (DmErrorType) {
    DmErrorType[DmErrorType["unknownError"] = 0] = "unknownError";
    DmErrorType[DmErrorType["unexpectedError"] = 1] = "unexpectedError";
    DmErrorType[DmErrorType["invalidParameters"] = 2] = "invalidParameters";
    DmErrorType[DmErrorType["invalidOperation"] = 3] = "invalidOperation";
    DmErrorType[DmErrorType["apiError"] = 4] = "apiError";
    DmErrorType[DmErrorType["invalidSign"] = 5] = "invalidSign";
    DmErrorType[DmErrorType["pluginNameInUse"] = 6] = "pluginNameInUse";
    DmErrorType[DmErrorType["parserPluginFunctionNameInUse"] = 7] = "parserPluginFunctionNameInUse";
    DmErrorType[DmErrorType["userVariableNameNotFound"] = 8] = "userVariableNameNotFound";
    DmErrorType[DmErrorType["assetNotFound"] = 9] = "assetNotFound";
    DmErrorType[DmErrorType["eventNotCompatibleWithContentType"] = 10] = "eventNotCompatibleWithContentType";
    DmErrorType[DmErrorType["eventDuplicated"] = 11] = "eventDuplicated";
    DmErrorType[DmErrorType["eventNotCompatibleWithPlayerModel"] = 12] = "eventNotCompatibleWithPlayerModel";
    DmErrorType[DmErrorType["eventCannotBeAddedToMediaSequenceItem"] = 13] = "eventCannotBeAddedToMediaSequenceItem";
    DmErrorType[DmErrorType["eventActionIsIncompatible"] = 14] = "eventActionIsIncompatible";
    DmErrorType[DmErrorType["synchronizeEventNotCompatibleWithContentType"] = 15] = "synchronizeEventNotCompatibleWithContentType";
    DmErrorType[DmErrorType["pluginEventRequiresDefinedPlugins"] = 16] = "pluginEventRequiresDefinedPlugins";
    DmErrorType[DmErrorType["gpioEventRequiresGpioInput"] = 17] = "gpioEventRequiresGpioInput";
    DmErrorType[DmErrorType["commandNotCompatibleWithPlayerModel"] = 18] = "commandNotCompatibleWithPlayerModel";
    DmErrorType[DmErrorType["gpioCommandRequiresGpioOutput"] = 19] = "gpioCommandRequiresGpioOutput";
    DmErrorType[DmErrorType["gpioConfigurationChangeCreatesInvalidEventsOrCommands"] = 20] = "gpioConfigurationChangeCreatesInvalidEventsOrCommands";
    DmErrorType[DmErrorType["nameNotSpecified"] = 21] = "nameNotSpecified";
    DmErrorType[DmErrorType["eventDataMissing"] = 22] = "eventDataMissing";
    DmErrorType[DmErrorType["stringDataValueIsEmpty"] = 23] = "stringDataValueIsEmpty";
    DmErrorType[DmErrorType["userVariableNotSpecified"] = 24] = "userVariableNotSpecified";
    DmErrorType[DmErrorType["userVariableIdInvalid"] = 25] = "userVariableIdInvalid";
    DmErrorType[DmErrorType["userVariableNameNotDefined"] = 26] = "userVariableNameNotDefined";
    DmErrorType[DmErrorType["switchPresentationTargetNotSpecified"] = 27] = "switchPresentationTargetNotSpecified";
    DmErrorType[DmErrorType["dataFeedNotSpecified"] = 28] = "dataFeedNotSpecified";
    DmErrorType[DmErrorType["invalidHexString"] = 29] = "invalidHexString";
})(DmErrorType = exports.DmErrorType || (exports.DmErrorType = {}));
var bsnErrorMessage = (_a = {},
    _a[DmErrorType.unknownError] = 'Unknown error',
    _a[DmErrorType.unexpectedError] = 'Unexpected error',
    _a[DmErrorType.invalidParameters] = 'Invalid parameters',
    _a[DmErrorType.invalidOperation] = 'Invalid operation attempt',
    _a[DmErrorType.apiError] = 'API error',
    _a[DmErrorType.invalidSign] = 'Invalid presentation',
    _a[DmErrorType.pluginNameInUse] = 'Script plugin file name can only be used once',
    _a[DmErrorType.parserPluginFunctionNameInUse] = 'Parser plugin function name can only be used once',
    _a[DmErrorType.userVariableNameNotFound] = 'User variable name is not defined',
    _a[DmErrorType.assetNotFound] = 'The asset was not found in the asset list',
    _a[DmErrorType.eventNotCompatibleWithContentType] = 'The event type is not compatible with the media state content',
    _a[DmErrorType.eventDuplicated] = 'The event is a duplicate of another event already assigned to the media state',
    _a[DmErrorType.eventNotCompatibleWithPlayerModel] = 'The event is not compatible with the current BrightSign player model',
    _a[DmErrorType.eventCannotBeAddedToMediaSequenceItem] = 'Events cannot be added to MediaList or PlayFile items',
    _a[DmErrorType.eventActionIsIncompatible] = 'The event action is not compatible with the intended event use',
    _a[DmErrorType.synchronizeEventNotCompatibleWithContentType] = 'The Synchronize event is only supported when the target is an Image or a Video',
    _a[DmErrorType.pluginEventRequiresDefinedPlugins] = 'Add a Script Plugin using Presentation Setting -> Support Content',
    _a[DmErrorType.gpioEventRequiresGpioInput] = 'A GPIO event can only be specified for a GPIO that is configured as an input',
    _a[DmErrorType.commandNotCompatibleWithPlayerModel] = 'The command is not compatible with the current BrightSign player model',
    _a[DmErrorType.gpioCommandRequiresGpioOutput] = 'A GPIO command can only be specified for a GPIO that is configured as an output',
    _a[DmErrorType.gpioConfigurationChangeCreatesInvalidEventsOrCommands] = 'The changes made to GPIO configuration will make some events or commands invalid',
    _a[DmErrorType.nameNotSpecified] = 'A valid name must be specified',
    _a[DmErrorType.eventDataMissing] = 'Event data is missing or blank',
    _a[DmErrorType.stringDataValueIsEmpty] = 'String data value cannot be empty',
    _a[DmErrorType.userVariableNotSpecified] = 'A user variable must be specified',
    _a[DmErrorType.userVariableIdInvalid] = 'Invalid user variable ID',
    _a[DmErrorType.userVariableNameNotDefined] = 'User variable name does not refer to a valid user variable',
    _a[DmErrorType.switchPresentationTargetNotSpecified] = 'Target presentation not specified for SwitchPresentation',
    _a[DmErrorType.dataFeedNotSpecified] = 'DataFeed source for content is not properly specified',
    _a[DmErrorType.invalidHexString] = 'Invalid Hex string',
    _a);
var BsDmError = (function (_super) {
    __extends(BsDmError, _super);
    function BsDmError(type, reason, details) {
        var _this = _super.call(this) || this;
        _this.name = 'BsDmError';
        _this.type = type;
        if (reason) {
            _this.message = bsnErrorMessage[type] + ': ' + reason;
        }
        else {
            _this.message = bsnErrorMessage[type];
        }
        if (!lodash_1.isNil(details)) {
            _this.details = details;
            if (!lodash_1.isNil(details.action)) {
                _this.details.action = __assign({}, details.action, { error: true, meta: { reason: _this.message } });
            }
        }
        else {
            _this.details = {};
        }
        Object.setPrototypeOf(_this, BsDmError.prototype);
        return _this;
    }
    Object.defineProperty(BsDmError.prototype, "action", {
        get: function () {
            return lodash_1.isNil(this.details.action) ? null : this.details.action;
        },
        set: function (value) {
            this.attachAction(value);
        },
        enumerable: true,
        configurable: true
    });
    BsDmError.prototype.attachAction = function (action) {
        this.details.action = lodash_1.isNil(action) ? null : __assign({}, action, { error: true, meta: { reason: this.message } });
    };
    return BsDmError;
}(Error));
exports.BsDmError = BsDmError;
function dmIsBsDmError(error) {
    return error instanceof BsDmError;
}
exports.dmIsBsDmError = dmIsBsDmError;
function dmInitializeValidationResult(entityType, entityId) {
    return {
        ok: true,
        entityId: entityId,
        entityType: entityType,
        errorList: [],
        componentErrors: null,
    };
}
exports.dmInitializeValidationResult = dmInitializeValidationResult;


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bsDmError_1 = __webpack_require__(4);
function dmFilterDmState(state) {
    if (state.hasOwnProperty('bsdm')) {
        return state.bsdm;
    }
    return state;
}
exports.dmFilterDmState = dmFilterDmState;
var isValidSignMetadataState = function (state) {
    return typeof state === 'object'
        && state.hasOwnProperty('properties')
        && state.properties.hasOwnProperty('version')
        && state.properties.hasOwnProperty('name')
        && state.properties.hasOwnProperty('videoMode')
        && state.properties.hasOwnProperty('model')
        && state.properties.hasOwnProperty('monitorOrientation')
        && state.properties.hasOwnProperty('videoConnector')
        && state.properties.hasOwnProperty('deviceWebPageDisplay')
        && state.properties.hasOwnProperty('backgroundScreenColor')
        && state.properties.hasOwnProperty('forceResolution')
        && state.properties.hasOwnProperty('tenBitColorEnabled')
        && state.properties.hasOwnProperty('htmlEnableJavascriptConsole')
        && state.properties.hasOwnProperty('alphabetizeVariableNames')
        && state.properties.hasOwnProperty('autoCreateMediaCounterVariables')
        && state.properties.hasOwnProperty('resetVariablesOnPresentationStart')
        && state.properties.hasOwnProperty('networkedVariablesUpdateInterval')
        && state.properties.hasOwnProperty('delayScheduleChangeUntilMediaEndEvent')
        && state.properties.hasOwnProperty('language')
        && state.properties.hasOwnProperty('languageKey')
        && state.properties.hasOwnProperty('flipCoordinates')
        && state.properties.hasOwnProperty('isMosaic')
        && state.properties.hasOwnProperty('inactivityTimeout')
        && state.properties.hasOwnProperty('inactivityTime')
        && state.properties.hasOwnProperty('touchCursorDisplayMode')
        && state.properties.hasOwnProperty('graphicsZOrder')
        && state.properties.hasOwnProperty('udpDestinationAddressType')
        && state.properties.hasOwnProperty('udpDestinationAddress')
        && state.properties.hasOwnProperty('udpDestinationPort')
        && state.properties.hasOwnProperty('udpReceiverPort')
        && state.hasOwnProperty('serialPortConfigurations')
        && state.hasOwnProperty('gpio')
        && state.hasOwnProperty('buttonPanels')
        && state.hasOwnProperty('audioSignPropertyMap');
};
var isValidZoneState = function (state) {
    return typeof state === 'object'
        && state.hasOwnProperty('zonesById')
        && typeof state.zonesById === 'object'
        && state.hasOwnProperty('allZones')
        && Array.isArray(state.allZones)
        && state.allZones.length === Object.keys(state.zonesById).length;
};
var isValidMediaStateState = function (state) {
    return typeof state === 'object';
};
var isValidEventState = function (state) {
    return typeof state === 'object';
};
var isValidTransitionState = function (state) {
    return typeof state === 'object';
};
var isValidAssetMapState = function (state) {
    return typeof state === 'object';
};
function dmCheckForInvalidDmSignState(state) {
    if (typeof state === 'object'
        && state.hasOwnProperty('sign')
        && isValidSignMetadataState(state.sign)
        && state.hasOwnProperty('zones')
        && isValidZoneState(state.zones)
        && state.hasOwnProperty('mediaStates')
        && isValidMediaStateState(state.mediaStates)
        && state.hasOwnProperty('events')
        && isValidEventState(state.events)
        && state.hasOwnProperty('transitions')
        && isValidTransitionState(state.transitions)
        && state.hasOwnProperty('assetMap')
        && isValidAssetMapState(state.assetMap)) {
        return null;
    }
    else {
        return new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidSign, 'DmState structure is invalid');
    }
}
exports.dmCheckForInvalidDmSignState = dmCheckForInvalidDmSignState;


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(23));
__export(__webpack_require__(90));
__export(__webpack_require__(36));
__export(__webpack_require__(91));
__export(__webpack_require__(31));
__export(__webpack_require__(54));
__export(__webpack_require__(92));
__export(__webpack_require__(55));
__export(__webpack_require__(93));
__export(__webpack_require__(56));
__export(__webpack_require__(58));
__export(__webpack_require__(57));
__export(__webpack_require__(94));
__export(__webpack_require__(95));
__export(__webpack_require__(59));
__export(__webpack_require__(96));
__export(__webpack_require__(49));
__export(__webpack_require__(97));
__export(__webpack_require__(50));
__export(__webpack_require__(37));
__export(__webpack_require__(98));


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(3);
var bsDmState_1 = __webpack_require__(5);
var bsDmSign_1 = __webpack_require__(53);
var bsDmValidate_1 = __webpack_require__(35);
var actionBase_1 = __webpack_require__(8);
var actionCommand_1 = __webpack_require__(29);
var actionEvent_1 = __webpack_require__(17);
var lodash_1 = __webpack_require__(0);
exports.NEW_SIGN = 'DM_NEW_SIGN';
exports.UPDATE_SIGN_PROPS = 'DM_UPDATE_SIGN_PROPS';
exports.UPDATE_SIGN_SERIAL_PORTS = 'DM_UPDATE_SIGN_SERIAL_PORTS';
exports.UPDATE_SIGN_GPIO = 'DM_UPDATE_SIGN_GPIO';
exports.UPDATE_SIGN_BPMAP = 'DM_UPDATE_SIGN_BPMAP';
exports.UPDATE_SIGN_AUDIO_CONFIG = 'DM_UPDATE_SIGN_AUDIO_CONFIG';
exports.OPEN_SIGN = 'DM_OPEN_SIGN';
function dmNewSign(name, mode, model) {
    return {
        type: exports.NEW_SIGN,
        payload: bsDmSign_1.createDefaultSignProperties(utils_1.newBsDmId(), name, mode, model),
    };
}
exports.dmNewSign = dmNewSign;
function dmUpdateSignProperties(params) {
    return {
        type: exports.UPDATE_SIGN_PROPS,
        payload: params,
    };
}
exports.dmUpdateSignProperties = dmUpdateSignProperties;
function dmUpdateSignSerialPorts(params) {
    return {
        type: exports.UPDATE_SIGN_SERIAL_PORTS,
        payload: params,
    };
}
exports.dmUpdateSignSerialPorts = dmUpdateSignSerialPorts;
function dmUpdateSignGpio(params) {
    return function (dispatch, getState) {
        var _a;
        var isEventDeleteParams = function (deleteParams) {
            return deleteParams.hasOwnProperty('eventIds');
        };
        var mainAction = {
            type: exports.UPDATE_SIGN_GPIO,
            payload: params,
        };
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var invalidEventsAndCommands = bsDmValidate_1.dmGetGpioListIncompatibleEventsAndCommands(dmState, params.gpioList);
        if (invalidEventsAndCommands.eventIds.length > 0 || invalidEventsAndCommands.commandIds.length > 0) {
            var deleteParams = void 0;
            if (invalidEventsAndCommands.eventIds.length > 0) {
                deleteParams = actionEvent_1.dmGetEventDeleteParams(dmState, invalidEventsAndCommands.eventIds);
            }
            else {
                deleteParams = { commandIds: [] };
            }
            if (invalidEventsAndCommands.commandIds.length > 0) {
                (_a = deleteParams.commandIds).push.apply(_a, invalidEventsAndCommands.commandIds);
                deleteParams.commandIds = lodash_1.uniq(deleteParams.commandIds);
            }
            if (isEventDeleteParams(deleteParams)) {
                batchedActions.push(actionEvent_1.dmDeleteEventWithParams(deleteParams));
            }
            else {
                batchedActions.push(actionCommand_1.dmDeleteCommand(deleteParams.commandIds));
            }
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmUpdateSignGpio = dmUpdateSignGpio;
function dmUpdateSignButtonPanelMap(params) {
    return {
        type: exports.UPDATE_SIGN_BPMAP,
        payload: params,
    };
}
exports.dmUpdateSignButtonPanelMap = dmUpdateSignButtonPanelMap;
function dmUpdateSignAudioPropertyMap(params) {
    return {
        type: exports.UPDATE_SIGN_AUDIO_CONFIG,
        payload: params,
    };
}
exports.dmUpdateSignAudioPropertyMap = dmUpdateSignAudioPropertyMap;
function dmOpenSign(newState) {
    if (!utils_1.isValidBsDmId(newState.sign.properties.id)) {
        newState.sign.properties.id = utils_1.newBsDmId();
    }
    return {
        type: exports.OPEN_SIGN,
        payload: { newState: newState },
    };
}
exports.dmOpenSign = dmOpenSign;
function dmVerifyAndOpenSign(newState) {
    return function (dispatch) {
        var action = { type: exports.OPEN_SIGN, payload: { newState: newState } };
        var stateError = bsDmState_1.dmCheckForInvalidDmSignState(newState);
        if (stateError) {
            stateError.attachAction(action);
            throw stateError;
        }
        if (!utils_1.isValidBsDmId(newState.sign.properties.id)) {
            newState.sign.properties.id = utils_1.newBsDmId();
        }
        return dispatch(action);
    };
}
exports.dmVerifyAndOpenSign = dmVerifyAndOpenSign;


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var redux_thunk_1 = __webpack_require__(99);
exports.bsdmThunk = redux_thunk_1.default;
exports.BSDM_BATCH = 'BSDM_BATCH';
function dmBatchActions(actions) {
    return { type: exports.BSDM_BATCH, payload: actions };
}
exports.dmBatchActions = dmBatchActions;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(3);
var bscore_1 = __webpack_require__(1);
var bsDmState_1 = __webpack_require__(5);
var selectors_1 = __webpack_require__(6);
var actionAssetHelper_1 = __webpack_require__(11);
var bsDmError_1 = __webpack_require__(4);
var lodash_1 = __webpack_require__(0);
exports.PUT_ASSET_ITEM = 'DM_PUT_ASSET_ITEM';
exports.REMOVE_ASSET_ITEMS = 'DM_REMOVE_ASSET_ITEMS';
exports.UPDATE_ASSET_LOCATION = 'DM_UPDATE_ASSET_LOCATION';
function dmPutAssetItem(assetItem) {
    var putAction = {
        type: exports.PUT_ASSET_ITEM,
        payload: __assign({}, assetItem),
    };
    if (!putAction.payload.locator) {
        putAction.payload.locator = bscore_1.bscGenerateAssetLocatorKey(assetItem);
    }
    if (!putAction.payload.id || putAction.payload.id === bscore_1.BsAssetIdNone) {
        putAction.payload.id = utils_1.newBsDmId();
    }
    return putAction;
}
exports.dmPutAssetItem = dmPutAssetItem;
function dmRemoveAssetItems(id) {
    var assetIds = typeof id === 'string' ? [id] : id;
    return {
        type: exports.REMOVE_ASSET_ITEMS,
        payload: { assetIds: assetIds },
    };
}
exports.dmRemoveAssetItems = dmRemoveAssetItems;
function dmUpdateAssetLocation(currentAsset, newAssetItem) {
    return function (dispatch, getState) {
        var locator;
        if (bscore_1.bscIsAssetItem(currentAsset) && lodash_1.isString(currentAsset.locator) && currentAsset.locator.length > 0) {
            locator = currentAsset.locator;
        }
        else {
            locator = bscore_1.bscGenerateAssetLocatorKey(currentAsset);
        }
        var assetId = selectors_1.dmGetAssetIdByLocator(bsDmState_1.dmFilterDmState(getState()), { locator: locator });
        if (lodash_1.isNil(assetId)) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.assetNotFound, 'dmUpdateAssetLocation: ' + locator);
        }
        var newLocatorKey = bscore_1.bscGenerateAssetLocatorKey(newAssetItem);
        var filteredAssetItem = actionAssetHelper_1.dmGetFilteredAssetItem(newAssetItem);
        var assetItem = Object.assign(filteredAssetItem, { id: assetId, locator: newLocatorKey });
        var updateAction = {
            type: exports.UPDATE_ASSET_LOCATION,
            payload: { assetItem: assetItem },
        };
        if (!newLocatorKey) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'dmUpdateAssetLocation: New AssetLocator does not contain valid locator information', { action: updateAction });
        }
        dispatch(updateAction);
        return updateAction;
    };
}
exports.dmUpdateAssetLocation = dmUpdateAssetLocation;


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmEvents_1 = __webpack_require__(19);
var bsDmCommands_1 = __webpack_require__(34);
var bsDmDataFeed_1 = __webpack_require__(18);
var bsDmHtmlSite_1 = __webpack_require__(38);
var lodash_1 = __webpack_require__(0);
var DmcMediaStateContainer = (function () {
    function DmcMediaStateContainer(id, type) {
        if (type === void 0) { type = bsDmInterfaces_1.MediaStateContainerType.Zone; }
        this.id = id;
        this.type = type;
    }
    return DmcMediaStateContainer;
}());
exports.DmcMediaStateContainer = DmcMediaStateContainer;
var DmcMediaState = (function () {
    function DmcMediaState(mediaStateState, components) {
        this.id = mediaStateState.id;
        this.name = mediaStateState.name;
        this.container = Object.assign({}, mediaStateState.container);
        this.contentItem = Object.assign({}, mediaStateState.contentItem);
        this.mediaAssetItem = components.mediaAssetItem ? Object.assign({}, components.mediaAssetItem) : null;
        this.eventList = [];
        this.entryCommands = [];
        this.exitCommands = [];
        if (Array.isArray(components.deNormEvents) && components.deNormEvents.length > 0) {
            this.eventList = components.deNormEvents.map(function (ev) { return new DmcEvent(ev.eventState, ev.transitionStates); });
        }
        if (Array.isArray(components.commands.entry) && components.commands.entry.length > 0) {
            this.entryCommands = components.commands.entry.map(function (cmd) { return new DmcCommand(cmd); });
        }
        if (Array.isArray(components.commands.exit) && components.commands.exit.length > 0) {
            this.exitCommands = components.commands.exit.map(function (cmd) { return new DmcCommand(cmd); });
        }
    }
    Object.defineProperty(DmcMediaState.prototype, "containerObject", {
        get: function () {
            switch (this.contentItem.type) {
                case bscore_1.ContentItemType.MediaList: return { id: this.id, type: bsDmInterfaces_1.MediaStateContainerType.MediaList };
                case bscore_1.ContentItemType.PlayFile: return { id: this.id, type: bsDmInterfaces_1.MediaStateContainerType.PlayFile };
                case bscore_1.ContentItemType.SuperState: return { id: this.id, type: bsDmInterfaces_1.MediaStateContainerType.SuperState };
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DmcMediaState.prototype, "bpAvailability", {
        get: function () {
            if (lodash_1.isNil(this._bpAvailability)) {
                this._bpAvailability = this.getBpAvailability();
            }
            return this._bpAvailability;
        },
        enumerable: true,
        configurable: true
    });
    DmcMediaState.prototype.canAddEvent = function (event) {
        return this.testEventCompatibility(event);
    };
    DmcMediaState.prototype.canUpdateEvent = function (eventId, newEvent) {
        return this.testEventCompatibility(newEvent, eventId);
    };
    DmcMediaState.prototype.getBpAvailability = function () {
        return bsDmEvents_1.dmGetBpAvailabilityForEventList(this.eventList);
    };
    DmcMediaState.prototype.testForDuplicateEvents = function (eventToTest, eventIdToIgnore) {
        return bsDmEvents_1.dmEventListHasNoDuplicateEvent(this.eventList, eventToTest, eventIdToIgnore);
    };
    DmcMediaState.prototype.testEventCompatibility = function (event, eventIdToIgnore) {
        var result;
        result = bsDmEvents_1.dmIsEventCompatibleWithContentItem(event, this.contentItem.type);
        if (result.ok) {
            result = this.testForDuplicateEvents(event, eventIdToIgnore);
        }
        return result;
    };
    return DmcMediaState;
}());
exports.DmcMediaState = DmcMediaState;
var DmcMediaListMediaState = (function (_super) {
    __extends(DmcMediaListMediaState, _super);
    function DmcMediaListMediaState(mediaStateState, components, mediaListComponents) {
        var _this = _super.call(this, mediaStateState, components) || this;
        _this.itemGlobalForwardEventList = [];
        _this.itemGlobalBackwardEventList = [];
        _this.itemGlobalPlayNextCommands = [];
        _this.itemGlobalPlayPreviousCommands = [];
        _this.sourceDataFeed = null;
        if (Array.isArray(mediaListComponents.forwardEvents) && mediaListComponents.forwardEvents.length > 0) {
            _this.itemGlobalForwardEventList = mediaListComponents.forwardEvents.map(function (state) { return new DmcEvent(state); });
        }
        if (Array.isArray(mediaListComponents.backwardEvents) && mediaListComponents.backwardEvents.length > 0) {
            _this.itemGlobalBackwardEventList = mediaListComponents.backwardEvents.map(function (state) { return new DmcEvent(state); });
        }
        if (Array.isArray(mediaListComponents.playNextCommands) && mediaListComponents.playNextCommands.length > 0) {
            _this.itemGlobalPlayNextCommands = mediaListComponents.playNextCommands.map(function (state) { return new DmcCommand(state); });
        }
        if (Array.isArray(mediaListComponents.playPreviousCommands)
            && mediaListComponents.playPreviousCommands.length > 0) {
            _this.itemGlobalPlayPreviousCommands =
                mediaListComponents.playPreviousCommands.map(function (state) { return new DmcCommand(state); });
        }
        if (!lodash_1.isNil(mediaListComponents.sourceDataFeed)) {
            _this.sourceDataFeed = new DmcDataFeed(mediaListComponents.sourceDataFeed);
        }
        return _this;
    }
    DmcMediaListMediaState.prototype.canAddGlobalEvent = function (event) {
        return this.testGlobalEventCompatibility(event);
    };
    DmcMediaListMediaState.prototype.canUpdateGlobalEvent = function (eventId, newEvent) {
        return this.testGlobalEventCompatibility(newEvent, eventId);
    };
    DmcMediaListMediaState.prototype.testForDuplicateEvents = function (eventToTest, eventIdToIgnore) {
        var consolidatedEventList = this.eventList.concat(this.itemGlobalForwardEventList, this.itemGlobalBackwardEventList);
        return bsDmEvents_1.dmEventListHasNoDuplicateEvent(consolidatedEventList, eventToTest, eventIdToIgnore);
    };
    DmcMediaListMediaState.prototype.getBpAvailability = function () {
        var availability = bsDmEvents_1.dmGetBpAvailabilityForEventList(this.eventList);
        availability = bsDmEvents_1.dmGetBpAvailabilityForEventList(this.itemGlobalForwardEventList, availability);
        availability = bsDmEvents_1.dmGetBpAvailabilityForEventList(this.itemGlobalBackwardEventList, availability);
        return availability;
    };
    DmcMediaListMediaState.prototype.testGlobalEventCompatibility = function (event, eventIdToIgnore) {
        var result;
        result = bsDmEvents_1.dmIsEventCompatibleWithContentItem(event, this.contentItem.type);
        if (result.ok) {
            result = this.testForDuplicateEvents(event, eventIdToIgnore);
        }
        return result;
    };
    return DmcMediaListMediaState;
}(DmcMediaState));
exports.DmcMediaListMediaState = DmcMediaListMediaState;
function dmIsDmcMediaListMediaState(object) {
    return typeof (object) === 'object' && object instanceof DmcMediaListMediaState;
}
exports.dmIsDmcMediaListMediaState = dmIsDmcMediaListMediaState;
var DmcMediaListItem = (function (_super) {
    __extends(DmcMediaListItem, _super);
    function DmcMediaListItem(mediaStateState, components) {
        return _super.call(this, mediaStateState, components) || this;
    }
    Object.defineProperty(DmcMediaListItem.prototype, "forwardEvents", {
        get: function () {
            return this.eventList.filter(function (event) { return !lodash_1.isNil(event.action) && event.action === bscore_1.EventIntrinsicAction.SequenceForward; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DmcMediaListItem.prototype, "backwardEvents", {
        get: function () {
            return this.eventList.filter(function (event) { return !lodash_1.isNil(event.action) && event.action === bscore_1.EventIntrinsicAction.SequenceBackward; });
        },
        enumerable: true,
        configurable: true
    });
    return DmcMediaListItem;
}(DmcMediaState));
exports.DmcMediaListItem = DmcMediaListItem;
var DmcPlayFileMediaState = (function (_super) {
    __extends(DmcPlayFileMediaState, _super);
    function DmcPlayFileMediaState(mediaStateState, components, playFileComponents) {
        var _this = _super.call(this, mediaStateState, components) || this;
        _this.defaultMediaAssetItem = null;
        _this.sourceDataFeed = null;
        _this.defaultMediaAssetItem = playFileComponents.defaultMediaAssetItem;
        if (!lodash_1.isNil(playFileComponents.sourceDataFeed)) {
            _this.sourceDataFeed = new DmcDataFeed(playFileComponents.sourceDataFeed);
        }
        return _this;
    }
    return DmcPlayFileMediaState;
}(DmcMediaState));
exports.DmcPlayFileMediaState = DmcPlayFileMediaState;
function dmIsDmcPlayFileMediaState(object) {
    return typeof (object) === 'object' && object instanceof DmcPlayFileMediaState;
}
exports.dmIsDmcPlayFileMediaState = dmIsDmcPlayFileMediaState;
var DmcPlayFileItem = (function (_super) {
    __extends(DmcPlayFileItem, _super);
    function DmcPlayFileItem(mediaStateState, components) {
        return _super.call(this, mediaStateState, components) || this;
    }
    return DmcPlayFileItem;
}(DmcMediaState));
exports.DmcPlayFileItem = DmcPlayFileItem;
var DmcLiveTextMediaState = (function (_super) {
    __extends(DmcLiveTextMediaState, _super);
    function DmcLiveTextMediaState(mediaStateState, components, canvas) {
        var _this = _super.call(this, mediaStateState, components) || this;
        _this.canvas = canvas;
        return _this;
    }
    return DmcLiveTextMediaState;
}(DmcMediaState));
exports.DmcLiveTextMediaState = DmcLiveTextMediaState;
function dmIsDmcLiveTextMediaState(object) {
    return typeof (object) === 'object' && object instanceof DmcLiveTextMediaState;
}
exports.dmIsDmcLiveTextMediaState = dmIsDmcLiveTextMediaState;
var DmcEvent = (function () {
    function DmcEvent(eventState, transitionStates, commandSequence) {
        this.id = eventState.id;
        this.name = eventState.name;
        this.type = eventState.type;
        this.mediaStateId = eventState.mediaStateId;
        this.disabled = eventState.disabled ? eventState.disabled : false;
        this.data = eventState.data;
        this.action = lodash_1.isNil(eventState.action) ? bscore_1.EventIntrinsicAction.None : eventState.action;
        this.transitionList = [];
        this.commands = [];
        if (Array.isArray(transitionStates) && transitionStates.length > 0) {
            this.transitionList = transitionStates.map(function (state) { return new DmcTransition(state); });
        }
        if (Array.isArray(commandSequence) && commandSequence.length > 0) {
            this.commands = commandSequence.map(function (state) { return new DmcCommand(state); });
        }
    }
    Object.defineProperty(DmcEvent.prototype, "defaultTransition", {
        get: function () {
            if (this.transitionList && this.transitionList.length > 0) {
                var lastTransition = this.transitionList[this.transitionList.length - 1];
                if (lodash_1.isNil(lastTransition.condition)) {
                    return lastTransition;
                }
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DmcEvent.prototype, "conditionalTransitions", {
        get: function () {
            if (this.transitionList && this.transitionList.length > 0) {
                var lastTransition = this.transitionList[this.transitionList.length - 1];
                if (!lodash_1.isNil(lastTransition.condition)) {
                    return this.transitionList;
                }
                return this.transitionList.slice(0, this.transitionList.length - 1);
            }
            return [];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DmcEvent.prototype, "eventSpecification", {
        get: function () {
            return { type: this.type, data: lodash_1.cloneDeep(this.data), action: this.action };
        },
        enumerable: true,
        configurable: true
    });
    return DmcEvent;
}());
exports.DmcEvent = DmcEvent;
var DmcTransition = (function () {
    function DmcTransition(state, commandSequence) {
        this.id = state.id;
        this.name = state.name;
        this.eventId = state.eventId;
        this.targetMediaStateId = state.targetMediaStateId;
        this.type = state.type;
        this.duration = state.duration;
        if (!lodash_1.isNil(state.condition)) {
            this.condition = new DmcCondition(state.condition);
        }
        else {
            this.condition = null;
        }
        if (!lodash_1.isNil(state.conditionalAction)) {
            this.conditionalAction = state.conditionalAction;
        }
        else {
            this.conditionalAction = bscore_1.EventIntrinsicAction.None;
        }
        this.commands = [];
        if (Array.isArray(commandSequence) && commandSequence.length > 0) {
            this.commands = commandSequence.map(function (commandState) { return new DmcCommand(commandState); });
        }
    }
    Object.defineProperty(DmcTransition.prototype, "isDefaultTarget", {
        get: function () {
            return this.condition === null;
        },
        enumerable: true,
        configurable: true
    });
    return DmcTransition;
}());
exports.DmcTransition = DmcTransition;
var DmcCommand = (function () {
    function DmcCommand(state) {
        this.id = state.id;
        this.name = state.name;
        this.operations = lodash_1.cloneDeep(state.operations);
        this.sequenceId = state.sequenceId;
        if (bsDmCommands_1.dmIsTimedCommand(state)) {
            this.startTime = state.startTime;
        }
        else {
            this.startTime = null;
        }
    }
    Object.defineProperty(DmcCommand.prototype, "isTimedCommand", {
        get: function () {
            return (!lodash_1.isNil(this.startTime));
        },
        enumerable: true,
        configurable: true
    });
    return DmcCommand;
}());
exports.DmcCommand = DmcCommand;
var DmcCondition = (function () {
    function DmcCondition(state, userVariableState) {
        this.userVariableName = null;
        this.userVariableId = state.userVariableId;
        this.compareOperator = state.compareOperator;
        this.compareValue1 = state.compareValue1;
        this.compareValue2 = lodash_1.isNil(state.compareValue2) ? null : state.compareValue2;
        if (userVariableState) {
            this.userVariableName = userVariableState.name;
        }
        else if (!lodash_1.isNil(state.userVariableName)) {
            this.userVariableName = state.userVariableName;
        }
    }
    return DmcCondition;
}());
exports.DmcCondition = DmcCondition;
var DmcZone = (function () {
    function DmcZone(state, videoMode) {
        this.id = state.id;
        this.name = state.name;
        this.type = state.type;
        this.tag = state.tag;
        this.nonInteractive = state.nonInteractive;
        this.initialMediaStateId = state.initialMediaStateId;
        this.position = Object.assign({}, state.position);
        this.properties = lodash_1.cloneDeep(state.properties);
        this._videoMode = videoMode;
        this._containerObject = new DmcMediaStateContainer(this.id);
        Object.freeze(this._containerObject);
    }
    Object.defineProperty(DmcZone.prototype, "containerObject", {
        get: function () {
            return this._containerObject;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DmcZone.prototype, "absolutePosition", {
        get: function () {
            return this.position.pct ? bscore_1.bscGetAbsoluteRectForVideoMode(this.position, this._videoMode) : this.position;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DmcZone.prototype, "percentagePosition", {
        get: function () {
            return this.position.pct ? this.position : bscore_1.bscGetPercentageRectForVideoMode(this.position, this._videoMode);
        },
        enumerable: true,
        configurable: true
    });
    return DmcZone;
}());
exports.DmcZone = DmcZone;
var DmcSignMetadata = (function () {
    function DmcSignMetadata(state) {
        this.id = state.properties.id;
        this.version = state.properties.version;
        this.name = state.properties.name;
        this.videoMode = state.properties.videoMode;
        this.model = state.properties.model;
        this.monitorOrientation = state.properties.monitorOrientation;
        this.monitorOverscan = state.properties.monitorOverscan;
        this.videoConnector = state.properties.videoConnector;
        this.deviceWebPageDisplay = state.properties.deviceWebPageDisplay;
        this.backgroundScreenColor = Object.assign({}, state.properties.backgroundScreenColor);
        this.forceResolution = state.properties.forceResolution;
        this.tenBitColorEnabled = state.properties.tenBitColorEnabled;
        this.dolbyVisionEnabled = state.properties.dolbyVisionEnabled;
        this.fullResGraphicsEnabled = state.properties.fullResGraphicsEnabled;
        this.audioConfiguration = state.properties.audioConfiguration;
        this.audioAutoLevel = state.properties.audioAutoLevel;
        this.htmlEnableJavascriptConsole = state.properties.htmlEnableJavascriptConsole;
        this.alphabetizeVariableNames = state.properties.alphabetizeVariableNames;
        this.autoCreateMediaCounterVariables = state.properties.autoCreateMediaCounterVariables;
        this.resetVariablesOnPresentationStart = state.properties.resetVariablesOnPresentationStart;
        this.networkedVariablesUpdateInterval = state.properties.networkedVariablesUpdateInterval;
        this.delayScheduleChangeUntilMediaEndEvent = state.properties.delayScheduleChangeUntilMediaEndEvent;
        this.language = state.properties.language;
        this.languageKey = state.properties.languageKey;
        this.flipCoordinates = state.properties.flipCoordinates;
        this.isMosaic = state.properties.isMosaic;
        this.inactivityTimeout = state.properties.inactivityTimeout;
        this.inactivityTime = state.properties.inactivityTime;
        this.touchCursorDisplayMode = state.properties.touchCursorDisplayMode;
        this.graphicsZOrder = state.properties.graphicsZOrder;
        this.udpDestinationAddressType = state.properties.udpDestinationAddressType;
        this.udpDestinationAddress = state.properties.udpDestinationAddress;
        this.udpDestinationPort = state.properties.udpDestinationPort;
        this.udpReceiverPort = state.properties.udpReceiverPort;
        this.serialPortConfigurations = lodash_1.cloneDeep(state.serialPortConfigurations);
        this.gpio = state.gpio.slice();
        this.buttonPanels = __assign({}, state.buttonPanels);
        this.audioSignPropertyMap = __assign({}, state.audioSignPropertyMap);
        this.enableEnhancedSynchronization = lodash_1.isNil(state.properties.enableEnhancedSynchronization) ? null : __assign({}, state.properties.enableEnhancedSynchronization);
    }
    return DmcSignMetadata;
}());
exports.DmcSignMetadata = DmcSignMetadata;
var DmcHtmlSite = (function () {
    function DmcHtmlSite(state, indexAssetItem) {
        if (indexAssetItem === void 0) { indexAssetItem = null; }
        this.indexAssetItem = null;
        this.indexAssetId = bscore_1.BsAssetIdNone;
        this.url = null;
        this.enableNode = false;
        this.id = state.id;
        this.name = state.name;
        this.type = state.type;
        this.queryString = state.queryString;
        if (bsDmHtmlSite_1.dmHtmlSiteIsHostedHtmlSite(state)) {
            this.indexAssetItem = indexAssetItem;
            this.indexAssetId = state.indexAssetId;
            this.enableNode = state.enableNode;
        }
        else if (bsDmHtmlSite_1.dmHtmlSiteIsRemoteHtmlSite(state)) {
            this.url = state.url;
        }
    }
    return DmcHtmlSite;
}());
exports.DmcHtmlSite = DmcHtmlSite;
var DmcDeviceWebPage = (function () {
    function DmcDeviceWebPage(state, indexAssetItem) {
        if (indexAssetItem === void 0) { indexAssetItem = null; }
        this.indexAssetId = bscore_1.BsAssetIdNone;
        this.port = 0;
        this.id = state.id;
        this.name = state.name;
        this.indexAssetItem = indexAssetItem;
        this.indexAssetId = state.indexAssetId;
        this.port = state.port;
    }
    return DmcDeviceWebPage;
}());
exports.DmcDeviceWebPage = DmcDeviceWebPage;
var DmcPresentationWebPage = (function () {
    function DmcPresentationWebPage(mode, customPageState, customPageAssetItem) {
        this.customPage = null;
        this.mode = mode;
        if (!lodash_1.isNil(customPageState)) {
            this.customPage = new DmcDeviceWebPage(customPageState, customPageAssetItem);
        }
    }
    return DmcPresentationWebPage;
}());
exports.DmcPresentationWebPage = DmcPresentationWebPage;
var DmcDataFeed = (function () {
    function DmcDataFeed(params) {
        this.id = params.dataFeed.id;
        this.name = params.dataFeed.name;
        this.feedSourceId = params.dataFeed.feedSourceId;
        this._feedSource = params.feedSource;
        this.bsnAssetItem = lodash_1.isNil(params.assetItem) ? null : params.assetItem;
        this.usage = params.dataFeed.usage;
        this.parserPlugin = lodash_1.isNil(params.dataFeed.parserPlugin) ? bsDmInterfaces_1.BsDmIdNone : params.dataFeed.parserPlugin;
        this.autoGenerateUserVariables = params.dataFeed.autoGenerateUserVariables;
        this.userVariableAccess = params.dataFeed.userVariableAccess;
        this.isSystemFeed = lodash_1.isNil(params.dataFeed.isSystemFeed) ? false : params.dataFeed.isSystemFeed;
        if (bsDmDataFeed_1.dmIsDataFeedSourceBsnDataFeed(params.feedSource)) {
            this.supportsAudio = params.dataFeed.supportsAudio;
            this.playerTagMatching = params.dataFeed.playerTagMatching;
        }
        else {
            this.supportsAudio = false;
            this.playerTagMatching = bscore_1.PlayerTagMatchingType.DoNotMatchTags;
        }
    }
    Object.defineProperty(DmcDataFeed.prototype, "type", {
        get: function () {
            return this._feedSource.type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DmcDataFeed.prototype, "isBsnDataFeed", {
        get: function () {
            return this._feedSource.type !== bscore_1.DataFeedType.URLDataFeed;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DmcDataFeed.prototype, "updateInterval", {
        get: function () {
            return this._feedSource.updateInterval;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DmcDataFeed.prototype, "useHeadRequest", {
        get: function () {
            return this._feedSource.useHeadRequest;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DmcDataFeed.prototype, "url", {
        get: function () {
            return bsDmDataFeed_1.dmIsDataFeedSourceRemoteDataFeed(this._feedSource) ? this._feedSource.url :
                (!lodash_1.isNil(this.bsnAssetItem) && !lodash_1.isNil(this.bsnAssetItem.fileUrl) ? this.bsnAssetItem.fileUrl : '');
        },
        enumerable: true,
        configurable: true
    });
    return DmcDataFeed;
}());
exports.DmcDataFeed = DmcDataFeed;
var DmcUserVariable = (function () {
    function DmcUserVariable(state) {
        this.id = state.id;
        this.name = state.name;
        this.defaultValue = state.defaultValue;
        this.isNetworked = state.isNetworked;
        this.access = state.access;
        this.dataFeedId = state.dataFeedId;
        this.systemVariable = state.systemVariable;
    }
    return DmcUserVariable;
}());
exports.DmcUserVariable = DmcUserVariable;
var DmcBrightScriptPlugin = (function () {
    function DmcBrightScriptPlugin(state, scriptAssetItem) {
        this.id = state.id;
        this.name = state.name;
        this.assetId = state.assetId;
        this.assetItem = scriptAssetItem;
    }
    return DmcBrightScriptPlugin;
}());
exports.DmcBrightScriptPlugin = DmcBrightScriptPlugin;
var DmcParserBrightScriptPlugin = (function () {
    function DmcParserBrightScriptPlugin(state, scriptAssetItem) {
        this.id = state.id;
        this.name = state.name;
        this.assetId = state.assetId;
        this.parseFeedFunctionName = state.parseFeedFunctionName;
        this.parseUVFunctionName = state.parseUVFunctionName;
        this.userAgentFunctionName = state.userAgentFunctionName;
        this.assetItem = scriptAssetItem;
    }
    return DmcParserBrightScriptPlugin;
}());
exports.DmcParserBrightScriptPlugin = DmcParserBrightScriptPlugin;


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var lodash_1 = __webpack_require__(0);
var bscore_1 = __webpack_require__(1);
var selectors_1 = __webpack_require__(6);
var bsDmError_1 = __webpack_require__(4);
var utils_1 = __webpack_require__(3);
exports.BaseAssetItemProperties = [
    'id',
    'name',
    'path',
    'networkId',
    'location',
    'assetType',
    'scope',
    'origin',
    'locator',
    'mediaType',
    'fileSize',
    'fileHash',
    'fileUrl',
    'thumbUrl',
    'lastModifiedDate',
    'probeData',
    'refCount',
];
function dmGetFilteredAssetItem(assetItem) {
    return lodash_1.pick(assetItem, exports.BaseAssetItemProperties);
}
exports.dmGetFilteredAssetItem = dmGetFilteredAssetItem;
function dmPrepareAssetItem(state, assetItem, action) {
    var locator = bscore_1.bscGenerateAssetLocatorKey(assetItem);
    if (!locator) {
        throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Asset Item does not contain valid locator information', { action: action });
    }
    var preparedAssetItem = dmGetFilteredAssetItem(assetItem);
    preparedAssetItem.locator = locator;
    if (!preparedAssetItem.id || preparedAssetItem.id === bscore_1.BsAssetIdNone) {
        var assetId = selectors_1.dmGetAssetIdByLocator(state, { locator: locator });
        preparedAssetItem.id = assetId ? assetId : utils_1.newBsDmId();
    }
    return preparedAssetItem;
}
exports.dmPrepareAssetItem = dmPrepareAssetItem;
function dmSetAssetId(state, assetItem) {
    var locator = bscore_1.bscGenerateAssetLocatorKey(assetItem);
    var preparedAssetItem = dmGetFilteredAssetItem(assetItem);
    var assetId = selectors_1.dmGetAssetIdByLocator(state, { locator: locator });
    preparedAssetItem.id = assetId && assetId !== bscore_1.BsAssetIdNone ? assetId : utils_1.newBsDmId();
    preparedAssetItem.locator = locator;
    return preparedAssetItem;
}
exports.dmSetAssetId = dmSetAssetId;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(3);
var lodash_1 = __webpack_require__(0);
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmState_1 = __webpack_require__(5);
var bsDmContentItems_1 = __webpack_require__(13);
var bsDmDataFeed_1 = __webpack_require__(18);
var bsDmError_1 = __webpack_require__(4);
var selectors_1 = __webpack_require__(6);
var actionBase_1 = __webpack_require__(8);
var actionAssetHelper_1 = __webpack_require__(11);
var actionAssetMap_1 = __webpack_require__(9);
var actionEvent_1 = __webpack_require__(17);
var actionTransition_1 = __webpack_require__(22);
var actionHtmlSite_1 = __webpack_require__(26);
var actionDataFeed_1 = __webpack_require__(20);
var actionLiveText_1 = __webpack_require__(27);
var actionZone_1 = __webpack_require__(15);
exports.ADD_MEDIA_STATE = 'DM_ADD_MEDIA_STATE';
exports.ADD_SEQUENCED_MEDIA_STATE = 'DM_ADD_SEQUENCED_MEDIA_STATE';
exports.UPDATE_MEDIA_STATE = 'DM_UPDATE_MEDIA_STATE';
exports.DELETE_MEDIA_STATE = 'DM_DELETE_MEDIA_STATE';
exports.dmContentIsAssetItem = function (content) {
    return bscore_1.bscIsAssetItem(content);
};
function dmAddMediaStateWithContentItem(name, container, contentItem, index) {
    var isSequenced = !lodash_1.isNil(index);
    var action = {
        type: isSequenced ? exports.ADD_SEQUENCED_MEDIA_STATE : exports.ADD_MEDIA_STATE,
        payload: {
            id: utils_1.newBsDmId(),
            name: name ? name : contentItem.name,
            container: container,
            contentItem: contentItem,
        },
    };
    if (isSequenced) {
        action.payload.index = index;
    }
    return action;
}
exports.dmAddMediaStateWithContentItem = dmAddMediaStateWithContentItem;
function dmAddMediaState(name, container, content, contentData, index, contentAdditionalAsset) {
    if (contentData === void 0) { contentData = null; }
    if (index === void 0) { index = null; }
    return function (dispatch, getState) {
        var isSequenced = !lodash_1.isNil(index) || bsDmContentItems_1.dmIsMediaSequenceContainer(container);
        if (isSequenced && lodash_1.isNil(index)) {
            index = -1;
        }
        if (lodash_1.isNil(name)) {
            name = '';
        }
        var mainAction = {
            type: isSequenced ? exports.ADD_SEQUENCED_MEDIA_STATE : exports.ADD_MEDIA_STATE,
            payload: {
                id: utils_1.newBsDmId(),
                name: name,
                container: container,
            },
        };
        if (isSequenced) {
            mainAction.payload.index = lodash_1.isNil(index) ? -1 : index;
        }
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var zoneType = container.type === bsDmInterfaces_1.MediaStateContainerType.Zone ?
            selectors_1.dmGetZoneTypeById(dmState, { id: container.id }) : selectors_1.dmGetZoneTypeForMediaStateId(dmState, { id: container.id });
        var assetItem;
        var contentItem;
        if (exports.dmContentIsAssetItem(content)) {
            if (bscore_1.bscIsAssetItemPlayableContent(content)) {
                assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, content, mainAction);
                contentItem = bsDmContentItems_1.dmCreateMediaContentItem(assetItem.name, assetItem.id, assetItem.mediaType);
                var assetAction = actionAssetMap_1.dmPutAssetItem(assetItem);
                batchedActions.push(assetAction);
            }
            else if (content.assetType === bscore_1.AssetType.HtmlSite) {
                assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, content, mainAction);
                var assetAction = actionAssetMap_1.dmPutAssetItem(assetItem);
                batchedActions.push(assetAction);
                var htmlSiteAction = actionHtmlSite_1.dmAddHostedHtmlSiteWithoutAssetProcessing(assetItem.name, assetItem.id);
                var htmlSiteId = htmlSiteAction.payload.id;
                batchedActions.push(htmlSiteAction);
                contentItem = bsDmContentItems_1.dmCreateHtmlContentItem(assetItem.name, htmlSiteId);
            }
            else {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Unsupported BsAssetItem assetType');
            }
        }
        else if (bsDmDataFeed_1.dmIsDataFeedSourceSpecification(content)) {
            if (zoneType === bscore_1.ZoneType.Ticker) {
                content.usage = bscore_1.DataFeedUsageType.Text;
            }
            var dataFeedName = bsDmDataFeed_1.dmIsBsnDataFeedSourceSpecification(content) ? content.assetItem.name : name;
            var actionListParams = actionDataFeed_1.dmGetAddDataFeedActionList(dmState, dataFeedName, content);
            batchedActions.push.apply(batchedActions, actionListParams.actions);
            var dataFeedParams = actionListParams.mainAction.payload;
            var contentName = lodash_1.isNil(dataFeedParams.name) ? '' : dataFeedParams.name;
            contentItem = content.usage === bscore_1.DataFeedUsageType.Text ?
                bsDmContentItems_1.dmCreateDataFeedContentItem(contentName, dataFeedParams.id) :
                bsDmContentItems_1.dmCreateMrssDataFeedContentItem(contentName, dataFeedParams.id);
        }
        else if (bsDmContentItems_1.dmIsContentItem(content)) {
            if (bsDmContentItems_1.dmContentItemIsMediaContentItem(content)) {
                mainAction.payload.contentItem = content;
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'AddMediaState: MediaContentItems must be specified by AssetItem parameters', { action: mainAction });
            }
            else if (bsDmContentItems_1.dmContentItemIsAnyDataFeedContentItem(content)) {
                var dataFeed = selectors_1.dmGetDataFeedStateById(dmState, { id: content.dataFeedId });
                if (!lodash_1.isNil(dataFeed) && dataFeed.isSystemFeed) {
                    throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'AddMediaState: system dataFeed cannot be used in a dataFeed contentItem', { action: mainAction });
                }
            }
            contentItem = __assign({}, content);
            if (!lodash_1.isNil(contentAdditionalAsset)) {
                if (bsDmContentItems_1.dmContentItemIsMediaListOrPlayFileContentItem(contentItem)) {
                    var dataFeedSpec = contentAdditionalAsset.dataFeedSpec;
                    if (contentItem.useDataFeed && !lodash_1.isNil(dataFeedSpec)) {
                        dataFeedSpec.usage = bscore_1.DataFeedUsageType.Content;
                        var actionListParams = actionDataFeed_1.dmGetAddDataFeedActionList(dmState, null, dataFeedSpec);
                        batchedActions.push.apply(batchedActions, actionListParams.actions);
                        contentItem.dataFeedId = actionListParams.mainAction.payload.id;
                    }
                    if (bsDmContentItems_1.dmContentItemIsPlayFileContentItem(contentItem)) {
                        var defaultMedia = contentAdditionalAsset.defaultMedia;
                        if (contentItem.useDefaultMedia && !lodash_1.isNil(defaultMedia)) {
                            var defaultMediaAssetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, defaultMedia, mainAction);
                            batchedActions.push(actionAssetMap_1.dmPutAssetItem(defaultMediaAssetItem));
                            contentItem.defaultMediaId = defaultMediaAssetItem.id;
                        }
                    }
                }
            }
        }
        var contentItemData = bsDmContentItems_1.dmFilterContentItemData(contentItem.type, contentData);
        if (!lodash_1.isNil(contentItemData)) {
            contentItem = __assign({}, contentItem, contentItemData);
        }
        if (!mainAction.payload.name) {
            mainAction.payload.name = contentItem.name;
        }
        if (zoneType === bscore_1.ZoneType.BackgroundImage) {
            var backgroundStates = selectors_1.dmGetMediaStateIdsForZone(dmState, { id: container.id });
            if (backgroundStates.length >= 1) {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidOperation, 'BackgroundImage can accept only one media state', { action: mainAction });
            }
        }
        if (!bsDmContentItems_1.dmIsValidContentItemForZone(contentItem, zoneType)) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Content item type "' + contentItem.type + '" cannot be added to "' + zoneType + '" zone', { action: mainAction });
        }
        mainAction.payload.contentItem = contentItem;
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmAddMediaState = dmAddMediaState;
function dmAddLiveTextMediaState(name, container, backgroundImage, backgroundColor, backgroundWidth, backgroundHeight) {
    if (backgroundWidth === void 0) { backgroundWidth = 0; }
    if (backgroundHeight === void 0) { backgroundHeight = 0; }
    return function (dispatch, getState) {
        var liveTextActionListParams = actionLiveText_1.dmGetAddLiveTextCanvasActionList(bsDmState_1.dmFilterDmState(getState()), backgroundImage, backgroundColor, backgroundWidth, backgroundHeight);
        var batchedActions = liveTextActionListParams.actions;
        var canvasId = liveTextActionListParams.mainAction.payload.id;
        var liveTextCanvasName = lodash_1.isNil(name) ? '' : name;
        var contentItem = bsDmContentItems_1.dmCreateLiveTextContentItem(liveTextCanvasName, canvasId);
        var mainAction = {
            type: exports.ADD_MEDIA_STATE,
            payload: {
                id: utils_1.newBsDmId(),
                name: liveTextCanvasName,
                container: container,
                contentItem: contentItem,
            },
        };
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmAddLiveTextMediaState = dmAddLiveTextMediaState;
function dmUpdateMediaState(params) {
    return function (dispatch, getState) {
        return doUpdateMediaState(params, dispatch, getState);
    };
}
exports.dmUpdateMediaState = dmUpdateMediaState;
function doUpdateMediaState(params, dispatch, getState) {
    var mainAction = {
        type: exports.UPDATE_MEDIA_STATE,
        payload: lodash_1.pick(params, ['id', 'name']),
    };
    var batchedActions = [];
    var dmState = bsDmState_1.dmFilterDmState(getState());
    var currentMediaStateState = selectors_1.dmGetMediaStateStateById(dmState, { id: params.id });
    if (!currentMediaStateState) {
        throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Cannot update mediaState: Invalid mediaState ID');
    }
    var existingContentItem = currentMediaStateState.contentItem;
    var contentItem;
    if (params.content) {
        var assetItem = void 0;
        if (exports.dmContentIsAssetItem(params.content)) {
            assetItem = params.content;
            if (bscore_1.bscIsAssetItemPlayableContent(assetItem)) {
                assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, params.content, mainAction);
                if (bsDmContentItems_1.dmContentItemIsMediaContentItem(existingContentItem)) {
                    batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(existingContentItem.assetId));
                }
                contentItem = bsDmContentItems_1.dmCreateMediaContentItem(assetItem.name, assetItem.id, assetItem.mediaType);
                batchedActions.push(actionAssetMap_1.dmPutAssetItem(assetItem));
            }
            else {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateMediaState: only MediaContentItems can be updated using an AssetItem');
            }
        }
        else if (bsDmDataFeed_1.dmIsDataFeedSourceSpecification(params.content)) {
            if (bsDmContentItems_1.dmContentItemIsAnyDataFeedContentItem(existingContentItem)) {
                var currentZoneType = selectors_1.dmGetZoneTypeForMediaStateId(dmState, { id: currentMediaStateState.id });
                if (currentZoneType === bscore_1.ZoneType.Ticker) {
                    params.content.usage = bscore_1.DataFeedUsageType.Text;
                }
                var dataFeedUpdateParams = {
                    id: existingContentItem.dataFeedId,
                    feedSpec: params.content,
                };
                if (bsDmDataFeed_1.dmIsBsnDataFeedSourceSpecification(params.content)) {
                    dataFeedUpdateParams.name = params.content.assetItem.name;
                }
                var actionListParams = actionDataFeed_1.dmGetUpdateDataFeedActionList(dmState, dataFeedUpdateParams);
                batchedActions.push.apply(batchedActions, actionListParams.actions);
                var dataFeedParams = actionListParams.mainAction.payload;
                var contentName = lodash_1.isNil(dataFeedParams.name) ? '' : dataFeedParams.name;
                contentItem = params.content.usage === bscore_1.DataFeedUsageType.Text ?
                    bsDmContentItems_1.dmCreateDataFeedContentItem(contentName, dataFeedParams.id) :
                    bsDmContentItems_1.dmCreateMrssDataFeedContentItem(contentName, dataFeedParams.id);
            }
            else {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateMediaState: cannot change ContentItem to a DataFeed ContentItem');
            }
        }
        else if (bsDmContentItems_1.dmIsContentItem(params.content)) {
            if (bsDmContentItems_1.dmContentItemIsMediaContentItem(params.content)) {
                mainAction.payload.contentItem = params.content;
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateMediaState: MediaContentItems must be specified by AssetItem parameters', { action: mainAction });
            }
            else if (bsDmContentItems_1.dmContentItemIsAnyDataFeedContentItem(params.content)) {
                var dataFeed = selectors_1.dmGetDataFeedStateById(dmState, { id: params.content.dataFeedId });
                if (!lodash_1.isNil(dataFeed) && dataFeed.isSystemFeed) {
                    throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateMediaState: system dataFeed cannot be used in a dataFeed contentItem', { action: mainAction });
                }
            }
            if (bsDmContentItems_1.dmContentItemIsMediaContentItem(existingContentItem)) {
                batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(existingContentItem.assetId));
            }
            contentItem = __assign({}, params.content);
        }
        var contentItemData = bsDmContentItems_1.dmFilterContentItemData(contentItem.type, params.contentData);
        if (contentItemData) {
            contentItem = __assign({}, contentItem, contentItemData);
        }
        var zoneId = selectors_1.dmGetZoneIdForMediaStateId(dmState, { id: currentMediaStateState.id });
        var zoneType = selectors_1.dmGetZoneTypeById(dmState, { id: zoneId });
        var isNonInteractiveZone = selectors_1.dmGetZoneNonInteractiveById(dmState, { id: zoneId });
        var contentItemValid = isNonInteractiveZone ?
            bsDmContentItems_1.dmIsValidContentItemForPlaylist(contentItem, zoneType) : bsDmContentItems_1.dmIsValidContentItemForZone(contentItem, zoneType);
        if (!contentItemValid) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateMediaState: Content item type "' + contentItem.type
                + '" cannot be added to "' + zoneType + '" zone', { action: mainAction });
        }
    }
    else if (params.contentData) {
        var filteredData = bsDmContentItems_1.dmFilterContentItemData(existingContentItem.type, params.contentData);
        if (lodash_1.isNil(filteredData) || Object.keys(filteredData).length === 0) {
            contentItem = null;
        }
        else {
            contentItem = __assign({}, existingContentItem, filteredData);
        }
    }
    if ((lodash_1.isNil(contentItem) || bsDmContentItems_1.dmContentItemIsMediaListOrPlayFileContentItem(contentItem))
        && bsDmContentItems_1.dmContentItemIsMediaListOrPlayFileContentItem(existingContentItem)) {
        var dataFeedSpec = void 0;
        if (!lodash_1.isNil(params.contentAdditionalAsset)) {
            dataFeedSpec = params.contentAdditionalAsset.dataFeedSpec;
        }
        if (lodash_1.isNil(contentItem)) {
            contentItem = __assign({}, existingContentItem);
        }
        if (existingContentItem.useDataFeed !== contentItem.useDataFeed) {
            if (contentItem.useDataFeed) {
                if (!lodash_1.isNil(dataFeedSpec)) {
                    dataFeedSpec.usage = bscore_1.DataFeedUsageType.Content;
                    var actionListParams = actionDataFeed_1.dmGetAddDataFeedActionList(dmState, null, dataFeedSpec);
                    batchedActions.push.apply(batchedActions, actionListParams.actions);
                    contentItem.dataFeedId = actionListParams.mainAction.payload.id;
                }
                else {
                    contentItem.dataFeedId = bsDmInterfaces_1.BsDmIdNone;
                }
                var itemSequenceObject = selectors_1.dmGetMediaStateSequenceForContainer(dmState, { id: params.id });
                if (!lodash_1.isNil(itemSequenceObject)) {
                    var deleteParams = dmGetMediaStateDeleteParams(dmState, itemSequenceObject.sequence);
                    batchedActions.push(dmDeleteMediaStateWithParams(deleteParams));
                }
            }
            else {
                var dataFeedId = existingContentItem.dataFeedId;
                if (utils_1.isValidBsDmId(dataFeedId)) {
                    batchedActions.push(actionDataFeed_1.dmDeleteDataFeedWithParams(actionDataFeed_1.dmGetDataFeedDeleteParams(dmState, dataFeedId)));
                }
                contentItem.dataFeedId = bsDmInterfaces_1.BsDmIdNone;
            }
        }
        else if (contentItem.useDataFeed) {
            if (!lodash_1.isNil(dataFeedSpec)) {
                dataFeedSpec.usage = bscore_1.DataFeedUsageType.Content;
                var actionListParams = void 0;
                if (utils_1.isValidBsDmId(contentItem.dataFeedId)) {
                    actionListParams = actionDataFeed_1.dmGetUpdateDataFeedActionList(dmState, { id: contentItem.dataFeedId, feedSpec: dataFeedSpec });
                }
                else {
                    actionListParams = actionDataFeed_1.dmGetAddDataFeedActionList(dmState, null, dataFeedSpec);
                    contentItem.dataFeedId = actionListParams.mainAction.payload.id;
                }
                batchedActions.push.apply(batchedActions, actionListParams.actions);
            }
        }
    }
    if (params.contentAdditionalAsset !== undefined) {
        if (bsDmContentItems_1.dmContentItemIsPlayFileContentItem(contentItem)
            || (lodash_1.isNil(contentItem) && bsDmContentItems_1.dmContentItemIsPlayFileContentItem(existingContentItem))) {
            var defaultMediaAssetItem = params.contentAdditionalAsset.defaultMedia;
            if (defaultMediaAssetItem !== undefined) {
                if (lodash_1.isNil(contentItem)) {
                    contentItem = __assign({}, existingContentItem);
                }
                if (bsDmContentItems_1.dmContentItemIsPlayFileContentItem(existingContentItem)
                    && utils_1.isValidBsDmId(existingContentItem.defaultMediaId)) {
                    batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(existingContentItem.defaultMediaId));
                    contentItem.defaultMediaId = bscore_1.BsAssetIdNone;
                }
                if (defaultMediaAssetItem !== null) {
                    var assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, defaultMediaAssetItem, mainAction);
                    batchedActions.push(actionAssetMap_1.dmPutAssetItem(assetItem));
                    contentItem.defaultMediaId = assetItem.id;
                }
            }
        }
    }
    if (params.contentName && lodash_1.isNil(contentItem)) {
        contentItem = __assign({}, existingContentItem);
    }
    if (!lodash_1.isNil(contentItem)) {
        if (params.contentName) {
            contentItem.name = params.contentName;
        }
        mainAction.payload.contentItem = contentItem;
    }
    batchedActions.push(mainAction);
    dispatch(actionBase_1.dmBatchActions(batchedActions));
    return mainAction;
}
exports.doUpdateMediaState = doUpdateMediaState;
function dmUpdateMediaStateContentItem(id, contentItem) {
    return {
        type: exports.UPDATE_MEDIA_STATE,
        payload: { id: id, contentItem: contentItem },
    };
}
exports.dmUpdateMediaStateContentItem = dmUpdateMediaStateContentItem;
function dmGetMediaStateDeleteParams(state, id, includeIncomingTransitions) {
    var _a, _b, _c, _d;
    if (includeIncomingTransitions === void 0) { includeIncomingTransitions = false; }
    var deleteParams = {
        mediaStateIds: (Array.isArray(id) ? id : [id]).filter(utils_1.isValidBsDmId),
        dataFeedIds: [],
        dataFeedSourceIds: [],
        assetIds: [],
        eventIds: [],
        transitionIds: [],
        commandIds: [],
        liveTextCanvasIds: [],
        liveTextItemIds: [],
        liveTextGroupIds: [],
    };
    var getContainedMediaStateIds = function (containerId) {
        if (selectors_1.dmIsMediaStateContainer(state, { id: containerId })) {
            var ids_1 = selectors_1.dmGetContainedMediaStateIdsForMediaState(state, { id: containerId });
            var outerIds = ids_1.slice();
            outerIds.forEach(function (outerId) {
                var innerIds = getContainedMediaStateIds(outerId);
                if (innerIds) {
                    ids_1.push.apply(ids_1, innerIds);
                }
            });
            if (ids_1.length) {
                return ids_1;
            }
        }
        return null;
    };
    var originalMediaStateIds = deleteParams.mediaStateIds.slice();
    var invalidMediaStateIds = [];
    originalMediaStateIds.forEach(function (mediaStateId) {
        var _a;
        var mediaStateState = selectors_1.dmGetMediaStateStateById(state, { id: mediaStateId });
        if (!lodash_1.isNil(mediaStateState)) {
            var containedMediaStateIds = getContainedMediaStateIds(mediaStateId);
            if (containedMediaStateIds) {
                (_a = deleteParams.mediaStateIds).push.apply(_a, containedMediaStateIds);
            }
        }
        else {
            invalidMediaStateIds.push(mediaStateId);
        }
    });
    if (invalidMediaStateIds.length) {
        lodash_1.pullAll(deleteParams.mediaStateIds, invalidMediaStateIds);
    }
    deleteParams.mediaStateIds.forEach(function (mediaStateId) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        var mediaStateEventIds = selectors_1.dmGetAllEventIdsForMediaState(state, { id: mediaStateId });
        if (mediaStateEventIds.length) {
            (_a = deleteParams.eventIds).push.apply(_a, mediaStateEventIds);
        }
        var entryCommandIds = selectors_1.dmGetEntryCommandIdsForMediaState(state, { id: mediaStateId });
        var exitCommandIds = selectors_1.dmGetExitCommandIdsForMediaState(state, { id: mediaStateId });
        if (entryCommandIds.length || exitCommandIds.length) {
            (_b = deleteParams.commandIds).push.apply(_b, entryCommandIds.concat(exitCommandIds));
        }
        var dataFeedIds = selectors_1.dmGetDataFeedIdsForMediaState(state, { id: mediaStateId });
        if (dataFeedIds.length) {
            (_c = deleteParams.dataFeedIds).push.apply(_c, dataFeedIds);
        }
        var mediaStateState = selectors_1.dmGetMediaStateStateById(state, { id: mediaStateId });
        var contentItem = mediaStateState.contentItem;
        if (bsDmContentItems_1.dmContentItemIsMediaContentItem(contentItem)) {
            deleteParams.assetIds.push(contentItem.assetId);
        }
        else if (bsDmContentItems_1.dmContentItemIsMediaListContentItem(contentItem)) {
            var seqNextCommandIds = selectors_1.dmGetSequenceItemNextCommandIdsForMediaState(state, { id: mediaStateId });
            var seqPrevCommandIds = selectors_1.dmGetSequenceItemPreviousCommandIdsForMediaState(state, { id: mediaStateId });
            if (seqNextCommandIds.length || seqPrevCommandIds.length) {
                (_d = deleteParams.commandIds).push.apply(_d, seqNextCommandIds.concat(seqPrevCommandIds));
            }
        }
        else if (bsDmContentItems_1.dmContentItemIsPlayFileContentItem(contentItem)) {
            var defaultMediaId = contentItem.defaultMediaId;
            if (utils_1.isValidBsDmId(defaultMediaId)) {
                deleteParams.assetIds.push(defaultMediaId);
            }
        }
        else if (bsDmContentItems_1.dmContentItemIsLiveTextContentItem(contentItem)) {
            var liveTextDeleteItems = actionLiveText_1.dmGetLiveTextCanvasDeleteParams(state, contentItem.canvasId);
            deleteParams.liveTextCanvasIds.push(contentItem.canvasId);
            if (liveTextDeleteItems.liveTextItemIds.length) {
                (_e = deleteParams.liveTextItemIds).push.apply(_e, liveTextDeleteItems.liveTextItemIds);
            }
            if (liveTextDeleteItems.dataFeedIds.length) {
                (_f = deleteParams.dataFeedIds).push.apply(_f, liveTextDeleteItems.dataFeedIds);
            }
            if (liveTextDeleteItems.assetIds.length) {
                (_g = deleteParams.assetIds).push.apply(_g, liveTextDeleteItems.assetIds);
            }
        }
        if (includeIncomingTransitions) {
            var transitionIds = selectors_1.dmGetIncomingTransitionIdsForMediaState(state, { id: mediaStateId });
            if (transitionIds.length) {
                (_h = deleteParams.transitionIds).push.apply(_h, transitionIds);
                transitionIds.forEach(function (transitionId) {
                    var transitionState = selectors_1.dmGetTransitionStateById(state, { id: transitionId });
                    var event = selectors_1.dmGetEventById(state, { id: transitionState.eventId });
                    if (!lodash_1.isNil(event) && !lodash_1.isNil(event.defaultTransition)
                        && event.conditionalTransitions.length === 0
                        && event.commands.length === 0) {
                        deleteParams.eventIds.push(event.id);
                    }
                });
            }
        }
    });
    if (includeIncomingTransitions) {
        deleteParams.eventIds = lodash_1.uniq(deleteParams.eventIds);
    }
    var eventDeleteParams = actionEvent_1.dmGetEventDeleteParams(state, deleteParams.eventIds);
    (_a = deleteParams.transitionIds).push.apply(_a, eventDeleteParams.transitionIds);
    if (eventDeleteParams.commandIds.length) {
        (_b = deleteParams.commandIds).push.apply(_b, eventDeleteParams.commandIds);
    }
    if (includeIncomingTransitions) {
        deleteParams.transitionIds = lodash_1.uniq(deleteParams.transitionIds);
    }
    var transitionDeleteParams = actionTransition_1.dmGetTransitionDeleteParams(state, deleteParams.transitionIds);
    if (transitionDeleteParams.commandIds.length) {
        (_c = deleteParams.commandIds).push.apply(_c, transitionDeleteParams.commandIds);
    }
    var dataFeedDeleteParams = actionDataFeed_1.dmGetDataFeedDeleteParams(state, deleteParams.dataFeedIds);
    deleteParams.dataFeedSourceIds = dataFeedDeleteParams.dataFeedSourceIds;
    if (dataFeedDeleteParams.assetIds.length) {
        (_d = deleteParams.assetIds).push.apply(_d, dataFeedDeleteParams.assetIds);
    }
    return deleteParams;
}
exports.dmGetMediaStateDeleteParams = dmGetMediaStateDeleteParams;
function dmDeleteMediaStateWithParams(params) {
    return {
        type: exports.DELETE_MEDIA_STATE,
        payload: params,
    };
}
exports.dmDeleteMediaStateWithParams = dmDeleteMediaStateWithParams;
function dmDeleteMediaState(id) {
    return function (dispatch, getState) {
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var zoneMap = new Map();
        var addToZoneMap = function (mediaStateId) {
            var mediaState = selectors_1.dmGetMediaStateStateById(dmState, { id: mediaStateId });
            if (mediaState && mediaState.container.type === bsDmInterfaces_1.MediaStateContainerType.Zone) {
                var zoneMediaStateArray = zoneMap.get(mediaState.container.id);
                if (lodash_1.isNil(zoneMediaStateArray)) {
                    zoneMap.set(mediaState.container.id, [mediaStateId]);
                }
                else {
                    zoneMediaStateArray.push(mediaStateId);
                }
            }
        };
        if (Array.isArray(id)) {
            id.forEach(addToZoneMap);
        }
        else {
            addToZoneMap(id);
        }
        zoneMap.forEach(function (mediaStateIdsToDelete, zoneId) {
            var currentInitialState = selectors_1.dmGetInitialMediaStateIdForZone(dmState, { id: zoneId });
            if (!lodash_1.isNil(currentInitialState) && mediaStateIdsToDelete.indexOf(currentInitialState) >= 0) {
                var zoneMediaStateIds = selectors_1.dmGetMediaStateIdsForZone(dmState, { id: zoneId });
                var remainingMediaStates = lodash_1.without.apply(void 0, [zoneMediaStateIds].concat(mediaStateIdsToDelete));
                var newInitialMediaStateId = bsDmInterfaces_1.BsDmIdNone;
                if (remainingMediaStates.length > 0) {
                    newInitialMediaStateId = remainingMediaStates[0];
                }
                batchedActions.push(actionZone_1.dmUpdateZoneWithoutTest({ id: zoneId, initialMediaStateId: newInitialMediaStateId }));
            }
        });
        var deleteParams = dmGetMediaStateDeleteParams(dmState, id, true);
        var mainAction = dmDeleteMediaStateWithParams(deleteParams);
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmDeleteMediaState = dmDeleteMediaState;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmParameterizedStrings_1 = __webpack_require__(14);
var bsDmDefaults_1 = __webpack_require__(16);
var lodash_1 = __webpack_require__(0);
function dmGetZoneMediaStateContainer(zoneId) {
    return {
        id: zoneId,
        type: bsDmInterfaces_1.MediaStateContainerType.Zone,
    };
}
exports.dmGetZoneMediaStateContainer = dmGetZoneMediaStateContainer;
function dmGetMediaStateContainer(id, type) {
    return { id: id, type: type };
}
exports.dmGetMediaStateContainer = dmGetMediaStateContainer;
function dmIsMediaSequenceContainer(container) {
    return container.type === bsDmInterfaces_1.MediaStateContainerType.MediaList || container.type === bsDmInterfaces_1.MediaStateContainerType.PlayFile;
}
exports.dmIsMediaSequenceContainer = dmIsMediaSequenceContainer;
function dmIsZoneTypeInteractiveCompatible(type) {
    return type !== bscore_1.ZoneType.Ticker
        && type !== bscore_1.ZoneType.Clock
        && type !== bscore_1.ZoneType.BackgroundImage;
}
exports.dmIsZoneTypeInteractiveCompatible = dmIsZoneTypeInteractiveCompatible;
function dmCreateAssetItemFromLocalFile(fullPath, id, mediaType, assetType) {
    if (id === void 0) { id = bscore_1.BsAssetIdNone; }
    if (mediaType === void 0) { mediaType = null; }
    if (assetType === void 0) { assetType = null; }
    var name = fullPath.replace(/^.*[\\\/]/, '');
    var path = fullPath.substr(0, fullPath.length - name.length);
    var fileTypeInfo;
    if (mediaType) {
        fileTypeInfo = { assetType: bscore_1.AssetType.Content, mediaType: mediaType };
    }
    else {
        fileTypeInfo = bscore_1.bscGetBscFileTypeInfo(name);
    }
    var assetItem = {
        id: id,
        name: name,
        path: path,
        networkId: 0,
        location: bscore_1.AssetLocation.Local,
        locator: bscore_1.bscGetLocalAssetLocatorKey(fullPath),
        assetType: assetType ? assetType : fileTypeInfo.assetType,
        scope: '',
    };
    if (assetItem.assetType === bscore_1.AssetType.Content) {
        assetItem.mediaType = fileTypeInfo.mediaType;
    }
    return assetItem;
}
exports.dmCreateAssetItemFromLocalFile = dmCreateAssetItemFromLocalFile;
function dmGetWidgetCustomFontAssetId(widget) {
    return !lodash_1.isNil(widget) && !lodash_1.isNil(widget.font)
        && widget.font !== bsDmInterfaces_1.DmDefaultFontName && bscore_1.bscIsValidAssetId(widget.font) ? widget.font : null;
}
exports.dmGetWidgetCustomFontAssetId = dmGetWidgetCustomFontAssetId;
function dmIsContentItem(value) {
    return typeof value === 'object'
        && value.hasOwnProperty('name')
        && value.hasOwnProperty('type');
}
exports.dmIsContentItem = dmIsContentItem;
function dmCreateMediaContentItem(name, assetId, mediaType) {
    switch (mediaType) {
        case bscore_1.MediaType.Video:
            return dmCreateVideoContentItem(name, assetId);
        case bscore_1.MediaType.Audio:
            return dmCreateAudioContentItem(name, assetId);
        case bscore_1.MediaType.Image:
            return dmCreateImageContentItem(name, assetId);
        case bscore_1.MediaType.Text:
            return {
                name: name,
                type: bscore_1.ContentItemType.Text,
                assetId: assetId,
            };
        default:
            return null;
    }
}
exports.dmCreateMediaContentItem = dmCreateMediaContentItem;
function dmCreatePlayFileItemFromMediaContentItem(mediaContentItem, key, exportKey, name) {
    if (key === void 0) { key = null; }
    if (exportKey === void 0) { exportKey = true; }
    if (!lodash_1.isNil(mediaContentItem)) {
        if (lodash_1.isNil(key)) {
            key = bscore_1.bscStripFileExtension(mediaContentItem.name);
        }
        var label = lodash_1.isNil(name) ? mediaContentItem.name : name;
        switch (mediaContentItem.type) {
            case bscore_1.ContentItemType.Video:
                return __assign({}, mediaContentItem, { key: key, exportKey: exportKey, name: label });
            case bscore_1.ContentItemType.Image:
                return __assign({}, mediaContentItem, { key: key, exportKey: exportKey, name: label });
            case bscore_1.ContentItemType.Audio:
                return __assign({}, mediaContentItem, { key: key, exportKey: exportKey, name: label });
        }
    }
    return null;
}
exports.dmCreatePlayFileItemFromMediaContentItem = dmCreatePlayFileItemFromMediaContentItem;
var MediaContentItemTypeSet = new Set([
    bscore_1.ContentItemType.Video, bscore_1.ContentItemType.Image, bscore_1.ContentItemType.Audio, bscore_1.ContentItemType.Text
]);
function dmContentItemIsMediaContentItem(contentItem) {
    return !lodash_1.isNil(contentItem)
        && contentItem.hasOwnProperty('assetId')
        && MediaContentItemTypeSet.has(contentItem.type);
}
exports.dmContentItemIsMediaContentItem = dmContentItemIsMediaContentItem;
function dmContentItemIsMediaSequenceContentItem(contentItem) {
    return !lodash_1.isNil(contentItem)
        && (contentItem.type === bscore_1.ContentItemType.MediaList || contentItem.type === bscore_1.ContentItemType.PlayFile);
}
exports.dmContentItemIsMediaSequenceContentItem = dmContentItemIsMediaSequenceContentItem;
function dmContainerIsMediaSequenceContainer(container) {
    return container.type === bsDmInterfaces_1.MediaStateContainerType.MediaList || container.type === bsDmInterfaces_1.MediaStateContainerType.PlayFile;
}
exports.dmContainerIsMediaSequenceContainer = dmContainerIsMediaSequenceContainer;
function dmCreateVideoContentItem(name, assetId, volume, videoDisplayMode, automaticallyLoop) {
    var defaults = bsDmDefaults_1.dmGetDefaultVideoContentItemData();
    return {
        name: name,
        type: bscore_1.ContentItemType.Video,
        assetId: assetId,
        volume: (volume === undefined ? defaults.volume : volume),
        videoDisplayMode: (videoDisplayMode === undefined ? defaults.videoDisplayMode : videoDisplayMode),
        automaticallyLoop: (automaticallyLoop === undefined ? defaults.automaticallyLoop : automaticallyLoop),
    };
}
exports.dmCreateVideoContentItem = dmCreateVideoContentItem;
function dmContentItemIsVideoContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) && contentItem.type === bscore_1.ContentItemType.Video;
}
exports.dmContentItemIsVideoContentItem = dmContentItemIsVideoContentItem;
function dmCreateAudioContentItem(name, assetId, volume) {
    var defaults = bsDmDefaults_1.dmGetDefaultAudioContentItemData();
    return {
        name: name,
        type: bscore_1.ContentItemType.Audio,
        assetId: assetId,
        volume: (volume === undefined ? defaults.volume : volume),
    };
}
exports.dmCreateAudioContentItem = dmCreateAudioContentItem;
function dmContentItemIsAudioContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) && contentItem.type === bscore_1.ContentItemType.Audio;
}
exports.dmContentItemIsAudioContentItem = dmContentItemIsAudioContentItem;
function dmCreateImageContentItem(name, assetId, useImageBuffer, videoPlayerRequired, defaultTransition, transitionDuration) {
    var defaults = bsDmDefaults_1.dmGetDefaultImageContentItemData();
    return {
        name: name,
        type: bscore_1.ContentItemType.Image,
        assetId: assetId,
        useImageBuffer: (useImageBuffer === undefined ? defaults.useImageBuffer : useImageBuffer),
        videoPlayerRequired: (videoPlayerRequired === undefined ? defaults.videoPlayerRequired : videoPlayerRequired),
        defaultTransition: (defaultTransition === undefined ? defaults.defaultTransition : defaultTransition),
        transitionDuration: (transitionDuration === undefined ? defaults.transitionDuration : transitionDuration),
    };
}
exports.dmCreateImageContentItem = dmCreateImageContentItem;
function dmContentItemIsImageContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) && contentItem.type === bscore_1.ContentItemType.Image;
}
exports.dmContentItemIsImageContentItem = dmContentItemIsImageContentItem;
function dmCreateHtmlContentItem(name, siteId, enableBrightSignJavascriptObjects, enableCrossDomainPolicyChecks, ignoreHttpsCertificateErrors, enableCamera, enableMouseEvents, displayCursor, hwzOn, useUserStylesheet, userStylesheetAssetId, customFonts) {
    var defaults = bsDmDefaults_1.dmGetDefaultHtmlContentItemData();
    var contentItemData = {
        enableBrightSignJavascriptObjects: (lodash_1.isNil(enableBrightSignJavascriptObjects) ?
            defaults.enableBrightSignJavascriptObjects : enableBrightSignJavascriptObjects),
        enableCrossDomainPolicyChecks: (lodash_1.isNil(enableCrossDomainPolicyChecks) ?
            defaults.enableCrossDomainPolicyChecks : enableCrossDomainPolicyChecks),
        ignoreHttpsCertificateErrors: (lodash_1.isNil(ignoreHttpsCertificateErrors) ?
            defaults.ignoreHttpsCertificateErrors : ignoreHttpsCertificateErrors),
        enableCamera: (lodash_1.isNil(enableCamera) ? defaults.enableCamera : enableCamera),
        enableMouseEvents: (lodash_1.isNil(enableMouseEvents) ? defaults.enableMouseEvents : enableMouseEvents),
        displayCursor: (lodash_1.isNil(displayCursor) ? defaults.displayCursor : displayCursor),
        hwzOn: (lodash_1.isNil(hwzOn) ? defaults.hwzOn : hwzOn),
        useUserStylesheet: (lodash_1.isNil(userStylesheetAssetId) ?
            defaults.useUserStylesheet : (lodash_1.isNil(useUserStylesheet) ? false : useUserStylesheet)),
    };
    if (contentItemData.useUserStylesheet) {
        contentItemData.userStylesheetAssetId = !lodash_1.isNil(userStylesheetAssetId) ? userStylesheetAssetId : bscore_1.BsAssetIdNone;
    }
    if (!lodash_1.isNil(customFonts)) {
        contentItemData.customFonts = customFonts;
    }
    return Object.assign({ name: name, type: bscore_1.ContentItemType.Html, siteId: siteId }, contentItemData);
}
exports.dmCreateHtmlContentItem = dmCreateHtmlContentItem;
function dmContentItemIsHtmlContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) && contentItem.type === bscore_1.ContentItemType.Html;
}
exports.dmContentItemIsHtmlContentItem = dmContentItemIsHtmlContentItem;
function dmCreateLiveVideoContentItem(name, volume, overscan) {
    var defaults = bsDmDefaults_1.dmGetDefaultLiveVideoContentItemData();
    return {
        name: name,
        type: bscore_1.ContentItemType.LiveVideo,
        volume: (volume === undefined ? defaults.volume : volume),
        overscan: (overscan === undefined ? defaults.overscan : overscan),
    };
}
exports.dmCreateLiveVideoContentItem = dmCreateLiveVideoContentItem;
function dmContentItemIsLiveVideoContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) && contentItem.type === bscore_1.ContentItemType.LiveVideo;
}
exports.dmContentItemIsLiveVideoContentItem = dmContentItemIsLiveVideoContentItem;
function dmCreateDataFeedContentItem(name, dataFeedId) {
    return {
        name: name,
        type: bscore_1.ContentItemType.DataFeed,
        dataFeedId: dataFeedId,
    };
}
exports.dmCreateDataFeedContentItem = dmCreateDataFeedContentItem;
function dmContentItemIsTextFeedContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) && contentItem.type === bscore_1.ContentItemType.DataFeed;
}
exports.dmContentItemIsTextFeedContentItem = dmContentItemIsTextFeedContentItem;
function dmCreateMrssDataFeedContentItem(name, dataFeedId, videoPlayerRequired) {
    var defaults = bsDmDefaults_1.dmGetDefaultMrssDataFeedContentItemData();
    return {
        name: name,
        type: bscore_1.ContentItemType.MrssFeed,
        dataFeedId: dataFeedId,
        videoPlayerRequired: (videoPlayerRequired === undefined ? defaults.videoPlayerRequired : videoPlayerRequired),
    };
}
exports.dmCreateMrssDataFeedContentItem = dmCreateMrssDataFeedContentItem;
function dmContentItemIsMrssDataFeedContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) && contentItem.type === bscore_1.ContentItemType.MrssFeed;
}
exports.dmContentItemIsMrssDataFeedContentItem = dmContentItemIsMrssDataFeedContentItem;
function dmContentItemIsAnyDataFeedContentItem(contentItem) {
    return !lodash_1.isNil(contentItem)
        && (contentItem.type === bscore_1.ContentItemType.DataFeed || contentItem.type === bscore_1.ContentItemType.MrssFeed);
}
exports.dmContentItemIsAnyDataFeedContentItem = dmContentItemIsAnyDataFeedContentItem;
function dmCreateTwitterFeedContentItem(name, props) {
    var defaults = bsDmDefaults_1.dmGetDefaultTwitterFeedContentItemData();
    return {
        name: lodash_1.isNil(name) ? '' : name,
        type: bscore_1.ContentItemType.TwitterFeed,
        userName: (props.userName === undefined ? defaults.userName : props.userName),
        updateInterval: (props.updateInterval === undefined ? defaults.updateInterval : props.updateInterval),
        restrictNumberOfTweets: (props.restrictNumberOfTweets === undefined ? defaults.restrictNumberOfTweets : props.restrictNumberOfTweets),
        numberOfTweetsToShow: (props.numberOfTweetsToShow === undefined ? defaults.numberOfTweetsToShow : props.numberOfTweetsToShow),
        numberOfRecentDaysForTweets: (props.numberOfRecentDaysForTweets === undefined ?
            defaults.numberOfRecentDaysForTweets : props.numberOfRecentDaysForTweets),
        authToken: props.authToken,
        encryptedTwitterSecrets: props.encryptedTwitterSecrets,
    };
}
exports.dmCreateTwitterFeedContentItem = dmCreateTwitterFeedContentItem;
function dmContentItemIsTwitterFeedContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) && contentItem.type === bscore_1.ContentItemType.TwitterFeed;
}
exports.dmContentItemIsTwitterFeedContentItem = dmContentItemIsTwitterFeedContentItem;
function dmCreateUserVariableContentItem(name, userVariableId) {
    return {
        name: lodash_1.isNil(name) ? '' : name,
        type: bscore_1.ContentItemType.UserVariable,
        userVariableId: userVariableId,
    };
}
exports.dmCreateUserVariableContentItem = dmCreateUserVariableContentItem;
function dmContentItemIsUserVariableContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) && contentItem.type === bscore_1.ContentItemType.UserVariable;
}
exports.dmContentItemIsUserVariableContentItem = dmContentItemIsUserVariableContentItem;
function dmCreateVideoStreamContentItem(name, url, volume) {
    var defaults = bsDmDefaults_1.dmGetDefaultVideoStreamContentItemData();
    return {
        name: name,
        type: bscore_1.ContentItemType.VideoStream,
        url: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(url),
        volume: (volume === undefined ? defaults.volume : volume),
    };
}
exports.dmCreateVideoStreamContentItem = dmCreateVideoStreamContentItem;
function dmContentItemIsVideoStreamContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) && contentItem.type === bscore_1.ContentItemType.VideoStream;
}
exports.dmContentItemIsVideoStreamContentItem = dmContentItemIsVideoStreamContentItem;
function dmCreateAudioStreamContentItem(name, url, volume) {
    var defaults = bsDmDefaults_1.dmGetDefaultAudioStreamContentItemData();
    return {
        name: name,
        type: bscore_1.ContentItemType.AudioStream,
        url: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(url),
        volume: (volume === undefined ? defaults.volume : volume),
    };
}
exports.dmCreateAudioStreamContentItem = dmCreateAudioStreamContentItem;
function dmContentItemIsAudioStreamContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) && contentItem.type === bscore_1.ContentItemType.AudioStream;
}
exports.dmContentItemIsAudioStreamContentItem = dmContentItemIsAudioStreamContentItem;
function dmCreateMjpegStreamContentItem(name, url, rotation) {
    var defaults = bsDmDefaults_1.dmGetDefaultMjpegStreamContentItemData();
    return {
        name: name,
        type: bscore_1.ContentItemType.MjpegStream,
        url: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(url),
        rotation: (rotation === undefined ? defaults.rotation : rotation),
    };
}
exports.dmCreateMjpegStreamContentItem = dmCreateMjpegStreamContentItem;
function dmContentItemIsMjpegStreamContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) && contentItem.type === bscore_1.ContentItemType.MjpegStream;
}
exports.dmContentItemIsMjpegStreamContentItem = dmContentItemIsMjpegStreamContentItem;
function dmContentItemIsStreamContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) &&
        (contentItem.type === bscore_1.ContentItemType.VideoStream
            || contentItem.type === bscore_1.ContentItemType.AudioStream
            || contentItem.type === bscore_1.ContentItemType.MjpegStream);
}
exports.dmContentItemIsStreamContentItem = dmContentItemIsStreamContentItem;
function dmCreateMediaListContentItem(name, props) {
    if (props === void 0) { props = {}; }
    var defaults = bsDmDefaults_1.dmGetDefaultMediaListContentItemData();
    return {
        name: name,
        type: bscore_1.ContentItemType.MediaList,
        playbackType: lodash_1.isUndefined(props.playbackType) ? defaults.playbackType : props.playbackType,
        startIndex: lodash_1.isUndefined(props.startIndex) ? 0 : props.startIndex,
        shuffle: lodash_1.isUndefined(props.shuffle) ? defaults.shuffle : props.shuffle,
        support4KImage: lodash_1.isUndefined(props.support4KImage) ? defaults.support4KImage : props.support4KImage,
        sendMediaZoneMessage: lodash_1.isUndefined(props.sendMediaZoneMessage) ?
            defaults.sendMediaZoneMessage : props.sendMediaZoneMessage,
        useDataFeed: lodash_1.isUndefined(props.useDataFeed) ? false : props.useDataFeed,
        dataFeedId: bsDmInterfaces_1.BsDmIdNone,
        transition: lodash_1.isUndefined(props.transition) ? defaults.transition : props.transition,
        transitionDuration: lodash_1.isUndefined(props.transitionDuration) ? defaults.transitionDuration : props.transitionDuration,
        autoTransitions: lodash_1.isUndefined(props.autoTransitions) ? defaults.autoTransitions : props.autoTransitions,
    };
}
exports.dmCreateMediaListContentItem = dmCreateMediaListContentItem;
function dmContentItemIsMediaListContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) && contentItem.type === bscore_1.ContentItemType.MediaList;
}
exports.dmContentItemIsMediaListContentItem = dmContentItemIsMediaListContentItem;
function dmCreatePlayFileContentItem(name, props) {
    if (props === void 0) { props = {}; }
    var defaults = bsDmDefaults_1.dmGetDefaultPlayFileContentItemData();
    return {
        name: name,
        type: bscore_1.ContentItemType.PlayFile,
        triggerType: lodash_1.isUndefined(props.triggerType) ? defaults.triggerType : props.triggerType,
        useDefaultMedia: lodash_1.isUndefined(props.useDefaultMedia) ? defaults.useDefaultMedia : props.useDefaultMedia,
        defaultMediaId: bscore_1.BsAssetIdNone,
        userVariableIdOrName: lodash_1.isUndefined(props.userVariableIdOrName) ? '' : props.userVariableIdOrName,
        useDataFeed: lodash_1.isUndefined(props.useDataFeed) ? false : props.useDataFeed,
        dataFeedId: bsDmInterfaces_1.BsDmIdNone,
    };
}
exports.dmCreatePlayFileContentItem = dmCreatePlayFileContentItem;
function dmContentItemIsPlayFileContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) && contentItem.type === bscore_1.ContentItemType.PlayFile;
}
exports.dmContentItemIsPlayFileContentItem = dmContentItemIsPlayFileContentItem;
function dmContentItemIsMediaListOrPlayFileContentItem(contentItem) {
    return !lodash_1.isNil(contentItem)
        && (contentItem.type === bscore_1.ContentItemType.MediaList || contentItem.type === bscore_1.ContentItemType.PlayFile);
}
exports.dmContentItemIsMediaListOrPlayFileContentItem = dmContentItemIsMediaListOrPlayFileContentItem;
function dmCreateEventHandlerContentItem(name, stopPlayback) {
    var defaults = bsDmDefaults_1.dmGetDefaultEventHandlerContentItemData();
    return {
        name: name,
        type: bscore_1.ContentItemType.EventHandler,
        stopPlayback: stopPlayback === undefined ? defaults.stopPlayback : stopPlayback,
    };
}
exports.dmCreateEventHandlerContentItem = dmCreateEventHandlerContentItem;
function dmContentItemIsEventHandlerContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) && contentItem.type === bscore_1.ContentItemType.EventHandler;
}
exports.dmContentItemIsEventHandlerContentItem = dmContentItemIsEventHandlerContentItem;
function dmCreateLiveTextContentItem(name, canvasId) {
    return {
        name: name,
        type: bscore_1.ContentItemType.LiveText,
        canvasId: canvasId,
    };
}
exports.dmCreateLiveTextContentItem = dmCreateLiveTextContentItem;
function dmContentItemIsLiveTextContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) && contentItem.type === bscore_1.ContentItemType.LiveText;
}
exports.dmContentItemIsLiveTextContentItem = dmContentItemIsLiveTextContentItem;
function dmCreateSuperStateContentItem(name) {
    return {
        name: name,
        type: bscore_1.ContentItemType.SuperState,
        initialMediaStateId: bsDmInterfaces_1.BsDmIdNone,
    };
}
exports.dmCreateSuperStateContentItem = dmCreateSuperStateContentItem;
function dmContentItemIsSuperStateContentItem(contentItem) {
    return !lodash_1.isNil(contentItem) && contentItem.type === bscore_1.ContentItemType.SuperState;
}
exports.dmContentItemIsSuperStateContentItem = dmContentItemIsSuperStateContentItem;
var VideoOrImagesZoneContentTypeArray = [
    bscore_1.ContentItemType.Video, bscore_1.ContentItemType.Image, bscore_1.ContentItemType.Audio,
    bscore_1.ContentItemType.Html, bscore_1.ContentItemType.MrssFeed, bscore_1.ContentItemType.LiveVideo,
    bscore_1.ContentItemType.VideoStream, bscore_1.ContentItemType.AudioStream, bscore_1.ContentItemType.MjpegStream,
    bscore_1.ContentItemType.MediaList, bscore_1.ContentItemType.PlayFile, bscore_1.ContentItemType.EventHandler,
    bscore_1.ContentItemType.LiveText, bscore_1.ContentItemType.SuperState,
];
var VideoOrImagesZoneContentTypes = new Set(VideoOrImagesZoneContentTypeArray);
var VideoOnlyZoneContentTypeArray = [
    bscore_1.ContentItemType.Video, bscore_1.ContentItemType.LiveVideo,
    bscore_1.ContentItemType.VideoStream, bscore_1.ContentItemType.MjpegStream, bscore_1.ContentItemType.MediaList, bscore_1.ContentItemType.PlayFile,
    bscore_1.ContentItemType.EventHandler, bscore_1.ContentItemType.SuperState,
];
var VideoOnlyZoneContentTypes = new Set(VideoOnlyZoneContentTypeArray);
var ImagesZoneContentTypeArray = [
    bscore_1.ContentItemType.Image, bscore_1.ContentItemType.Html, bscore_1.ContentItemType.MrssFeed,
    bscore_1.ContentItemType.MediaList, bscore_1.ContentItemType.PlayFile, bscore_1.ContentItemType.EventHandler,
    bscore_1.ContentItemType.LiveText, bscore_1.ContentItemType.SuperState,
];
var ImagesZoneContentTypes = new Set(ImagesZoneContentTypeArray);
var AudioZoneContentTypeArray = [
    bscore_1.ContentItemType.Audio, bscore_1.ContentItemType.AudioStream, bscore_1.ContentItemType.MrssFeed,
    bscore_1.ContentItemType.MediaList, bscore_1.ContentItemType.PlayFile, bscore_1.ContentItemType.EventHandler,
    bscore_1.ContentItemType.SuperState,
];
var AudioZoneContentTypes = new Set(AudioZoneContentTypeArray);
var EnhancedAudioZoneContentTypeArray = [
    bscore_1.ContentItemType.Audio, bscore_1.ContentItemType.MrssFeed, bscore_1.ContentItemType.MediaList, bscore_1.ContentItemType.PlayFile,
    bscore_1.ContentItemType.EventHandler, bscore_1.ContentItemType.SuperState,
];
var EnhancedAudioZoneContentTypes = new Set(EnhancedAudioZoneContentTypeArray);
var TickerZoneContentTypeArray = [
    bscore_1.ContentItemType.Text, bscore_1.ContentItemType.DataFeed, bscore_1.ContentItemType.TwitterFeed, bscore_1.ContentItemType.UserVariable,
];
var TickerZoneContentTypes = new Set(TickerZoneContentTypeArray);
function dmIsValidContentItemForZone(contentItem, zoneType) {
    return dmIsValidContentItemTypeForZone(contentItem.type, zoneType);
}
exports.dmIsValidContentItemForZone = dmIsValidContentItemForZone;
function dmIsValidContentItemTypeForZone(contentItemType, zoneType) {
    switch (zoneType) {
        case bscore_1.ZoneType.VideoOrImages:
            return VideoOrImagesZoneContentTypes.has(contentItemType);
        case bscore_1.ZoneType.VideoOnly:
            return VideoOnlyZoneContentTypes.has(contentItemType);
        case bscore_1.ZoneType.Images:
            return ImagesZoneContentTypes.has(contentItemType);
        case bscore_1.ZoneType.AudioOnly:
            return AudioZoneContentTypes.has(contentItemType);
        case bscore_1.ZoneType.EnhancedAudio:
            return EnhancedAudioZoneContentTypes.has(contentItemType);
        case bscore_1.ZoneType.Ticker:
            return TickerZoneContentTypes.has(contentItemType);
        case bscore_1.ZoneType.Clock:
            return false;
        case bscore_1.ZoneType.BackgroundImage:
            return contentItemType === bscore_1.ContentItemType.Image;
    }
    return false;
}
exports.dmIsValidContentItemTypeForZone = dmIsValidContentItemTypeForZone;
var VideoOrImagesPlaylistContentTypeArray = [
    bscore_1.ContentItemType.Video, bscore_1.ContentItemType.Image, bscore_1.ContentItemType.Audio,
    bscore_1.ContentItemType.Html, bscore_1.ContentItemType.MrssFeed, bscore_1.ContentItemType.LiveVideo,
    bscore_1.ContentItemType.VideoStream, bscore_1.ContentItemType.AudioStream, bscore_1.ContentItemType.MjpegStream,
];
var VideoOrImagesPlaylistContentTypes = new Set(VideoOrImagesPlaylistContentTypeArray);
var VideoOnlyPlaylistContentTypeArray = [
    bscore_1.ContentItemType.Video, bscore_1.ContentItemType.LiveVideo,
    bscore_1.ContentItemType.VideoStream, bscore_1.ContentItemType.MjpegStream,
];
var VideoOnlyPlaylistContentTypes = new Set(VideoOnlyPlaylistContentTypeArray);
var ImagesPlaylistContentTypeArray = [
    bscore_1.ContentItemType.Image, bscore_1.ContentItemType.Html, bscore_1.ContentItemType.MrssFeed,
];
var ImagesPlaylistContentTypes = new Set(ImagesPlaylistContentTypeArray);
var AudioPlaylistContentTypeArray = [
    bscore_1.ContentItemType.Audio, bscore_1.ContentItemType.AudioStream, bscore_1.ContentItemType.MrssFeed,
];
var AudioPlaylistContentTypes = new Set(AudioPlaylistContentTypeArray);
var EnhancedAudioPlaylistContentTypeArray = [
    bscore_1.ContentItemType.Audio, bscore_1.ContentItemType.MrssFeed,
];
var EnhancedAudioPlaylistContentTypes = new Set(EnhancedAudioPlaylistContentTypeArray);
var TickerPlaylistContentTypeArray = [
    bscore_1.ContentItemType.Text, bscore_1.ContentItemType.DataFeed, bscore_1.ContentItemType.TwitterFeed,
    bscore_1.ContentItemType.MrssFeed, bscore_1.ContentItemType.UserVariable,
];
var TickerPlaylistContentTypes = new Set(TickerPlaylistContentTypeArray);
function dmIsValidContentItemForPlaylist(contentItem, zoneType) {
    return dmIsValidContentItemTypeForPlaylist(contentItem.type, zoneType);
}
exports.dmIsValidContentItemForPlaylist = dmIsValidContentItemForPlaylist;
function dmIsValidContentItemTypeForPlaylist(contentItemType, zoneType) {
    switch (zoneType) {
        case bscore_1.ZoneType.VideoOrImages:
            return VideoOrImagesPlaylistContentTypes.has(contentItemType);
        case bscore_1.ZoneType.VideoOnly:
            return VideoOnlyPlaylistContentTypes.has(contentItemType);
        case bscore_1.ZoneType.Images:
            return ImagesPlaylistContentTypes.has(contentItemType);
        case bscore_1.ZoneType.AudioOnly:
            return AudioPlaylistContentTypes.has(contentItemType);
        case bscore_1.ZoneType.EnhancedAudio:
            return EnhancedAudioPlaylistContentTypes.has(contentItemType);
        case bscore_1.ZoneType.Ticker:
            return TickerPlaylistContentTypes.has(contentItemType);
        case bscore_1.ZoneType.Clock:
            return false;
        case bscore_1.ZoneType.BackgroundImage:
            return contentItemType === bscore_1.ContentItemType.Image;
    }
    return false;
}
exports.dmIsValidContentItemTypeForPlaylist = dmIsValidContentItemTypeForPlaylist;
function dmIsValidContentItemTypeForPlaylistChangeZoneType(contentItemType, zoneType, currentZoneType) {
    var noTickerZoneMrssFeed = true;
    if (currentZoneType === bscore_1.ZoneType.Ticker && contentItemType === bscore_1.ContentItemType.MrssFeed) {
        noTickerZoneMrssFeed = false;
    }
    switch (zoneType) {
        case bscore_1.ZoneType.VideoOrImages: {
            return VideoOrImagesPlaylistContentTypes.has(contentItemType) && noTickerZoneMrssFeed;
        }
        case bscore_1.ZoneType.VideoOnly: {
            return VideoOnlyPlaylistContentTypes.has(contentItemType) && noTickerZoneMrssFeed;
        }
        case bscore_1.ZoneType.Images: {
            return ImagesPlaylistContentTypes.has(contentItemType) && noTickerZoneMrssFeed;
        }
        case bscore_1.ZoneType.AudioOnly:
        case bscore_1.ZoneType.EnhancedAudio:
            return AudioPlaylistContentTypes.has(contentItemType);
        case bscore_1.ZoneType.Ticker:
            return TickerPlaylistContentTypes.has(contentItemType) && contentItemType !== bscore_1.ContentItemType.MrssFeed;
        case bscore_1.ZoneType.Clock:
            return false;
        case bscore_1.ZoneType.BackgroundImage:
            return contentItemType === bscore_1.ContentItemType.Image;
    }
    return false;
}
exports.dmIsValidContentItemTypeForPlaylistChangeZoneType = dmIsValidContentItemTypeForPlaylistChangeZoneType;
function dmFilterContentItemData(contentItemType, contentItemData) {
    if (!lodash_1.isNil(contentItemData)) {
        switch (contentItemType) {
            case bscore_1.ContentItemType.Video:
                return lodash_1.pick(contentItemData, bsDmInterfaces_1.DmVideoContentItemDataNameArray);
            case bscore_1.ContentItemType.Image:
                return lodash_1.pick(contentItemData, bsDmInterfaces_1.DmImageContentItemDataNameArray);
            case bscore_1.ContentItemType.Audio:
                return lodash_1.pick(contentItemData, bsDmInterfaces_1.DmAudioContentItemDataNameArray);
            case bscore_1.ContentItemType.Html:
                return lodash_1.pick(contentItemData, bsDmInterfaces_1.DmHtmlContentItemDataNameArray);
            case bscore_1.ContentItemType.LiveVideo:
                return lodash_1.pick(contentItemData, bsDmInterfaces_1.DmLiveVideoContentItemDataNameArray);
            case bscore_1.ContentItemType.MrssFeed:
                return lodash_1.pick(contentItemData, bsDmInterfaces_1.DmMrssDataFeedContentItemDataNameArray);
            case bscore_1.ContentItemType.TwitterFeed:
                return lodash_1.pick(contentItemData, bsDmInterfaces_1.DmTwitterFeedContentItemDataNameArray);
            case bscore_1.ContentItemType.VideoStream:
            case bscore_1.ContentItemType.AudioStream:
                return lodash_1.pick(contentItemData, bsDmInterfaces_1.DmStreamContentItemDataNameArray);
            case bscore_1.ContentItemType.MjpegStream:
                return lodash_1.pick(contentItemData, bsDmInterfaces_1.DmMjpegStreamContentItemDataNameArray);
            case bscore_1.ContentItemType.MediaList:
                return lodash_1.pick(contentItemData, bsDmInterfaces_1.DmMediaListContentItemDataNameArray);
            case bscore_1.ContentItemType.PlayFile:
                return lodash_1.pick(contentItemData, bsDmInterfaces_1.DmPlayFileContentItemDataNameArray);
            case bscore_1.ContentItemType.EventHandler:
                return lodash_1.pick(contentItemData, bsDmInterfaces_1.DmEventHandlerContentItemDataNameArray);
            case bscore_1.ContentItemType.LiveText:
                return lodash_1.pick(contentItemData, bsDmInterfaces_1.DmLiveTextContentItemDataNameArray);
            case bscore_1.ContentItemType.SuperState:
                return lodash_1.pick(contentItemData, bsDmInterfaces_1.DmSuperStateContentItemDataNameArray);
        }
    }
    return null;
}
exports.dmFilterContentItemData = dmFilterContentItemData;
var VideoPlayFileDataNameArray = bsDmInterfaces_1.DmVideoContentItemDataNameArray.concat(bsDmInterfaces_1.DmPlayFileItemDataNameArray);
var ImagePlayFileDataNameArray = bsDmInterfaces_1.DmImageContentItemDataNameArray.concat(bsDmInterfaces_1.DmPlayFileItemDataNameArray);
var AudioPlayFileDataNameArray = bsDmInterfaces_1.DmAudioContentItemDataNameArray.concat(bsDmInterfaces_1.DmPlayFileItemDataNameArray);
function dmFilterPlayFileItemContentItemData(contentItemType, contentItemData) {
    if (contentItemData) {
        switch (contentItemType) {
            case bscore_1.ContentItemType.Video:
                return lodash_1.pick(contentItemData, VideoPlayFileDataNameArray);
            case bscore_1.ContentItemType.Image:
                return lodash_1.pick(contentItemData, ImagePlayFileDataNameArray);
            case bscore_1.ContentItemType.Audio:
                return lodash_1.pick(contentItemData, AudioPlayFileDataNameArray);
        }
    }
    return null;
}
exports.dmFilterPlayFileItemContentItemData = dmFilterPlayFileItemContentItemData;


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var lodash_1 = __webpack_require__(0);
var PsUvStartDelimiter = '{{';
var PsUvEndDelimiter = '}}';
function dmGetPsUvStartDelimiter() { return PsUvStartDelimiter; }
exports.dmGetPsUvStartDelimiter = dmGetPsUvStartDelimiter;
function dmGetPsUvEndDelimiter() { return PsUvEndDelimiter; }
exports.dmGetPsUvEndDelimiter = dmGetPsUvEndDelimiter;
function dmSetPsUvStartDelimiter(delim) {
    PsUvStartDelimiter = delim.replace(/([$^*+?.])/g, '\\$1');
}
exports.dmSetPsUvStartDelimiter = dmSetPsUvStartDelimiter;
function dmSetPsUvEndDelimiter(delim) {
    PsUvEndDelimiter = delim.replace(/([$^*+?.])/g, '\\$1');
}
exports.dmSetPsUvEndDelimiter = dmSetPsUvEndDelimiter;
function dmGetEmptyParameterizedString() {
    return { params: [] };
}
exports.dmGetEmptyParameterizedString = dmGetEmptyParameterizedString;
function dmIsEmptyParameterizedString(ps) {
    return ps.params.length === 0
        || (ps.params.length === 1 && ps.params[0].type === bscore_1.StringParameterType.Text && ps.params[0].value.length === 0);
}
exports.dmIsEmptyParameterizedString = dmIsEmptyParameterizedString;
function dmGetParameterizedStringFromString(value) {
    return { params: [{ type: bscore_1.StringParameterType.Text, value: value }] };
}
exports.dmGetParameterizedStringFromString = dmGetParameterizedStringFromString;
function dmResolveDmParameterizedString(arg) {
    if (arg !== undefined) {
        if (typeof arg === 'string') {
            return dmGetPlaceholderParameterizedStringFromDisplayString(arg);
        }
        else if (dmIsValidParameterizedString(arg)) {
            return arg;
        }
    }
    return dmGetEmptyParameterizedString();
}
exports.dmResolveDmParameterizedString = dmResolveDmParameterizedString;
function dmGetPlaceholderParameterizedStringFromDisplayString(displayString) {
    var returnPs = dmGetEmptyParameterizedString();
    var re = new RegExp('(.*?)' + dmGetPsUvStartDelimiter() + '(.*?)' + dmGetPsUvEndDelimiter(), 'g');
    var res;
    var lastIndex = 0;
    while (res = re.exec(displayString)) {
        if (res[1]) {
            dmAppendStringToParameterizedString(returnPs, res[1]);
        }
        if (res[2]) {
            dmAppendUserVariableNameToParameterizedString(returnPs, res[2]);
        }
        lastIndex = re.lastIndex;
    }
    if (lastIndex < displayString.length) {
        dmAppendStringToParameterizedString(returnPs, displayString.substr(lastIndex));
    }
    return returnPs;
}
exports.dmGetPlaceholderParameterizedStringFromDisplayString = dmGetPlaceholderParameterizedStringFromDisplayString;
function dmGetParameterizedStringFromUserVariable(uvId) {
    return { params: [{ type: bscore_1.StringParameterType.UserVariable, value: uvId }] };
}
exports.dmGetParameterizedStringFromUserVariable = dmGetParameterizedStringFromUserVariable;
function dmGetParameterizedStringFromUserVariableName(name) {
    return { params: [{ type: bscore_1.StringParameterType.UserVariableName, value: name }] };
}
exports.dmGetParameterizedStringFromUserVariableName = dmGetParameterizedStringFromUserVariableName;
function dmAppendStringToParameterizedString(ps, value) {
    ps.params.push({ type: bscore_1.StringParameterType.Text, value: value });
    return ps;
}
exports.dmAppendStringToParameterizedString = dmAppendStringToParameterizedString;
function dmAppendUserVariableToParameterizedString(ps, value) {
    ps.params.push({ type: bscore_1.StringParameterType.UserVariable, value: value });
    return ps;
}
exports.dmAppendUserVariableToParameterizedString = dmAppendUserVariableToParameterizedString;
function dmAppendUserVariableNameToParameterizedString(ps, value) {
    ps.params.push({ type: bscore_1.StringParameterType.UserVariableName, value: value });
    return ps;
}
exports.dmAppendUserVariableNameToParameterizedString = dmAppendUserVariableNameToParameterizedString;
function dmIsValidParameterizedString(ps) {
    if (typeof ps !== 'object' || !ps.params || !Array.isArray(ps.params)) {
        return false;
    }
    var isValidDmPsComponent = function (component) {
        return typeof component === 'object'
            && component.hasOwnProperty('type')
            && component.hasOwnProperty('value')
            && (component.type === bscore_1.StringParameterType.Text
                || component.type === bscore_1.StringParameterType.UserVariable
                || component.type === bscore_1.StringParameterType.UserVariableName)
            && typeof component.value === 'string';
    };
    return ps.params.every(isValidDmPsComponent);
}
exports.dmIsValidParameterizedString = dmIsValidParameterizedString;
function dmAreParameterizedStringUserVariablesResolved(ps) {
    var undefinedNames = ps.params.reduce(function (acc, comp) {
        return comp.type === bscore_1.StringParameterType.UserVariableName ?
            acc.concat(comp.value) : acc;
    }, []);
    var ok = undefinedNames.length === 0;
    var report = { ok: ok };
    if (!report.ok) {
        report.undefinedUserVariableNames = undefinedNames;
    }
    return report;
}
exports.dmAreParameterizedStringUserVariablesResolved = dmAreParameterizedStringUserVariablesResolved;
function dmGetSimpleStringFromParameterizedString(ps) {
    var returnString = null;
    if (typeof ps === 'object' && ps.params && ps.params.length) {
        ps.params.every(function (param) {
            if (param.type === bscore_1.StringParameterType.UserVariable || param.type === bscore_1.StringParameterType.UserVariableName) {
                returnString = null;
                return false;
            }
            if (returnString) {
                returnString = returnString + param.value;
            }
            else {
                returnString = param.value;
            }
            return true;
        });
    }
    return returnString;
}
exports.dmGetSimpleStringFromParameterizedString = dmGetSimpleStringFromParameterizedString;
function dmIsSimpleParameterizedString(ps) {
    var isSimple = false;
    if (typeof ps === 'object' && ps.params && ps.params.length) {
        isSimple = lodash_1.isNil(lodash_1.find(ps.params, function (param) {
            return param.type === bscore_1.StringParameterType.UserVariable
                || param.type === bscore_1.StringParameterType.UserVariableName;
        }));
    }
    return isSimple;
}
exports.dmIsSimpleParameterizedString = dmIsSimpleParameterizedString;
function dmIsEqualParameterizedString(ps1, ps2) {
    var ps2ComponentEqual = function (comp1, index) {
        var comp2 = ps2.params[index];
        return comp2 && comp1.type === comp2.type && comp1.value === comp2.value;
    };
    return ps1 === ps2 || (ps1.params.length === ps2.params.length && ps1.params.every(ps2ComponentEqual));
}
exports.dmIsEqualParameterizedString = dmIsEqualParameterizedString;
function dmGetParameterizedStringTextParams(ps) {
    return ps.params.reduce(function (acc, param) {
        if (param.type === bscore_1.StringParameterType.Text) {
            acc.push(param.value);
        }
        return acc;
    }, []);
}
exports.dmGetParameterizedStringTextParams = dmGetParameterizedStringTextParams;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(3);
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmState_1 = __webpack_require__(5);
var bsDmContentItems_1 = __webpack_require__(13);
var bsDmAssetItems_1 = __webpack_require__(33);
var bsDmDefaults_1 = __webpack_require__(16);
var bsDmError_1 = __webpack_require__(4);
var selectors_1 = __webpack_require__(6);
var actionBase_1 = __webpack_require__(8);
var actionAssetHelper_1 = __webpack_require__(11);
var actionAssetMap_1 = __webpack_require__(9);
var actionMediaState_1 = __webpack_require__(12);
var lodash_1 = __webpack_require__(0);
exports.ADD_ZONE = 'DM_ADD_ZONE';
exports.UPDATE_ZONE = 'DM_UPDATE_ZONE';
exports.UPDATE_ZONE_PROPS = 'DM_UPDATE_ZONE_PROPS';
exports.DELETE_ZONE = 'DM_DELETE_ZONE';
exports.createDefaultZoneState = function (id, name, type, tag, nonInteractive, position, existZOrderFront) {
    if (nonInteractive === void 0) { nonInteractive = true; }
    if (position === void 0) { position = { x: 0, y: 0, width: 100, height: 100, pct: true }; }
    if (existZOrderFront === void 0) { existZOrderFront = false; }
    return ({
        id: id,
        name: name,
        type: type,
        tag: tag,
        nonInteractive: nonInteractive,
        initialMediaStateId: bsDmInterfaces_1.BsDmIdNone,
        position: position,
        properties: exports.createDefaultZoneProperties(type, existZOrderFront),
    });
};
exports.createDefaultZoneProperties = function (type, existZOrderFront) {
    if (existZOrderFront === void 0) { existZOrderFront = false; }
    switch (type) {
        case bscore_1.ZoneType.VideoOrImages:
            return Object.assign(bsDmDefaults_1.dmGetDefaultVideoZoneProperties(existZOrderFront), bsDmDefaults_1.dmGetDefaultAudioZoneProperties(), bsDmDefaults_1.dmGetDefaultImageZoneProperties());
        case bscore_1.ZoneType.VideoOnly:
            return Object.assign(bsDmDefaults_1.dmGetDefaultVideoZoneProperties(existZOrderFront), bsDmDefaults_1.dmGetDefaultAudioZoneProperties());
        case bscore_1.ZoneType.Images:
            return bsDmDefaults_1.dmGetDefaultImageZoneProperties();
        case bscore_1.ZoneType.AudioOnly:
            return bsDmDefaults_1.dmGetDefaultAudioZoneProperties();
        case bscore_1.ZoneType.EnhancedAudio:
            return Object.assign(bsDmDefaults_1.dmGetDefaultAudioZoneProperties(), bsDmDefaults_1.dmGetDefaultEnhancedAudioZoneProperties());
        case bscore_1.ZoneType.Ticker:
            return bsDmDefaults_1.dmGetDefaultTickerZoneProperties();
        case bscore_1.ZoneType.Clock:
            return bsDmDefaults_1.dmGetDefaultClockZoneProperties();
    }
    return {};
};
function dmAddZone(name, type, tag, position, nonInteractive) {
    if (position === void 0) { position = { x: 0, y: 0, width: 100, height: 100, pct: true }; }
    if (nonInteractive === void 0) { nonInteractive = true; }
    return function (dispatch, getState) {
        var state = bsDmState_1.dmFilterDmState(getState());
        if (selectors_1.dmIsZoneTypeAtLimit(state, type)) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidOperation, 'AddZone: No additional zones of type ' + type + ' can be added');
        }
        var existZOrderFront = false;
        if (type === bscore_1.ZoneType.VideoOrImages || type === bscore_1.ZoneType.VideoOnly) {
            existZOrderFront = selectors_1.dmGetFirstVideoZoneZOrderFront(state);
        }
        var zone = exports.createDefaultZoneState(utils_1.newBsDmId(), name, type, tag, nonInteractive, position, existZOrderFront);
        if (type === bscore_1.ZoneType.Ticker) {
            var zoneProps = zone.properties;
            var playerModel = selectors_1.dmGetSignPlayerModel(state);
            if (zoneProps.textWidget.scrollingMethod === bscore_1.TextScrollingMethodType.Scrolling
                && !bscore_1.bscPlayerModelHasFeature(playerModel, bscore_1.ModelFeature.ScrollingTicker)) {
                zone.properties.textWidget.scrollingMethod = bscore_1.TextScrollingMethodType.StaticText;
            }
        }
        var action = {
            type: exports.ADD_ZONE,
            payload: {
                id: zone.id,
                zone: zone,
            },
        };
        return dispatch(action);
    };
}
exports.dmAddZone = dmAddZone;
function dmAddDefaultZone(name, tag, position, nonInteractive) {
    if (position === void 0) { position = { x: 0, y: 0, width: 100, height: 100, pct: true }; }
    if (nonInteractive === void 0) { nonInteractive = true; }
    return function (dispatch, getState) {
        var state = bsDmState_1.dmFilterDmState(getState());
        var type;
        var existZOrderFront = false;
        if (selectors_1.dmCanAddZone(state, { type: bscore_1.ZoneType.VideoOrImages })) {
            type = bscore_1.ZoneType.VideoOrImages;
            existZOrderFront = selectors_1.dmGetFirstVideoZoneZOrderFront(state);
        }
        else if (!selectors_1.dmIsZoneTypeAtLimit(state, bscore_1.ZoneType.Images)) {
            type = bscore_1.ZoneType.Images;
        }
        else if (!selectors_1.dmIsZoneTypeAtLimit(state, bscore_1.ZoneType.Ticker)) {
            type = bscore_1.ZoneType.Ticker;
        }
        else if (!selectors_1.dmIsZoneTypeAtLimit(state, bscore_1.ZoneType.AudioOnly)) {
            type = bscore_1.ZoneType.AudioOnly;
        }
        else if (!selectors_1.dmIsZoneTypeAtLimit(state, bscore_1.ZoneType.EnhancedAudio)) {
            type = bscore_1.ZoneType.EnhancedAudio;
        }
        else {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidOperation, 'No available zone can be added');
        }
        var zone = exports.createDefaultZoneState(utils_1.newBsDmId(), name, type, tag, nonInteractive, position, existZOrderFront);
        var action = {
            type: exports.ADD_ZONE,
            payload: {
                id: zone.id,
                zone: zone,
            },
        };
        return dispatch(action);
    };
}
exports.dmAddDefaultZone = dmAddDefaultZone;
exports.dmUpdateZoneWithoutTest = function (params) { return ({
    type: exports.UPDATE_ZONE,
    payload: params,
}); };
function dmUpdateZone(params) {
    return function (dispatch, getState) {
        var action = { type: exports.UPDATE_ZONE, payload: params };
        var state = bsDmState_1.dmFilterDmState(getState());
        if (params.initialMediaStateId) {
            var mediaStates = selectors_1.dmGetMediaStateIdsForZone(state, { id: params.id });
            if (mediaStates.indexOf(params.initialMediaStateId) < 0) {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Invalid initial media state', { action: action });
            }
        }
        if (action.payload.hasOwnProperty('properties')) {
            action.payload = lodash_1.omit(action.payload, 'properties');
        }
        if (params.type) {
            var zoneType = selectors_1.dmGetZoneTypeById(state, { id: params.id });
            if (zoneType !== params.type) {
                if (!selectors_1.dmCanChangeZoneType(state, { id: params.id, type: params.type })) {
                    throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Zone contains media states not allowed in requested zone type', { action: action });
                }
                var newZoneProperties = void 0;
                if (params.type === bscore_1.ZoneType.VideoOrImages || params.type === bscore_1.ZoneType.VideoOnly) {
                    if ((selectors_1.dmGetZoneCountByZoneType(state, bscore_1.ZoneType.VideoOrImages)
                        + selectors_1.dmGetZoneCountByZoneType(state, bscore_1.ZoneType.VideoOnly)) === 0) {
                        newZoneProperties = exports.createDefaultZoneProperties(params.type);
                    }
                    else {
                        var ids = selectors_1.dmGetZoneIdsForZoneType(state, { type: bscore_1.ZoneType.VideoOrImages });
                        ids = ids.concat(selectors_1.dmGetZoneIdsForZoneType(state, { type: bscore_1.ZoneType.VideoOnly }));
                        ids = lodash_1.without(ids, params.id);
                        var existingVideoZone = selectors_1.dmGetZonePropertiesById(state, { id: ids[0] });
                        if (existingVideoZone == null || existingVideoZone.zOrderFront === null) {
                            newZoneProperties = exports.createDefaultZoneProperties(params.type);
                        }
                        else {
                            newZoneProperties = exports.createDefaultZoneProperties(params.type, existingVideoZone.zOrderFront);
                        }
                    }
                }
                else if (params.type === bscore_1.ZoneType.BackgroundImage) {
                    var ids = selectors_1.dmGetZoneIdsForZoneType(state, { type: bscore_1.ZoneType.VideoOrImages });
                    ids = ids.concat(selectors_1.dmGetZoneIdsForZoneType(state, { type: bscore_1.ZoneType.VideoOnly }));
                    ids = lodash_1.without(ids, params.id);
                    if (ids.length !== 0) {
                        var videoZone = selectors_1.dmGetZoneById(state, { id: ids[0] });
                        dispatch(dmUpdateZoneProperties({
                            id: ids[0],
                            type: videoZone.type,
                            properties: {
                                zOrderFront: true,
                            },
                        }));
                    }
                    newZoneProperties = exports.createDefaultZoneProperties(params.type);
                }
                else {
                    newZoneProperties = exports.createDefaultZoneProperties(params.type);
                }
                var previousZoneProperties = state.zones.zonesById[params.id].properties;
                var carryOverProperties = lodash_1.pick(previousZoneProperties, Object.keys(newZoneProperties));
                newZoneProperties = Object.assign(newZoneProperties, carryOverProperties);
                action.payload = Object.assign(params, { properties: newZoneProperties });
            }
        }
        return dispatch(action);
    };
}
exports.dmUpdateZone = dmUpdateZone;
function dmUpdateZoneProperties(params) {
    return function (dispatch, getState) {
        var mainAction = { type: exports.UPDATE_ZONE_PROPS, payload: params };
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var zoneType = selectors_1.dmGetZoneTypeById(dmState, { id: params.id });
        if (params.type !== zoneType) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateZoneProperties: Properties are specified for a "' + params.type + '" zone, but this zone is a "' +
                zoneType + '" zone', { action: mainAction });
        }
        else if (zoneType === bscore_1.ZoneType.BackgroundImage) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateZoneProperties: BackgroundImage zone has no properties', { action: mainAction });
        }
        var batchedActions = [];
        if (zoneType === bscore_1.ZoneType.VideoOrImages || zoneType === bscore_1.ZoneType.VideoOnly) {
            if (selectors_1.dmGetZoneCountByZoneType(dmState, bscore_1.ZoneType.VideoOrImages)
                + selectors_1.dmGetZoneCountByZoneType(dmState, bscore_1.ZoneType.VideoOnly) > 1) {
                var ids = selectors_1.dmGetZoneIdsForZoneType(dmState, { type: bscore_1.ZoneType.VideoOrImages });
                ids = ids.concat(selectors_1.dmGetZoneIdsForZoneType(dmState, { type: bscore_1.ZoneType.VideoOnly }));
                ids = lodash_1.without(ids, params.id);
                var existVideoZoneProperty = selectors_1.dmGetZonePropertiesById(dmState, { id: ids[0] });
                if (existVideoZoneProperty.zOrderFront === params.properties.zOrderFront) {
                    var existVideoZone = selectors_1.dmGetZoneById(dmState, { id: ids[0] });
                    var existVideoZoneParams = {
                        id: existVideoZone.id,
                        type: existVideoZone.type,
                        properties: __assign({}, existVideoZoneProperty, { zOrderFront: !existVideoZoneProperty.zOrderFront }),
                    };
                    batchedActions.push({ type: exports.UPDATE_ZONE_PROPS, payload: existVideoZoneParams });
                }
            }
        }
        else if ((zoneType === bscore_1.ZoneType.Ticker || zoneType === bscore_1.ZoneType.Clock)) {
            var propertiesWithBkgAndFont = params.properties;
            var revisedProperties = lodash_1.omit(propertiesWithBkgAndFont, ['backgroundAsset', 'fontAsset']);
            var currentProperties = selectors_1.dmGetZonePropertiesById(dmState, { id: params.id });
            var currentZoneWidget = currentProperties.widget;
            if (propertiesWithBkgAndFont.hasOwnProperty('backgroundAsset')) {
                if (revisedProperties.widget) {
                    revisedProperties.widget.backgroundBitmapAssetId = bscore_1.BsAssetIdNone;
                }
                else {
                    revisedProperties.widget = { backgroundBitmapAssetId: bscore_1.BsAssetIdNone };
                }
                var assetIdToDelete = currentZoneWidget.backgroundBitmapAssetId;
                if (bscore_1.bscIsValidAssetId(assetIdToDelete)) {
                    batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(assetIdToDelete));
                }
                if (bscore_1.bscIsAssetItem(propertiesWithBkgAndFont.backgroundAsset)) {
                    if (propertiesWithBkgAndFont.backgroundAsset.assetType !== bscore_1.AssetType.Content
                        || propertiesWithBkgAndFont.backgroundAsset.mediaType !== bscore_1.MediaType.Image) {
                        throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateZoneProperties: Background asset for Widget must be an Image');
                    }
                    var assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, propertiesWithBkgAndFont.backgroundAsset, mainAction);
                    batchedActions.push(actionAssetMap_1.dmPutAssetItem(assetItem));
                    revisedProperties.widget.backgroundBitmapAssetId = assetItem.id;
                }
            }
            if (propertiesWithBkgAndFont.hasOwnProperty('fontAsset')) {
                if (!lodash_1.isNil(revisedProperties.widget)) {
                    revisedProperties.widget.font = bsDmInterfaces_1.DmDefaultFontName;
                }
                else {
                    revisedProperties.widget = { font: bsDmInterfaces_1.DmDefaultFontName };
                }
                var assetIdToDelete = bsDmContentItems_1.dmGetWidgetCustomFontAssetId(currentZoneWidget);
                if (bscore_1.bscIsValidAssetId(assetIdToDelete)) {
                    batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(assetIdToDelete));
                }
                if (bscore_1.bscIsAssetItem(propertiesWithBkgAndFont.fontAsset)) {
                    if (bsDmAssetItems_1.dmIsFontAssetItem(propertiesWithBkgAndFont.fontAsset)) {
                        var assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, propertiesWithBkgAndFont.fontAsset, mainAction);
                        batchedActions.push(actionAssetMap_1.dmPutAssetItem(assetItem));
                        revisedProperties.widget.font = assetItem.id;
                    }
                    else {
                        throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateZoneProperties: invalid font assetItem for Widget');
                    }
                }
            }
            mainAction.payload.properties = revisedProperties;
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmUpdateZoneProperties = dmUpdateZoneProperties;
function dmDeleteZoneWithParams(params) {
    return {
        type: exports.DELETE_ZONE,
        payload: params,
    };
}
exports.dmDeleteZoneWithParams = dmDeleteZoneWithParams;
function dmDeleteZone(id) {
    return function (dispatch, getState) {
        var _a;
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var mediaStateIds = selectors_1.dmGetMediaStateIdsForZone(dmState, { id: id });
        var mediaStateDeleteParams = actionMediaState_1.dmGetMediaStateDeleteParams(dmState, mediaStateIds);
        var zoneDeleteParams = __assign({ zoneId: id }, mediaStateDeleteParams);
        var zoneAssetIds = selectors_1.dmGetZonePropertyAssetItemIds(dmState, { id: id });
        if (zoneAssetIds.length) {
            (_a = zoneDeleteParams.assetIds).push.apply(_a, zoneAssetIds);
        }
        return dispatch(dmDeleteZoneWithParams(zoneDeleteParams));
    };
}
exports.dmDeleteZone = dmDeleteZone;
function dmClearZone(id) {
    return function (dispatch, getState) {
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var mediaStateIds = selectors_1.dmGetMediaStateIdsForZone(dmState, { id: id });
        var mediaStateDeleteParams = actionMediaState_1.dmGetMediaStateDeleteParams(dmState, mediaStateIds);
        var mainAction = actionMediaState_1.dmDeleteMediaStateWithParams(mediaStateDeleteParams);
        batchedActions.push(mainAction);
        batchedActions.push(exports.dmUpdateZoneWithoutTest({ id: id, initialMediaStateId: bsDmInterfaces_1.BsDmIdNone }));
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmClearZone = dmClearZone;


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var lodash_1 = __webpack_require__(0);
function dmSetDefaultPropertyValues(defaults) {
    DmInternal.defaults.merge(defaults);
}
exports.dmSetDefaultPropertyValues = dmSetDefaultPropertyValues;
function dmResetDefaultPropertyValues() {
    DmInternal.defaults.reset();
}
exports.dmResetDefaultPropertyValues = dmResetDefaultPropertyValues;
function dmGetDefaultPropertyValues() {
    return DmInternal.defaults.allDefaults;
}
exports.dmGetDefaultPropertyValues = dmGetDefaultPropertyValues;
exports.initialSignPropertyDefaults = {
    videoMode: bscore_1.VideoMode.v1920x1080x60p,
    model: bscore_1.PlayerModel.XT1143,
    monitorOrientation: bscore_1.MonitorOrientationType.Landscape,
    monitorOverscan: bscore_1.MonitorOverscanType.NoOverscan,
    videoConnector: bscore_1.VideoConnectorType.Hdmi,
    deviceWebPageDisplay: bscore_1.DeviceWebPageDisplay.Standard,
    backgroundScreenColor: { a: 255, r: 0, g: 0, b: 0 },
    forceResolution: true,
    tenBitColorEnabled: false,
    dolbyVisionEnabled: false,
    fullResGraphicsEnabled: false,
    audioConfiguration: bscore_1.AudioConfiguration.MixedAudioPCMOnly,
    audioAutoLevel: false,
    htmlEnableJavascriptConsole: false,
    alphabetizeVariableNames: false,
    autoCreateMediaCounterVariables: false,
    resetVariablesOnPresentationStart: false,
    networkedVariablesUpdateInterval: 300,
    delayScheduleChangeUntilMediaEndEvent: false,
    language: bscore_1.LanguageType.English,
    languageKey: bscore_1.LanguageKeyType.English,
    flipCoordinates: false,
    isMosaic: false,
    inactivityTimeout: false,
    inactivityTime: 30,
    touchCursorDisplayMode: bscore_1.TouchCursorDisplayModeType.Auto,
    graphicsZOrder: bscore_1.GraphicsZOrderType.Front,
    udpDestinationAddressType: bscore_1.UdpAddressType.IPAddress,
    udpDestinationAddress: '255.255.255.255',
    udpDestinationPort: 5000,
    udpReceiverPort: 5000,
    enableEnhancedSynchronization: null,
};
Object.freeze(exports.initialSignPropertyDefaults);
function dmGetDefaultSignPropertyData() {
    return DmInternal.defaults.signProperties;
}
exports.dmGetDefaultSignPropertyData = dmGetDefaultSignPropertyData;
exports.initialSerialPortDefaults = {
    port: '0',
    baudRate: 115200,
    dataBits: 8,
    stopBits: 1,
    parity: 'N',
    protocol: 'ASCII',
    sendEol: 'CR',
    receiveEol: 'CR',
    invertSignals: false,
    connectedDevice: 'None',
};
Object.freeze(exports.initialSerialPortDefaults);
var createDefaultSerialPortList = function () {
    var portList = [];
    for (var port = 0; port < 8; ++port) {
        portList.push(Object.assign({}, exports.initialSerialPortDefaults, { port: port }));
    }
    return portList;
};
function dmGetDefaultSerialPortList() {
    return DmInternal.defaults.serialPortConfigurations;
}
exports.dmGetDefaultSerialPortList = dmGetDefaultSerialPortList;
exports.initialGpioListDefaults = [
    bscore_1.GpioType.Input, bscore_1.GpioType.Input, bscore_1.GpioType.Input, bscore_1.GpioType.Input,
    bscore_1.GpioType.Input, bscore_1.GpioType.Input, bscore_1.GpioType.Input, bscore_1.GpioType.Input,
];
function dmGetDefaultGpioList() {
    return DmInternal.defaults.gpio;
}
exports.dmGetDefaultGpioList = dmGetDefaultGpioList;
exports.initialButtonPanelConfigurationDefaults = {
    configureAutomatically: true,
    configuration: 0,
};
Object.freeze(exports.initialButtonPanelConfigurationDefaults);
var createDefaultButtonPanelMap = function () {
    var bpMap = {};
    bscore_1.ButtonPanelNameArray.forEach(function (bpName) {
        bpMap[bpName] = Object.assign({}, exports.initialButtonPanelConfigurationDefaults);
    });
    return bpMap;
};
function dmGetDefaultButtonPanelMap() {
    return DmInternal.defaults.buttonPanels;
}
exports.dmGetDefaultButtonPanelMap = dmGetDefaultButtonPanelMap;
exports.initialAudioSignPropertyDefaults = {
    min: 0,
    max: 100,
};
Object.freeze(exports.initialAudioSignPropertyDefaults);
var createDefaultAudioSignPropertyMap = function () {
    var audioPropertyMap = {};
    bscore_1.AudioOutputNameArray.forEach(function (audioName) {
        audioPropertyMap[audioName] = Object.assign({}, exports.initialAudioSignPropertyDefaults);
    });
    return audioPropertyMap;
};
function dmGetDefaultAudioSignPropertyMap() {
    return DmInternal.defaults.audioSignPropertyMap;
}
exports.dmGetDefaultAudioSignPropertyMap = dmGetDefaultAudioSignPropertyMap;
var initialDefaultAudioOutputAssignmentMap = {
    analog1: bscore_1.AudioOutputType.Pcm,
    analog2: bscore_1.AudioOutputType.None,
    analog3: bscore_1.AudioOutputType.None,
    usbA: bscore_1.AudioOutputType.None,
    usbB: bscore_1.AudioOutputType.None,
    usbC: bscore_1.AudioOutputType.None,
    usbD: bscore_1.AudioOutputType.None,
    hdmi: bscore_1.AudioOutputType.Pcm,
    spdif: bscore_1.AudioOutputType.Pcm,
    usbTypeA: bscore_1.AudioOutputType.None,
    usbTypeC: bscore_1.AudioOutputType.None,
    usb700_1: bscore_1.AudioOutputType.None,
    usb700_2: bscore_1.AudioOutputType.None,
    usb700_3: bscore_1.AudioOutputType.None,
    usb700_4: bscore_1.AudioOutputType.None,
    usb700_5: bscore_1.AudioOutputType.None,
    usb700_6: bscore_1.AudioOutputType.None,
    usb700_7: bscore_1.AudioOutputType.None,
};
Object.freeze(initialDefaultAudioOutputAssignmentMap);
exports.initialAudioZonePropertyDefaults = {
    audioOutput: bscore_1.AudioOutputSelectionType.Analog,
    audioMode: bscore_1.AudioModeType.Stereo,
    audioMapping: bscore_1.AudioMappingType.Audio1,
    audioOutputAssignments: initialDefaultAudioOutputAssignmentMap,
    audioMixMode: bscore_1.AudioMixModeType.Stereo,
    audioVolume: 100,
    minimumVolume: 0,
    maximumVolume: 100,
};
Object.freeze(exports.initialAudioZonePropertyDefaults);
function dmGetDefaultAudioZoneProperties() {
    return DmInternal.defaults.audioZoneProperties;
}
exports.dmGetDefaultAudioZoneProperties = dmGetDefaultAudioZoneProperties;
exports.initialEnhancedAudioZonePropertyDefaults = {
    fadeLength: 4,
};
Object.freeze(exports.initialEnhancedAudioZonePropertyDefaults);
function dmGetDefaultEnhancedAudioZoneProperties() {
    return DmInternal.defaults.enhancedAudioZoneProperties;
}
exports.dmGetDefaultEnhancedAudioZoneProperties = dmGetDefaultEnhancedAudioZoneProperties;
exports.initialImageZonePropertyDefaults = {
    imageMode: bscore_1.ImageModeType.CenterImage,
};
Object.freeze(exports.initialImageZonePropertyDefaults);
function dmGetDefaultImageZoneProperties() {
    return DmInternal.defaults.imageZoneProperties;
}
exports.dmGetDefaultImageZoneProperties = dmGetDefaultImageZoneProperties;
exports.initialVideoZonePropertyDefaults = {
    viewMode: bscore_1.ViewModeType.Letterboxed,
    liveVideoInput: bscore_1.LiveVideoInputType.SVideo,
    liveVideoStandard: bscore_1.LiveVideoStandardType.NtscM,
    videoVolume: 100,
    brightness: 128,
    contrast: 64,
    saturation: 64,
    hue: 0,
    zOrderFront: true,
    mosaic: false,
    maxContentResolution: bscore_1.MosaicMaxContentResolutionType.HD,
};
Object.freeze(exports.initialVideoZonePropertyDefaults);
function dmGetDefaultVideoZoneProperties(existZOrderFront) {
    if (existZOrderFront === void 0) { existZOrderFront = false; }
    var defaultVideoZoneProperty = DmInternal.defaults.videoZoneProperties;
    if (defaultVideoZoneProperty.zOrderFront === existZOrderFront) {
        defaultVideoZoneProperty.zOrderFront = !existZOrderFront;
    }
    return defaultVideoZoneProperty;
}
exports.dmGetDefaultVideoZoneProperties = dmGetDefaultVideoZoneProperties;
var initialWidgetDefaults = {
    foregroundTextColor: { a: 255, r: 160, g: 160, b: 160 },
    backgroundTextColor: { a: 255, r: 0, g: 0, b: 0 },
    font: bsDmInterfaces_1.DmDefaultFontName,
    fontSize: 0,
    backgroundBitmapAssetId: bscore_1.BsAssetIdNone,
    stretchBitmapFile: false,
};
Object.freeze(initialWidgetDefaults);
var initialTextWidgetDefaults = {
    numberOfLines: 3,
    delay: 5,
    rotation: bscore_1.RotationType.rot0,
    alignment: bscore_1.TextHAlignmentType.Left,
    scrollingMethod: bscore_1.TextScrollingMethodType.Animated,
};
Object.freeze(initialTextWidgetDefaults);
exports.initialTickerZonePropertyDefaults = {
    textWidget: initialTextWidgetDefaults,
    widget: initialWidgetDefaults,
    scrollSpeed: 100,
};
Object.freeze(exports.initialTickerZonePropertyDefaults);
function dmGetDefaultTickerZoneProperties() {
    return DmInternal.defaults.tickerZoneProperties;
}
exports.dmGetDefaultTickerZoneProperties = dmGetDefaultTickerZoneProperties;
exports.initialClockZonePropertyDefaults = {
    displayTime: true,
    rotation: bscore_1.RotationType.rot0,
    widget: initialWidgetDefaults,
};
Object.freeze(exports.initialClockZonePropertyDefaults);
function dmGetDefaultClockZoneProperties() {
    return DmInternal.defaults.clockZoneProperties;
}
exports.dmGetDefaultClockZoneProperties = dmGetDefaultClockZoneProperties;
exports.initialLiveTextItemTextPropertyDefaults = {
    textWidget: initialTextWidgetDefaults,
    widget: initialWidgetDefaults,
    useBackgroundColor: false,
};
Object.freeze(exports.initialLiveTextItemTextPropertyDefaults);
function dmGetDefaultLiveTextItemTextProperties() {
    return DmInternal.defaults.liveTextItemTextProperties;
}
exports.dmGetDefaultLiveTextItemTextProperties = dmGetDefaultLiveTextItemTextProperties;
exports.initialDataFeedSourcePropertyDefaults = {
    updateInterval: 300,
    useHeadRequest: true,
};
Object.freeze(exports.initialDataFeedSourcePropertyDefaults);
function dmGetDefaultDataFeedSourceProperties() {
    return DmInternal.defaults.dataFeedSourceProperties;
}
exports.dmGetDefaultDataFeedSourceProperties = dmGetDefaultDataFeedSourceProperties;
exports.initialVideoContentItemDefaults = {
    volume: 100,
    videoDisplayMode: bscore_1.VideoDisplayModeType.m2D,
    automaticallyLoop: true,
};
Object.freeze(exports.initialVideoContentItemDefaults);
function dmGetDefaultVideoContentItemData() {
    return DmInternal.defaults.videoContentItem;
}
exports.dmGetDefaultVideoContentItemData = dmGetDefaultVideoContentItemData;
exports.initialAudioContentItemDefaults = {
    volume: 100,
};
Object.freeze(exports.initialAudioContentItemDefaults);
function dmGetDefaultAudioContentItemData() {
    return DmInternal.defaults.audioContentItem;
}
exports.dmGetDefaultAudioContentItemData = dmGetDefaultAudioContentItemData;
exports.initialImageContentItemDefaults = {
    useImageBuffer: false,
    videoPlayerRequired: false,
    defaultTransition: bscore_1.TransitionType.NoEffect,
    transitionDuration: 1,
    displayDuration: 6,
};
Object.freeze(exports.initialImageContentItemDefaults);
function dmGetDefaultImageContentItemData() {
    return DmInternal.defaults.imageContentItem;
}
exports.dmGetDefaultImageContentItemData = dmGetDefaultImageContentItemData;
exports.initialHtmlContentItemDefaults = {
    enableBrightSignJavascriptObjects: false,
    enableCrossDomainPolicyChecks: true,
    ignoreHttpsCertificateErrors: false,
    enableCamera: false,
    enableMouseEvents: false,
    displayCursor: false,
    hwzOn: false,
    useUserStylesheet: false,
    displayDuration: 0,
};
Object.freeze(exports.initialHtmlContentItemDefaults);
function dmGetDefaultHtmlContentItemData() {
    return DmInternal.defaults.htmlContentItem;
}
exports.dmGetDefaultHtmlContentItemData = dmGetDefaultHtmlContentItemData;
exports.initialMrssContentItemDefaults = {
    videoPlayerRequired: false,
};
Object.freeze(exports.initialMrssContentItemDefaults);
function dmGetDefaultMrssDataFeedContentItemData() {
    return DmInternal.defaults.mrssContentItem;
}
exports.dmGetDefaultMrssDataFeedContentItemData = dmGetDefaultMrssDataFeedContentItemData;
exports.initialTwitterContentItemDefaults = {
    userName: '',
    updateInterval: 300,
    restrictNumberOfTweets: bscore_1.TwitterFeedRestrictionType.None,
    numberOfTweetsToShow: 0,
    numberOfRecentDaysForTweets: 0,
};
Object.freeze(exports.initialMrssContentItemDefaults);
function dmGetDefaultTwitterFeedContentItemData() {
    return DmInternal.defaults.twitterContentItem;
}
exports.dmGetDefaultTwitterFeedContentItemData = dmGetDefaultTwitterFeedContentItemData;
exports.initialLiveVideoContentItemDefaults = {
    volume: 100,
    overscan: false,
    displayDuration: 0,
};
Object.freeze(exports.initialLiveVideoContentItemDefaults);
function dmGetDefaultLiveVideoContentItemData() {
    return DmInternal.defaults.liveVideoContentItem;
}
exports.dmGetDefaultLiveVideoContentItemData = dmGetDefaultLiveVideoContentItemData;
exports.initialStreamContentItemDefaults = {
    volume: 100,
    displayDuration: 0,
};
Object.freeze(exports.initialStreamContentItemDefaults);
function dmGetDefaultVideoStreamContentItemData() {
    return DmInternal.defaults.videoStreamContentItem;
}
exports.dmGetDefaultVideoStreamContentItemData = dmGetDefaultVideoStreamContentItemData;
function dmGetDefaultAudioStreamContentItemData() {
    return DmInternal.defaults.audioStreamContentItem;
}
exports.dmGetDefaultAudioStreamContentItemData = dmGetDefaultAudioStreamContentItemData;
exports.initialMjpegStreamContentItemDefaults = {
    rotation: bscore_1.RotationType.rot0,
    displayDuration: 0,
};
Object.freeze(exports.initialMjpegStreamContentItemDefaults);
function dmGetDefaultMjpegStreamContentItemData() {
    return DmInternal.defaults.mjpegStreamContentItem;
}
exports.dmGetDefaultMjpegStreamContentItemData = dmGetDefaultMjpegStreamContentItemData;
exports.initialMediaListContentItemDefaults = {
    playbackType: bscore_1.MediaListPlaybackType.FromBeginning,
    shuffle: false,
    support4KImage: false,
    sendMediaZoneMessage: false,
    transition: bscore_1.TransitionType.NoEffect,
    transitionDuration: 1,
    autoTransitions: true,
};
Object.freeze(exports.initialMediaListContentItemDefaults);
function dmGetDefaultMediaListContentItemData() {
    return DmInternal.defaults.mediaListContentItem;
}
exports.dmGetDefaultMediaListContentItemData = dmGetDefaultMediaListContentItemData;
exports.initialPlayFileContentItemDefaults = {
    triggerType: bscore_1.PlayFileTriggerType.ByEventData,
    useDefaultMedia: false,
};
Object.freeze(exports.initialPlayFileContentItemDefaults);
function dmGetDefaultPlayFileContentItemData() {
    return DmInternal.defaults.playFileContentItem;
}
exports.dmGetDefaultPlayFileContentItemData = dmGetDefaultPlayFileContentItemData;
exports.initialEventHandlerContentItemDefaults = {
    stopPlayback: false,
};
Object.freeze(exports.initialEventHandlerContentItemDefaults);
function dmGetDefaultEventHandlerContentItemData() {
    return DmInternal.defaults.eventHandlerContentItem;
}
exports.dmGetDefaultEventHandlerContentItemData = dmGetDefaultEventHandlerContentItemData;
var DmInternal;
(function (DmInternal) {
    var DefaultProperties = (function () {
        function DefaultProperties() {
            this.reset();
        }
        DefaultProperties.prototype.reset = function () {
            this._signProperties = __assign({}, exports.initialSignPropertyDefaults);
            this._serialPortConfigurations = createDefaultSerialPortList();
            this._gpioList = exports.initialGpioListDefaults.slice();
            this._buttonPanels = createDefaultButtonPanelMap();
            this._audioSignPropertyMap = createDefaultAudioSignPropertyMap();
            this._audioZoneProperties = __assign({}, exports.initialAudioZonePropertyDefaults);
            this._enhancedAudioZoneProperties = __assign({}, exports.initialEnhancedAudioZonePropertyDefaults);
            this._imageZoneProperties = __assign({}, exports.initialImageZonePropertyDefaults);
            this._videoZoneProperties = __assign({}, exports.initialVideoZonePropertyDefaults);
            this._tickerZoneProperties = __assign({}, exports.initialTickerZonePropertyDefaults);
            this._clockZoneProperties = __assign({}, exports.initialClockZonePropertyDefaults);
            this._liveTextItemTextProperties = __assign({}, exports.initialLiveTextItemTextPropertyDefaults);
            this._dataFeedSourceProperties = __assign({}, exports.initialDataFeedSourcePropertyDefaults);
            this._videoContentItem = __assign({}, exports.initialVideoContentItemDefaults);
            this._audioContentItem = __assign({}, exports.initialAudioContentItemDefaults);
            this._imageContentItem = __assign({}, exports.initialImageContentItemDefaults);
            this._htmlContentItem = __assign({}, exports.initialHtmlContentItemDefaults);
            this._mrssContentItem = __assign({}, exports.initialMrssContentItemDefaults);
            this._twitterContentItem = __assign({}, exports.initialTwitterContentItemDefaults);
            this._liveVideoContentItem = __assign({}, exports.initialLiveVideoContentItemDefaults);
            this._videoStreamContentItem = __assign({}, exports.initialStreamContentItemDefaults);
            this._audioStreamContentItem = __assign({}, exports.initialStreamContentItemDefaults);
            this._mjpegStreamContentItem = __assign({}, exports.initialMjpegStreamContentItemDefaults);
            this._mediaListContentItem = __assign({}, exports.initialMediaListContentItemDefaults);
            this._playFileContentItem = __assign({}, exports.initialPlayFileContentItemDefaults);
            this._eventHandlerContentItem = __assign({}, exports.initialEventHandlerContentItemDefaults);
        };
        DefaultProperties.prototype.merge = function (params) {
            var _this = this;
            var getNewDefaultWidget = function (existingWidgetDefault, newWidgetParams) {
                var widgetClone = lodash_1.cloneDeep(newWidgetParams);
                return __assign({}, existingWidgetDefault, widgetClone, { backgroundBitmapAssetId: bscore_1.BsAssetIdNone, font: bsDmInterfaces_1.DmDefaultFontName });
            };
            if (params.signProperties) {
                Object.assign(this._signProperties, params.signProperties);
            }
            if (params.serialPortConfigurations && Array.isArray(params.serialPortConfigurations)) {
                var updateList = params.serialPortConfigurations;
                updateList.forEach(function (portConfig) {
                    var portNum = portConfig.port;
                    if (portNum != null) {
                        _this._serialPortConfigurations[portNum] =
                            Object.assign({}, _this._serialPortConfigurations[portNum], portConfig);
                    }
                });
            }
            if (params.gpio && Array.isArray(params.gpio)) {
                this._gpioList = params.gpio.slice();
            }
            if (params.buttonPanels) {
                var updateList_1 = params.buttonPanels;
                Object.keys(updateList_1).forEach(function (bpName) {
                    _this._buttonPanels[bpName] = Object.assign({}, _this._buttonPanels[bpName], updateList_1[bpName]);
                });
            }
            if (params.audioSignPropertyMap) {
                var updateList_2 = params.audioSignPropertyMap;
                Object.keys(updateList_2).forEach(function (audioName) {
                    _this._audioSignPropertyMap[audioName] =
                        Object.assign({}, _this._audioSignPropertyMap[audioName], updateList_2[audioName]);
                });
            }
            if (params.audioZoneProperties) {
                Object.assign(this._audioZoneProperties, params.audioZoneProperties);
            }
            if (params.enhancedAudioZoneProperties) {
                Object.assign(this._enhancedAudioZoneProperties, params.enhancedAudioZoneProperties);
            }
            if (params.imageZoneProperties) {
                Object.assign(this._imageZoneProperties, params.imageZoneProperties);
            }
            if (params.videoZoneProperties) {
                Object.assign(this._videoZoneProperties, params.videoZoneProperties);
            }
            if (params.tickerZoneProperties) {
                var newProps = __assign({}, params.tickerZoneProperties);
                if (params.tickerZoneProperties.textWidget) {
                    newProps.textWidget = __assign({}, this._tickerZoneProperties.textWidget, params.tickerZoneProperties.textWidget);
                }
                if (params.tickerZoneProperties.widget) {
                    newProps.widget = getNewDefaultWidget(this._tickerZoneProperties.widget, params.tickerZoneProperties.widget);
                }
                Object.assign(this._tickerZoneProperties, newProps);
            }
            if (params.clockZoneProperties) {
                var newProps = __assign({}, params.clockZoneProperties);
                if (params.clockZoneProperties.widget) {
                    newProps.widget = getNewDefaultWidget(this._clockZoneProperties.widget, params.clockZoneProperties.widget);
                }
                Object.assign(this._clockZoneProperties, newProps);
            }
            if (params.liveTextItemTextProperties) {
                var newProps = Object.assign({}, params.liveTextItemTextProperties);
                if (params.liveTextItemTextProperties.textWidget) {
                    newProps.textWidget = __assign({}, this._liveTextItemTextProperties.textWidget, params.liveTextItemTextProperties.textWidget);
                }
                if (params.liveTextItemTextProperties.widget) {
                    newProps.widget = getNewDefaultWidget(this._liveTextItemTextProperties.widget, params.liveTextItemTextProperties.widget);
                }
                Object.assign(this._liveTextItemTextProperties, newProps);
            }
            if (params.dataFeedSourceProperties) {
                Object.assign(this._dataFeedSourceProperties, params.dataFeedSourceProperties);
            }
            if (params.videoContentItem) {
                Object.assign(this._videoContentItem, params.videoContentItem);
            }
            if (params.audioContentItem) {
                Object.assign(this._audioContentItem, params.audioContentItem);
            }
            if (params.imageContentItem) {
                Object.assign(this._imageContentItem, params.imageContentItem);
            }
            if (params.htmlContentItem) {
                Object.assign(this._htmlContentItem, params.htmlContentItem);
            }
            if (params.mrssContentItem) {
                Object.assign(this._mrssContentItem, params.mrssContentItem);
            }
            if (params.twitterContentItem) {
                Object.assign(this._twitterContentItem, params.twitterContentItem);
            }
            if (params.liveVideoContentItem) {
                Object.assign(this._liveVideoContentItem, params.liveVideoContentItem);
            }
            if (params.videoStreamContentItem) {
                Object.assign(this._videoStreamContentItem, params.videoStreamContentItem);
            }
            if (params.audioStreamContentItem) {
                Object.assign(this._audioStreamContentItem, params.audioStreamContentItem);
            }
            if (params.mjpegStreamContentItem) {
                Object.assign(this._mjpegStreamContentItem, params.mjpegStreamContentItem);
            }
            if (params.mediaListContentItem) {
                Object.assign(this._mediaListContentItem, params.mediaListContentItem);
            }
            if (params.playFileContentItem) {
                Object.assign(this._playFileContentItem, params.playFileContentItem);
            }
            if (params.eventHandlerContentItem) {
                Object.assign(this._eventHandlerContentItem, params.eventHandlerContentItem);
            }
        };
        Object.defineProperty(DefaultProperties.prototype, "allDefaults", {
            get: function () {
                return {
                    signProperties: this.signProperties,
                    serialPortConfigurations: this.serialPortConfigurations,
                    gpio: this.gpio,
                    buttonPanels: this.buttonPanels,
                    audioSignPropertyMap: this.audioSignPropertyMap,
                    audioZoneProperties: this.audioZoneProperties,
                    enhancedAudioZoneProperties: this.enhancedAudioZoneProperties,
                    imageZoneProperties: this.imageZoneProperties,
                    videoZoneProperties: this.videoZoneProperties,
                    tickerZoneProperties: this.tickerZoneProperties,
                    clockZoneProperties: this.clockZoneProperties,
                    liveTextItemTextProperties: this.liveTextItemTextProperties,
                    dataFeedSourceProperties: this.dataFeedSourceProperties,
                    videoContentItem: this.videoContentItem,
                    audioContentItem: this.audioContentItem,
                    imageContentItem: this.imageContentItem,
                    htmlContentItem: this.htmlContentItem,
                    mrssContentItem: this.mrssContentItem,
                    twitterContentItem: this.twitterContentItem,
                    liveVideoContentItem: this.liveVideoContentItem,
                    videoStreamContentItem: this.videoStreamContentItem,
                    audioStreamContentItem: this.audioStreamContentItem,
                    mjpegStreamContentItem: this.mjpegStreamContentItem,
                    mediaListContentItem: this.mediaListContentItem,
                    playFileContentItem: this.playFileContentItem,
                    eventHandlerContentItem: this.eventHandlerContentItem,
                };
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "signProperties", {
            get: function () { return lodash_1.cloneDeep(this._signProperties); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "serialPortConfigurations", {
            get: function () { return lodash_1.cloneDeep(this._serialPortConfigurations); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "gpio", {
            get: function () { return lodash_1.cloneDeep(this._gpioList); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "buttonPanels", {
            get: function () { return lodash_1.cloneDeep(this._buttonPanels); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "audioSignPropertyMap", {
            get: function () { return lodash_1.cloneDeep(this._audioSignPropertyMap); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "audioZoneProperties", {
            get: function () { return lodash_1.cloneDeep(this._audioZoneProperties); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "enhancedAudioZoneProperties", {
            get: function () { return lodash_1.cloneDeep(this._enhancedAudioZoneProperties); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "imageZoneProperties", {
            get: function () { return lodash_1.cloneDeep(this._imageZoneProperties); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "videoZoneProperties", {
            get: function () { return lodash_1.cloneDeep(this._videoZoneProperties); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "tickerZoneProperties", {
            get: function () { return lodash_1.cloneDeep(this._tickerZoneProperties); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "clockZoneProperties", {
            get: function () { return lodash_1.cloneDeep(this._clockZoneProperties); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "liveTextItemTextProperties", {
            get: function () { return lodash_1.cloneDeep(this._liveTextItemTextProperties); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "dataFeedSourceProperties", {
            get: function () { return lodash_1.cloneDeep(this._dataFeedSourceProperties); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "videoContentItem", {
            get: function () { return lodash_1.cloneDeep(this._videoContentItem); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "audioContentItem", {
            get: function () { return lodash_1.cloneDeep(this._audioContentItem); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "imageContentItem", {
            get: function () { return lodash_1.cloneDeep(this._imageContentItem); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "htmlContentItem", {
            get: function () { return lodash_1.cloneDeep(this._htmlContentItem); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "mrssContentItem", {
            get: function () { return lodash_1.cloneDeep(this._mrssContentItem); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "twitterContentItem", {
            get: function () { return lodash_1.cloneDeep(this._twitterContentItem); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "liveVideoContentItem", {
            get: function () { return lodash_1.cloneDeep(this._liveVideoContentItem); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "videoStreamContentItem", {
            get: function () { return lodash_1.cloneDeep(this._videoStreamContentItem); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "audioStreamContentItem", {
            get: function () { return lodash_1.cloneDeep(this._audioStreamContentItem); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "mjpegStreamContentItem", {
            get: function () { return lodash_1.cloneDeep(this._mjpegStreamContentItem); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "mediaListContentItem", {
            get: function () { return lodash_1.cloneDeep(this._mediaListContentItem); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "playFileContentItem", {
            get: function () { return lodash_1.cloneDeep(this._playFileContentItem); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultProperties.prototype, "eventHandlerContentItem", {
            get: function () { return lodash_1.cloneDeep(this._eventHandlerContentItem); },
            enumerable: true,
            configurable: true
        });
        return DefaultProperties;
    }());
    DmInternal.DefaultProperties = DefaultProperties;
    DmInternal.defaults = new DefaultProperties();
})(DmInternal = exports.DmInternal || (exports.DmInternal = {}));


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(3);
var lodash_1 = __webpack_require__(0);
var bsDmState_1 = __webpack_require__(5);
var bsDmValidate_1 = __webpack_require__(35);
var bsDmError_1 = __webpack_require__(4);
var selectors_1 = __webpack_require__(6);
var actionTransition_1 = __webpack_require__(22);
exports.ADD_EVENT = 'DM_ADD_EVENT';
exports.ADD_MULTIPLE_EVENTS = 'DM_ADD_MULTIPLE_EVENTS';
exports.UPDATE_EVENT = 'DM_UPDATE_EVENT';
exports.DELETE_EVENT = 'DM_DELETE_EVENT';
function dmAddEvent(name, type, mediaStateId, data, disabled, intrinsicAction) {
    if (data === void 0) { data = null; }
    if (disabled === void 0) { disabled = false; }
    var action = {
        type: exports.ADD_EVENT,
        payload: {
            id: utils_1.newBsDmId(),
            name: name,
            type: type,
            mediaStateId: mediaStateId,
            disabled: disabled,
            data: lodash_1.cloneDeep(data),
        },
    };
    if (intrinsicAction) {
        action.payload.action = intrinsicAction;
    }
    return action;
}
exports.dmAddEvent = dmAddEvent;
function dmAddEventFromSpecification(name, mediaStateId, event, disabled) {
    if (disabled === void 0) { disabled = false; }
    var action = {
        type: exports.ADD_EVENT,
        payload: {
            id: utils_1.newBsDmId(),
            name: name,
            type: event.type,
            mediaStateId: mediaStateId,
            disabled: disabled,
            data: lodash_1.cloneDeep(event.data),
        },
    };
    if (event.action) {
        action.payload.action = event.action;
    }
    return action;
}
exports.dmAddEventFromSpecification = dmAddEventFromSpecification;
function dmAddMultipleEvents(events) {
    var eventsToAdd = events.filter(function (evt) { return !lodash_1.isNil(evt); }).map(function (ev) {
        var event = {
            id: utils_1.isValidBsDmId(ev.id) ? ev.id : utils_1.newBsDmId(),
            name: ev.name,
            type: ev.type,
            mediaStateId: ev.mediaStateId,
            disabled: ev.disabled,
            data: lodash_1.cloneDeep(ev.data),
        };
        if (ev.action) {
            event.action = ev.action;
        }
        return event;
    });
    return {
        type: exports.ADD_MULTIPLE_EVENTS,
        payload: { events: eventsToAdd },
    };
}
exports.dmAddMultipleEvents = dmAddMultipleEvents;
function dmUpdateEvent(params) {
    return {
        type: exports.UPDATE_EVENT,
        payload: params,
    };
}
exports.dmUpdateEvent = dmUpdateEvent;
function dmUpdateEventType(params) {
    return function (dispatch, getState) {
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var existingEvent = selectors_1.dmGetEventById(dmState, { id: params.id });
        if (lodash_1.isNil(existingEvent)) {
            throw (new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateEventType: event ID is not valid'));
        }
        var testResult = bsDmValidate_1.dmCanUpdateEventToMediaState(dmState, params.eventSpec, existingEvent.mediaStateId, params.id, params.target);
        if (!testResult.ok) {
            throw testResult.error;
        }
        var _a = params.eventSpec, type = _a.type, data = _a.data, action = _a.action;
        return dispatch(dmUpdateEvent({ id: params.id, type: type, data: data, action: action }));
    };
}
exports.dmUpdateEventType = dmUpdateEventType;
function dmGetEventDeleteParams(state, id) {
    var _a;
    var deleteParams = {
        eventIds: (Array.isArray(id) ? id : [id]).filter(utils_1.isValidBsDmId),
        transitionIds: [],
        commandIds: [],
    };
    deleteParams.eventIds.forEach(function (eventId) {
        var _a, _b;
        var eventTransitionIds = selectors_1.dmGetTransitionIdsForEvent(state, { id: eventId });
        if (eventTransitionIds.length) {
            (_a = deleteParams.transitionIds).splice.apply(_a, [0, 0].concat(eventTransitionIds));
        }
        var eventCommands = selectors_1.dmCommandIdsForEvent(state, { id: eventId });
        if (eventCommands.length) {
            (_b = deleteParams.commandIds).splice.apply(_b, [0, 0].concat(eventCommands));
        }
    });
    var transitionDeleteParams = actionTransition_1.dmGetTransitionDeleteParams(state, deleteParams.transitionIds);
    if (transitionDeleteParams.commandIds.length) {
        (_a = deleteParams.commandIds).splice.apply(_a, [0, 0].concat(transitionDeleteParams.commandIds));
    }
    return deleteParams;
}
exports.dmGetEventDeleteParams = dmGetEventDeleteParams;
function dmDeleteEventWithParams(params) {
    return {
        type: exports.DELETE_EVENT,
        payload: params,
    };
}
exports.dmDeleteEventWithParams = dmDeleteEventWithParams;
function dmDeleteEvent(id) {
    return function (dispatch, getState) {
        var deleteParams = dmGetEventDeleteParams(bsDmState_1.dmFilterDmState(getState()), id);
        var mainAction = dmDeleteEventWithParams(deleteParams);
        dispatch(mainAction);
        return mainAction;
    };
}
exports.dmDeleteEvent = dmDeleteEvent;


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmParameterizedStrings_1 = __webpack_require__(14);
var lodash_1 = __webpack_require__(0);
function dmCreateRemoteDataFeedSpecification(url, usage, updateInterval, useHeadRequest) {
    var spec = {
        type: 'URLDataFeed',
        usage: usage,
        url: url,
    };
    if (!lodash_1.isNil(updateInterval)) {
        spec.updateInterval = updateInterval;
    }
    if (!lodash_1.isNil(useHeadRequest)) {
        spec.useHeadRequest = useHeadRequest;
    }
    return spec;
}
exports.dmCreateRemoteDataFeedSpecification = dmCreateRemoteDataFeedSpecification;
function dmCreateBsnDataFeedSpecification(assetItem, usage, updateInterval, useHeadRequest) {
    var spec = {
        type: assetItem.assetType,
        usage: usage,
        assetItem: assetItem,
    };
    if (!lodash_1.isNil(updateInterval)) {
        spec.updateInterval = updateInterval;
    }
    if (!lodash_1.isNil(useHeadRequest)) {
        spec.useHeadRequest = useHeadRequest;
    }
    return spec;
}
exports.dmCreateBsnDataFeedSpecification = dmCreateBsnDataFeedSpecification;
function dmIsBsnDataFeedSourceSpecification(feedSpec) {
    return feedSpec.type !== bscore_1.DataFeedType.URLDataFeed
        && bscore_1.bscIsAssetItem(feedSpec.assetItem)
        && bscore_1.bscAssetItemIsBsnDataFeed(feedSpec.assetItem);
}
exports.dmIsBsnDataFeedSourceSpecification = dmIsBsnDataFeedSourceSpecification;
function dmIsRemoteDataFeedSourceSpecification(feedSpec) {
    return feedSpec.type === bscore_1.DataFeedType.URLDataFeed
        && (typeof feedSpec.url === 'string'
            || bsDmParameterizedStrings_1.dmIsValidParameterizedString(feedSpec.url));
}
exports.dmIsRemoteDataFeedSourceSpecification = dmIsRemoteDataFeedSourceSpecification;
function dmIsDataFeedSourceSpecification(feedSpec) {
    return typeof feedSpec === 'object'
        && feedSpec.hasOwnProperty('type')
        && ((feedSpec.type === bscore_1.DataFeedType.URLDataFeed && feedSpec.hasOwnProperty('url')
            || feedSpec.hasOwnProperty('assetItem') && bscore_1.bscIsAssetItem(feedSpec.assetItem)));
}
exports.dmIsDataFeedSourceSpecification = dmIsDataFeedSourceSpecification;
function dmIsDataFeedSourceRemoteDataFeed(feedSource) {
    return feedSource.type === bscore_1.DataFeedType.URLDataFeed && feedSource.hasOwnProperty('url');
}
exports.dmIsDataFeedSourceRemoteDataFeed = dmIsDataFeedSourceRemoteDataFeed;
function dmIsDataFeedSourceBsnDataFeed(feedSource) {
    return !lodash_1.isNil(feedSource)
        && feedSource.type !== bscore_1.DataFeedType.URLDataFeed
        && feedSource.hasOwnProperty('dataFeedAssetId');
}
exports.dmIsDataFeedSourceBsnDataFeed = dmIsDataFeedSourceBsnDataFeed;


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmDefaults_1 = __webpack_require__(16);
var bsDmError_1 = __webpack_require__(4);
var lodash_1 = __webpack_require__(0);
function dmCreateEventDataForEventType(eventType, contentItemType) {
    switch (eventType) {
        case bscore_1.EventType.Timer:
        case bscore_1.EventType.MediaEndOrTimer: {
            var duration = 0;
            switch (contentItemType) {
                case bscore_1.ContentItemType.Image: {
                    var defaults = bsDmDefaults_1.dmGetDefaultImageContentItemData();
                    duration = defaults.displayDuration;
                    break;
                }
                case bscore_1.ContentItemType.Html: {
                    var defaults = bsDmDefaults_1.dmGetDefaultHtmlContentItemData();
                    duration = defaults.displayDuration;
                    break;
                }
                case bscore_1.ContentItemType.LiveVideo: {
                    var defaults = bsDmDefaults_1.dmGetDefaultLiveVideoContentItemData();
                    duration = defaults.displayDuration;
                    break;
                }
                case bscore_1.ContentItemType.VideoStream: {
                    var defaults = bsDmDefaults_1.dmGetDefaultVideoStreamContentItemData();
                    duration = defaults.displayDuration;
                    break;
                }
                case bscore_1.ContentItemType.AudioStream: {
                    var defaults = bsDmDefaults_1.dmGetDefaultAudioStreamContentItemData();
                    duration = defaults.displayDuration;
                    break;
                }
                case bscore_1.ContentItemType.MjpegStream: {
                    var defaults = bsDmDefaults_1.dmGetDefaultMjpegStreamContentItemData();
                    duration = defaults.displayDuration;
                    break;
                }
            }
            return { interval: duration };
        }
        case bscore_1.EventType.Keyboard:
        case bscore_1.EventType.Remote:
        case bscore_1.EventType.Usb:
        case bscore_1.EventType.Synchronize:
        case bscore_1.EventType.ZoneMessage:
        case bscore_1.EventType.InternalSynchronize:
            return { data: '' };
        case bscore_1.EventType.Serial:
            return {
                port: 0,
                data: '',
                assignInputToUserVariable: false,
                assignWildcardToUserVariable: false,
                userVariableToAssignInput: bsDmInterfaces_1.BsDmIdNone,
                userVariableToAssignWildcard: bsDmInterfaces_1.BsDmIdNone,
            };
        case bscore_1.EventType.TimeClock:
            return { type: bsDmInterfaces_1.DmTimeClockEventType.DateTime, data: { dateTime: new Date() } };
        case bscore_1.EventType.Gps:
            return {
                direction: bscore_1.RegionDirection.Enter,
                radius: 1,
                distanceUnits: bscore_1.DistanceUnits.Miles,
                latitude: 0,
                longitude: 0,
            };
        case bscore_1.EventType.RectangularTouch:
            return { region: null };
        case bscore_1.EventType.Gpio:
            return {
                buttonNumber: 0,
                buttonDirection: bscore_1.ButtonDirection.Down,
                pressContinuous: null,
            };
        case bscore_1.EventType.Bp:
            return {
                bpType: bscore_1.BpType.Bp900,
                bpIndex: bscore_1.BpIndex.A,
                buttonNumber: 0,
                pressContinuous: null,
            };
        case bscore_1.EventType.PluginMessage:
            return {
                name: '',
                message: '',
                assignInputToUserVariable: false,
                assignWildcardToUserVariable: false,
                userVariableToAssignInput: bsDmInterfaces_1.BsDmIdNone,
                userVariableToAssignWildcard: bsDmInterfaces_1.BsDmIdNone,
            };
        case bscore_1.EventType.Udp:
            return {
                data: '',
                label: '',
                export: true,
                assignInputToUserVariable: false,
                assignWildcardToUserVariable: false,
                userVariableToAssignInput: bsDmInterfaces_1.BsDmIdNone,
                userVariableToAssignWildcard: bsDmInterfaces_1.BsDmIdNone,
            };
        case bscore_1.EventType.WssEvent:
            return {
                port: '',
                wssEventSpec: null,
            };
    }
    return null;
}
exports.dmCreateEventDataForEventType = dmCreateEventDataForEventType;
function dmCreateDefaultEventSpecificationForEventType(eventType, eventData, contentItemType, action) {
    var eventSpec = {
        type: eventType,
        data: dmCreateEventDataForEventType(eventType, contentItemType),
    };
    if (!lodash_1.isNil(eventData)) {
        eventSpec.data = Object.assign(eventSpec.data, eventData);
    }
    if (eventType === bscore_1.EventType.VideoTimeCode || eventType === bscore_1.EventType.AudioTimeCode) {
        eventSpec.action = bscore_1.EventIntrinsicAction.None;
    }
    else if (!lodash_1.isNil(action)) {
        eventSpec.action = action;
    }
    return eventSpec;
}
exports.dmCreateDefaultEventSpecificationForEventType = dmCreateDefaultEventSpecificationForEventType;
function dmGetEventSpecificationFromEventState(eventState) {
    return lodash_1.pick(eventState, ['type', 'data', 'action']);
}
exports.dmGetEventSpecificationFromEventState = dmGetEventSpecificationFromEventState;
function dmDoEventSpecificationsMatch(eventSpecA, eventSpecB) {
    return lodash_1.isEqual(eventSpecA, eventSpecB);
}
exports.dmDoEventSpecificationsMatch = dmDoEventSpecificationsMatch;
function dmIsMediaListIntrinsicEvent(eventSpec) {
    var action = eventSpec.action;
    return !lodash_1.isNil(action)
        && (action === bscore_1.EventIntrinsicAction.SequenceForward || action === bscore_1.EventIntrinsicAction.SequenceBackward);
}
exports.dmIsMediaListIntrinsicEvent = dmIsMediaListIntrinsicEvent;
function dmGetDefaultEventTypeForInteractiveContentItem(contentItem) {
    var eventType = bscore_1.EventType.Timer;
    if (contentItem.type === bscore_1.ContentItemType.Video
        || contentItem.type === bscore_1.ContentItemType.Audio
        || contentItem.type === bscore_1.ContentItemType.MrssFeed
        || contentItem.type === bscore_1.ContentItemType.DataFeed) {
        eventType = bscore_1.EventType.MediaEnd;
    }
    return eventType;
}
exports.dmGetDefaultEventTypeForInteractiveContentItem = dmGetDefaultEventTypeForInteractiveContentItem;
function dmIsDuplicateEvent(event1, event2) {
    var result = { ok: true };
    if (event2.type === event1.type) {
        switch (event1.type) {
            case bscore_1.EventType.MediaEnd:
            case bscore_1.EventType.Timer:
                result.ok = false;
                break;
            case bscore_1.EventType.Keyboard:
            case bscore_1.EventType.Remote:
            case bscore_1.EventType.Usb:
            case bscore_1.EventType.Synchronize:
            case bscore_1.EventType.ZoneMessage:
            case bscore_1.EventType.InternalSynchronize:
                result.ok = event2.data.data !== event1.data.data;
                break;
            case bscore_1.EventType.Serial:
                result.ok = event2.data.port !== event1.data.port
                    || event2.data.data !== event1.data.data;
                break;
            case bscore_1.EventType.Gpio:
                result.ok = event2.data.buttonNumber !== event1.data.buttonNumber
                    || event2.data.buttonDirection !== event1.data.buttonDirection;
                break;
            case bscore_1.EventType.Bp:
                result.ok = event2.data.buttonNumber !== event1.data.buttonNumber
                    || event2.data.bpIndex !== event1.data.bpIndex
                    || event2.data.bpType !== event1.data.bpType;
                break;
            case bscore_1.EventType.Udp:
                result.ok = event2.data.data !== event1.data.data;
                break;
            case bscore_1.EventType.WssEvent:
                break;
        }
    }
    if (!result.ok) {
        result.error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.eventDuplicated);
    }
    return result;
}
exports.dmIsDuplicateEvent = dmIsDuplicateEvent;
function dmEventListHasNoDuplicateEvent(eventList, eventToTest, eventIdToIgnore) {
    var result = { ok: true };
    eventList.some(function (existingEvent) {
        if (lodash_1.isNil(eventIdToIgnore) || eventIdToIgnore !== existingEvent.id) {
            var eventResult = dmIsDuplicateEvent(existingEvent, eventToTest);
            if (!eventResult.ok) {
                result = eventResult;
                return true;
            }
        }
        return false;
    });
    return result;
}
exports.dmEventListHasNoDuplicateEvent = dmEventListHasNoDuplicateEvent;
var MediaEndEventContentTypeArray = [
    bscore_1.ContentItemType.Video, bscore_1.ContentItemType.Audio,
    bscore_1.ContentItemType.MrssFeed, bscore_1.ContentItemType.LiveVideo,
    bscore_1.ContentItemType.MediaList, bscore_1.ContentItemType.PlayFile,
    bscore_1.ContentItemType.VideoStream, bscore_1.ContentItemType.AudioStream, bscore_1.ContentItemType.MjpegStream,
    bscore_1.ContentItemType.SuperState,
];
var MediaEndEventContentTypes = new Set(MediaEndEventContentTypeArray);
function dmIsEventCompatibleWithContentItem(event, contentItemType) {
    var result = { ok: true };
    if (contentItemType !== bscore_1.ContentItemType.MediaList && dmIsMediaListIntrinsicEvent(event)) {
        result.ok = false;
        result.error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.eventNotCompatibleWithContentType, 'MediaList specific event action specified for ContentItemType ' + contentItemType);
        return result;
    }
    switch (event.type) {
        case bscore_1.EventType.MediaEnd:
            result.ok = MediaEndEventContentTypes.has(contentItemType);
            break;
        case bscore_1.EventType.MediaListEnd:
            result.ok = contentItemType === bscore_1.ContentItemType.MediaList;
            break;
        case bscore_1.EventType.AudioTimeCode:
            result.ok = contentItemType === bscore_1.ContentItemType.Audio;
            break;
        case bscore_1.EventType.VideoTimeCode:
            result.ok = contentItemType === bscore_1.ContentItemType.Video;
            break;
        case bscore_1.EventType.RectangularTouch:
            result.ok = contentItemType !== bscore_1.ContentItemType.EventHandler && contentItemType !== bscore_1.ContentItemType.SuperState;
            break;
    }
    if (!result.ok) {
        result.error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.eventNotCompatibleWithContentType);
    }
    return result;
}
exports.dmIsEventCompatibleWithContentItem = dmIsEventCompatibleWithContentItem;
function dmIsEventCompatibleWithTargetContentItem(event, contentItemType) {
    var result = { ok: true };
    var error = null;
    if (contentItemType !== bscore_1.ContentItemType.MediaList && dmIsMediaListIntrinsicEvent(event)) {
        result.ok = false;
        error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.eventNotCompatibleWithContentType, 'MediaList specific event action specified for ContentItemType ' + contentItemType);
    }
    else {
        switch (event.type) {
            case bscore_1.EventType.Synchronize:
                result.ok = contentItemType === bscore_1.ContentItemType.MediaList
                    || contentItemType === bscore_1.ContentItemType.Video
                    || contentItemType === bscore_1.ContentItemType.Image;
                error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.synchronizeEventNotCompatibleWithContentType);
                break;
        }
    }
    if (!result.ok && !lodash_1.isNil(error)) {
        result.error = error;
    }
    return result;
}
exports.dmIsEventCompatibleWithTargetContentItem = dmIsEventCompatibleWithTargetContentItem;
function dmIsEventCompatibleWithPlayerModel(event, playerModel) {
    var result = { ok: true };
    switch (event.type) {
        case bscore_1.EventType.Gpio:
            result.ok = bscore_1.bscPlayerModelHasFeature(playerModel, bscore_1.ModelFeature.Gpio);
            break;
        case bscore_1.EventType.Bp:
            result.ok = bscore_1.bscPlayerModelHasFeature(playerModel, bscore_1.ModelFeature.Bp);
            break;
        case bscore_1.EventType.RectangularTouch:
        case bscore_1.EventType.Keyboard:
        case bscore_1.EventType.Usb:
        case bscore_1.EventType.Remote:
        case bscore_1.EventType.Gps:
            result.ok = bscore_1.bscPlayerModelHasFeature(playerModel, bscore_1.ModelFeature.Usb);
            break;
        case bscore_1.EventType.Udp:
        case bscore_1.EventType.Synchronize:
            result.ok = bscore_1.bscPlayerModelHasFeature(playerModel, bscore_1.ModelFeature.Networking);
            break;
        case bscore_1.EventType.Serial:
            result.ok = bscore_1.bscPlayerModelHasFeature(playerModel, bscore_1.ModelFeature.Serial);
            break;
    }
    if (!result.ok) {
        result.error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.eventNotCompatibleWithPlayerModel, playerModel);
    }
    return result;
}
exports.dmIsEventCompatibleWithPlayerModel = dmIsEventCompatibleWithPlayerModel;
function dmIsTimeCodeEvent(eventType) {
    return !lodash_1.isNil(eventType) && (eventType === bscore_1.EventType.VideoTimeCode || eventType === bscore_1.EventType.AudioTimeCode);
}
exports.dmIsTimeCodeEvent = dmIsTimeCodeEvent;
function dmGetInitialBpAvailability() {
    var bp900Array = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
    var bp200Array = [0, 1, 2, 3];
    return {
        bp900: { a: bp900Array.slice(), b: bp900Array.slice(), c: bp900Array.slice(), d: bp900Array.slice() },
        bp200: { a: bp200Array.slice(), b: bp200Array.slice(), c: bp200Array.slice(), d: bp200Array.slice() },
    };
}
exports.dmGetInitialBpAvailability = dmGetInitialBpAvailability;
function dmGetBpAvailabilityForEventList(eventList, initialAvailability) {
    if (initialAvailability === void 0) { initialAvailability = dmGetInitialBpAvailability(); }
    var availability = initialAvailability;
    eventList.forEach(function (event) {
        if (event.type === bscore_1.EventType.Bp) {
            var eventData = event.data;
            var panelArray = availability[eventData.bpType][eventData.bpIndex];
            availability[eventData.bpType][eventData.bpIndex] =
                lodash_1.without(panelArray, eventData.buttonNumber);
        }
    });
    return availability;
}
exports.dmGetBpAvailabilityForEventList = dmGetBpAvailabilityForEventList;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(3);
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmState_1 = __webpack_require__(5);
var bsDmParameterizedStrings_1 = __webpack_require__(14);
var bsDmDefaults_1 = __webpack_require__(16);
var bsDmDataFeed_1 = __webpack_require__(18);
var actionBase_1 = __webpack_require__(8);
var actionAssetHelper_1 = __webpack_require__(11);
var actionAssetMap_1 = __webpack_require__(9);
var selectors_1 = __webpack_require__(6);
var bsDmError_1 = __webpack_require__(4);
var lodash_1 = __webpack_require__(0);
exports.ADD_DATA_FEED = 'DM_ADD_DATA_FEED';
exports.UPDATE_DATA_FEED = 'DM_UPDATE_DATA_FEED';
exports.DELETE_DATA_FEED = 'DM_DELETE_DATA_FEED';
exports.PUT_DATA_FEED_SOURCE = 'DM_PUT_DATA_FEED_SOURCE';
exports.UPDATE_DATA_FEED_SOURCE = 'DM_UPDATE_DATA_FEED_SOURCE';
exports.REMOVE_DATA_FEED_SOURCE = 'DM_REMOVE_DATA_FEED_SOURCE';
var defaultDataFeedProperties = {
    parserPlugin: bsDmInterfaces_1.BsDmIdNone,
    autoGenerateUserVariables: false,
    userVariableAccess: bscore_1.AccessType.Private,
};
var defaultBsnDataFeedProperties = __assign({}, defaultDataFeedProperties, { supportsAudio: false, playerTagMatching: bscore_1.PlayerTagMatchingType.DoNotMatchTags });
function initDataFeedSourceFromSpec(source, callerName) {
    var defaultProps = __assign({}, bsDmDefaults_1.dmGetDefaultDataFeedSourceProperties());
    if (bsDmDataFeed_1.dmIsBsnDataFeedSourceSpecification(source)) {
        return {
            id: utils_1.newBsDmId(),
            type: source.assetItem.assetType,
            dataFeedAssetId: source.assetItem.id,
            updateInterval: lodash_1.isNil(source.updateInterval) ? defaultProps.updateInterval : source.updateInterval,
            useHeadRequest: lodash_1.isNil(source.useHeadRequest) ? defaultProps.useHeadRequest : source.useHeadRequest,
        };
    }
    else if (bsDmDataFeed_1.dmIsRemoteDataFeedSourceSpecification(source)) {
        return {
            id: utils_1.newBsDmId(),
            type: 'URLDataFeed',
            url: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(source.url),
            updateInterval: lodash_1.isNil(source.updateInterval) ? defaultProps.updateInterval : source.updateInterval,
            useHeadRequest: lodash_1.isNil(source.useHeadRequest) ? defaultProps.useHeadRequest : source.useHeadRequest,
        };
    }
    throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, callerName + ': invalid data feed source specification');
}
function dmAddDataFeed(name, feedSpec, properties) {
    return function (dispatch, getState) {
        var actionListParams = dmGetAddDataFeedActionList(bsDmState_1.dmFilterDmState(getState()), name, feedSpec, properties);
        if (lodash_1.isNil(actionListParams)) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.unknownError, 'AddDataFeed - error in configuring data feed source');
        }
        dispatch(actionBase_1.dmBatchActions(actionListParams.actions));
        return actionListParams.mainAction;
    };
}
exports.dmAddDataFeed = dmAddDataFeed;
function dmGetAddDataFeedActionList(dmState, name, feedSpec, properties) {
    if (!lodash_1.isNil(properties)) {
        if (utils_1.isValidBsDmId(properties.parserPlugin)) {
            var plugin = selectors_1.dmGetParserPluginStateById(dmState, { id: properties.parserPlugin });
            if (lodash_1.isNil(plugin)) {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'AddDataFeed - invalid parser plugin ID');
            }
        }
        else if (lodash_1.isNull(properties.parserPlugin)) {
            properties.parserPlugin = bsDmInterfaces_1.BsDmIdNone;
        }
    }
    var actions = [];
    var feedSourceId = selectors_1.dmGetDataFeedSourceIdForFeedSpec(dmState, feedSpec);
    var feedSource = lodash_1.isNil(feedSourceId) ? null :
        selectors_1.dmGetDataFeedSourceForFeedSourceId(dmState, { id: feedSourceId });
    if (lodash_1.isNil(feedSource)) {
        feedSource = initDataFeedSourceFromSpec(feedSpec, 'dmAddDataFeed');
        if (bsDmDataFeed_1.dmIsDataFeedSourceRemoteDataFeed(feedSource)) {
            feedSource.url = selectors_1.dmResolveParameterizedStringUserVariables(dmState, { paramString: feedSource.url });
        }
    }
    if (bsDmDataFeed_1.dmIsBsnDataFeedSourceSpecification(feedSpec)) {
        var assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, feedSpec.assetItem);
        actions.push(actionAssetMap_1.dmPutAssetItem(assetItem));
        feedSource.dataFeedAssetId = assetItem.id;
        if (!name) {
            name = assetItem.name;
        }
    }
    actions.push(dmPutDataFeedSource(feedSource));
    var defaultProperties = feedSpec.type !== bscore_1.DataFeedType.URLDataFeed ? defaultBsnDataFeedProperties : defaultDataFeedProperties;
    var mainAction = dmPutDataFeed(lodash_1.isNil(name) ? '' : name, feedSource, feedSpec.usage, __assign({}, defaultProperties, properties));
    actions.push(mainAction);
    return { actions: actions, mainAction: mainAction };
}
exports.dmGetAddDataFeedActionList = dmGetAddDataFeedActionList;
function dmPutDataFeedSource(source) {
    return {
        type: exports.PUT_DATA_FEED_SOURCE,
        payload: source,
    };
}
exports.dmPutDataFeedSource = dmPutDataFeedSource;
function dmUpdateDataFeedSource(source) {
    return {
        type: exports.UPDATE_DATA_FEED_SOURCE,
        payload: source,
    };
}
exports.dmUpdateDataFeedSource = dmUpdateDataFeedSource;
function dmRemoveDataFeedSourceWithParams(deleteParams) {
    return {
        type: exports.REMOVE_DATA_FEED_SOURCE,
        payload: deleteParams,
    };
}
exports.dmRemoveDataFeedSourceWithParams = dmRemoveDataFeedSourceWithParams;
function dmGetDataFeedSourceRemoveParams(state, id) {
    var deleteParams = {
        dataFeedSourceIds: (Array.isArray(id) ? id : [id]).filter(utils_1.isValidBsDmId),
        assetIds: [],
    };
    deleteParams.dataFeedSourceIds.forEach(function (feedSourceId) {
        var feedSource = state.dataFeeds.sourcesById[feedSourceId];
        if (!lodash_1.isNil(feedSource) && bsDmDataFeed_1.dmIsDataFeedSourceBsnDataFeed(feedSource)) {
            deleteParams.assetIds.push(feedSource.dataFeedAssetId);
        }
    });
    return deleteParams;
}
exports.dmGetDataFeedSourceRemoveParams = dmGetDataFeedSourceRemoveParams;
function dmPutDataFeed(name, source, usage, properties) {
    return {
        type: exports.ADD_DATA_FEED,
        payload: {
            id: utils_1.newBsDmId(),
            name: name,
            feedSourceId: source.id,
            usage: usage,
            properties: properties,
        },
    };
}
exports.dmPutDataFeed = dmPutDataFeed;
function dmUpdateDataFeed(params) {
    return function (dispatch, getState) {
        var actionListParams = dmGetUpdateDataFeedActionList(bsDmState_1.dmFilterDmState(getState()), params);
        dispatch(actionBase_1.dmBatchActions(actionListParams.actions));
        return actionListParams.mainAction;
    };
}
exports.dmUpdateDataFeed = dmUpdateDataFeed;
function dmGetUpdateDataFeedActionList(dmState, params) {
    if (!lodash_1.isNil(params.properties)) {
        if (utils_1.isValidBsDmId(params.properties.parserPlugin)) {
            var plugin = selectors_1.dmGetParserPluginStateById(dmState, { id: params.properties.parserPlugin });
            if (lodash_1.isNil(plugin)) {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateDataFeed - invalid parser plugin ID');
            }
        }
        else if (lodash_1.isNull(params.properties.parserPlugin)) {
            params.properties.parserPlugin = bsDmInterfaces_1.BsDmIdNone;
        }
        lodash_1.omit(params.properties, 'isSystemFeed');
    }
    var actions = [];
    var feedSource;
    var usage;
    if (!lodash_1.isNil(params.feedSpec)) {
        var newFeedSourceId = selectors_1.dmGetDataFeedSourceIdForFeedSpec(dmState, params.feedSpec);
        var existingFeedSource = selectors_1.dmGetDataFeedSourceForFeedId(dmState, { id: params.id });
        var updateToSameFeedSource = !lodash_1.isNil(existingFeedSource) && !lodash_1.isNil(newFeedSourceId) && newFeedSourceId === existingFeedSource.id;
        var feedSourceProps = lodash_1.pick(params.feedSpec, ['updateInterval', 'useHeadRequest']);
        if (!updateToSameFeedSource) {
            if (!lodash_1.isNil(existingFeedSource)) {
                actions.push(dmRemoveDataFeedSourceWithParams(dmGetDataFeedSourceRemoveParams(dmState, existingFeedSource.id)));
            }
            var currentFeedSource = lodash_1.isNil(newFeedSourceId) ? null :
                selectors_1.dmGetDataFeedSourceForFeedSourceId(dmState, { id: newFeedSourceId });
            if (lodash_1.isNil(currentFeedSource)) {
                feedSource = initDataFeedSourceFromSpec(params.feedSpec, 'dmUpdateDataFeed');
                if (bsDmDataFeed_1.dmIsDataFeedSourceRemoteDataFeed(feedSource)) {
                    feedSource.url = selectors_1.dmResolveParameterizedStringUserVariables(dmState, { paramString: feedSource.url });
                }
                if (!lodash_1.isNil(existingFeedSource)) {
                    if (lodash_1.isNil(params.feedSpec.updateInterval)) {
                        feedSource.updateInterval = existingFeedSource.updateInterval;
                    }
                    if (lodash_1.isNil(params.feedSpec.useHeadRequest)) {
                        feedSource.useHeadRequest = existingFeedSource.useHeadRequest;
                    }
                }
            }
            else {
                feedSource = __assign({}, currentFeedSource, feedSourceProps);
            }
            if (bsDmDataFeed_1.dmIsBsnDataFeedSourceSpecification(params.feedSpec)) {
                var assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, params.feedSpec.assetItem);
                actions.push(actionAssetMap_1.dmPutAssetItem(assetItem));
                feedSource.dataFeedAssetId = assetItem.id;
                if (!params.name) {
                    params.name = assetItem.name;
                }
            }
            else if (lodash_1.isNil(params.name)) {
                params.name = '';
            }
            actions.push(dmPutDataFeedSource(feedSource));
        }
        else {
            if (Object.keys(feedSourceProps).length) {
                actions.push(dmUpdateDataFeedSource(__assign({ id: existingFeedSource.id }, feedSourceProps)));
            }
        }
        usage = params.feedSpec.usage;
    }
    var actionParams = lodash_1.pick(params, 'id', 'name', 'properties');
    if (!lodash_1.isNil(feedSource)) {
        actionParams.feedSourceId = feedSource.id;
    }
    if (!lodash_1.isNil(usage)) {
        actionParams.usage = usage;
    }
    var mainAction = {
        type: exports.UPDATE_DATA_FEED,
        payload: actionParams,
    };
    if (Object.keys(actionParams).length > 1 || actions.length > 0) {
        actions.push(mainAction);
    }
    return { actions: actions, mainAction: mainAction };
}
exports.dmGetUpdateDataFeedActionList = dmGetUpdateDataFeedActionList;
function dmUpdateDataFeedSourceProperties(params) {
    return function (dispatch, getState) {
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var dataFeedState = selectors_1.dmGetDataFeedStateById(dmState, { id: params.id });
        if (!lodash_1.isNil(dataFeedState)) {
            var props = lodash_1.pick(params, ['updateInterval', 'useHeadRequest']);
            return dispatch(dmUpdateDataFeedSource(__assign({ id: dataFeedState.feedSourceId }, props)));
        }
        else {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateDataFeedSourceProperties: invalid dataFeed ID');
        }
    };
}
exports.dmUpdateDataFeedSourceProperties = dmUpdateDataFeedSourceProperties;
function dmGetDataFeedDeleteParams(state, id) {
    var deleteParams = {
        dataFeedIds: (Array.isArray(id) ? id : [id]).filter(utils_1.isValidBsDmId),
        dataFeedSourceIds: [],
        assetIds: [],
    };
    deleteParams.dataFeedIds.forEach(function (dataFeedId) {
        var dataFeed = state.dataFeeds.feedsById[dataFeedId];
        if (!lodash_1.isNil(dataFeed)) {
            deleteParams.dataFeedSourceIds.push(dataFeed.feedSourceId);
            var feedSource = selectors_1.dmGetDataFeedSourceForFeedSourceId(state, { id: dataFeed.feedSourceId });
            if (bsDmDataFeed_1.dmIsDataFeedSourceBsnDataFeed(feedSource)) {
                deleteParams.assetIds.push(feedSource.dataFeedAssetId);
            }
        }
    });
    return deleteParams;
}
exports.dmGetDataFeedDeleteParams = dmGetDataFeedDeleteParams;
function dmDeleteDataFeedWithParams(params) {
    return {
        type: exports.DELETE_DATA_FEED,
        payload: params,
    };
}
exports.dmDeleteDataFeedWithParams = dmDeleteDataFeedWithParams;
function dmDeleteDataFeed(id) {
    return function (dispatch, getState) {
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var deleteParams = dmGetDataFeedDeleteParams(dmState, id);
        var mainAction = dmDeleteDataFeedWithParams(deleteParams);
        dispatch(mainAction);
        return mainAction;
    };
}
exports.dmDeleteDataFeed = dmDeleteDataFeed;


/***/ }),
/* 21 */
/***/ (function(module, exports) {

module.exports = __webpack_require__(19);

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(3);
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmState_1 = __webpack_require__(5);
var bsDmEvents_1 = __webpack_require__(19);
var bsDmError_1 = __webpack_require__(4);
var selectors_1 = __webpack_require__(6);
var actionBase_1 = __webpack_require__(8);
var lodash_1 = __webpack_require__(0);
exports.ADD_TRANSITION = 'DM_ADD_TRANSITION';
exports.ADD_CONDITIONAL_TRANSITION = 'DM_ADD_CONDITIONAL_TRANSITION';
exports.UPDATE_TRANSITION = 'DM_UPDATE_TRANSITION';
exports.UPDATE_TRANSITION_CONDITION = 'DM_UPDATE_TRANSITION_CONDITION';
exports.MOVE_TRANSITION_CONDITION = 'DM_MOVE_TRANSITION_CONDITION';
exports.DELETE_TRANSITION = 'DM_DELETE_TRANSITION';
function dmAddDefaultTransition(name, eventId, targetMediaStateId, type, duration) {
    if (type === void 0) { type = bscore_1.TransitionType.NoEffect; }
    if (duration === void 0) { duration = 0; }
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.ADD_TRANSITION,
            payload: {
                id: utils_1.newBsDmId(),
                name: name, eventId: eventId, targetMediaStateId: targetMediaStateId, type: type, duration: duration,
            },
        };
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        if (bsDmEvents_1.dmIsTimeCodeEvent(selectors_1.dmGetEventTypeById(dmState, { id: eventId }))) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidOperation, 'AddDefaultTransition - cannot add a transition to a TimeCode event', { action: mainAction });
        }
        var nonConditionalTransitionIds = selectors_1.dmGetNonConditionalTransitionsForEventId(dmState, { id: eventId });
        if (nonConditionalTransitionIds.length > 0) {
            var deleteParams = dmGetTransitionDeleteParams(dmState, nonConditionalTransitionIds);
            batchedActions.push(dmDeleteTransitionWithParams(deleteParams));
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmAddDefaultTransition = dmAddDefaultTransition;
function dmAddConditionalTransition(name, eventId, targetMediaStateId, condition, conditionIndex, conditionalAction, type, duration) {
    if (conditionIndex === void 0) { conditionIndex = -1; }
    if (conditionalAction === void 0) { conditionalAction = bscore_1.EventIntrinsicAction.None; }
    if (type === void 0) { type = bscore_1.TransitionType.NoEffect; }
    if (duration === void 0) { duration = 0; }
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.ADD_CONDITIONAL_TRANSITION,
            payload: {
                id: utils_1.newBsDmId(),
                name: name, eventId: eventId, targetMediaStateId: targetMediaStateId, type: type, duration: duration,
                condition: null,
                conditionIndex: 0,
                conditionalAction: conditionalAction !== null ? conditionalAction : bscore_1.EventIntrinsicAction.None,
            },
        };
        var dmState = bsDmState_1.dmFilterDmState(getState());
        if (bsDmEvents_1.dmIsTimeCodeEvent(selectors_1.dmGetEventTypeById(dmState, { id: eventId }))) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidOperation, 'AddConditionalTransition - cannot add a transition to a TimeCode event', { action: mainAction });
        }
        mainAction.payload.condition = resolveTransitionCondition(dmState, condition);
        var count = selectors_1.dmGetConditionalTransitionCountForEvent(dmState, { id: eventId });
        if (conditionIndex < 0 || conditionIndex >= count) {
            mainAction.payload.conditionIndex = count;
        }
        else {
            mainAction.payload.conditionIndex = conditionIndex;
        }
        dispatch(mainAction);
        return mainAction;
    };
}
exports.dmAddConditionalTransition = dmAddConditionalTransition;
var resolveTransitionCondition = function (dmState, condition) {
    var resolvedCondition = lodash_1.cloneDeep(condition);
    if (utils_1.isValidBsDmId(resolvedCondition.userVariableId)) {
        var userVariable = dmState.userVariables[resolvedCondition.userVariableId];
        if (!userVariable) {
            resolvedCondition.userVariableId = bsDmInterfaces_1.BsDmIdNone;
        }
    }
    if (!utils_1.isValidBsDmId(resolvedCondition.userVariableId)) {
        if (resolvedCondition.userVariableName) {
            var userVariableId = selectors_1.dmGetUserVariableIdForName(dmState, { name: resolvedCondition.userVariableName });
            if (userVariableId) {
                resolvedCondition.userVariableId = userVariableId;
                resolvedCondition = lodash_1.omit(resolvedCondition, ['userVariableName']);
            }
        }
        else {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'AddConditionalTransition: Transition condition must have a valid UserVariable ID or name');
        }
    }
    return resolvedCondition;
};
function dmAddTransition(name, eventId, targetMediaStateId, type, duration) {
    if (type === void 0) { type = bscore_1.TransitionType.NoEffect; }
    if (duration === void 0) { duration = 0; }
    return {
        type: exports.ADD_TRANSITION,
        payload: {
            id: utils_1.newBsDmId(),
            name: name, eventId: eventId, targetMediaStateId: targetMediaStateId, type: type, duration: duration,
        },
    };
}
exports.dmAddTransition = dmAddTransition;
function dmUpdateTransition(params) {
    return {
        type: exports.UPDATE_TRANSITION,
        payload: params,
    };
}
exports.dmUpdateTransition = dmUpdateTransition;
function dmUpdateTransitionCondition(params) {
    return function (dispatch, getState) {
        var id = params.id, condition = params.condition, conditionIndex = params.conditionIndex, conditionalAction = params.conditionalAction, targetMediaStateId = params.targetMediaStateId;
        var mainAction = {
            type: exports.UPDATE_TRANSITION_CONDITION,
            payload: {
                id: id,
                eventId: bsDmInterfaces_1.BsDmIdNone,
            },
        };
        if (!lodash_1.isNil(condition)) {
            mainAction.payload.condition = condition;
        }
        if (!lodash_1.isNil(conditionIndex)) {
            mainAction.payload.conditionIndex = conditionIndex;
        }
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var transition = dmState.transitions.transitionsById[id];
        if (!(transition && transition.condition)) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateTransitionCondition - ID does not reference a conditional transition', { action: mainAction });
        }
        mainAction.payload.eventId = transition.eventId;
        if (!lodash_1.isNil(condition)) {
            mainAction.payload.condition = resolveTransitionCondition(dmState, condition);
        }
        if (!lodash_1.isNil(conditionIndex)) {
            var count = selectors_1.dmGetConditionalTransitionCountForEvent(dmState, { id: transition.eventId });
            if (conditionIndex < 0 || conditionIndex >= count) {
                mainAction.payload.conditionIndex = count - 1;
            }
            else {
                mainAction.payload.conditionIndex = conditionIndex;
            }
        }
        if (conditionalAction !== undefined) {
            mainAction.payload.conditionalAction = conditionalAction !== null ? conditionalAction : bscore_1.EventIntrinsicAction.None;
        }
        if (targetMediaStateId !== undefined) {
            mainAction.payload.targetMediaStateId = targetMediaStateId !== null ? targetMediaStateId : bsDmInterfaces_1.BsDmIdNone;
        }
        dispatch(mainAction);
        return mainAction;
    };
}
exports.dmUpdateTransitionCondition = dmUpdateTransitionCondition;
function dmMoveTransitionConditionsAtIndices(eventId, indices, targetIndex) {
    return function (dispatch, getState) {
        if (typeof indices === 'number') {
            indices = [indices];
        }
        var mainAction = {
            type: exports.MOVE_TRANSITION_CONDITION,
            payload: { eventId: eventId, indices: indices, targetIndex: targetIndex },
        };
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var transitionCount = selectors_1.dmGetConditionalTransitionCountForEvent(dmState, { id: eventId });
        if (transitionCount === 0) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'MoveConditionalTransitionsAtIndices - event does not have any conditional transitions', { action: mainAction });
        }
        if (targetIndex < 0 || targetIndex >= transitionCount) {
            mainAction.payload.targetIndex = transitionCount - 1;
        }
        mainAction.payload.indices = indices.filter(function (index) { return index >= 0 && index < transitionCount; });
        dispatch(mainAction);
        return mainAction;
    };
}
exports.dmMoveTransitionConditionsAtIndices = dmMoveTransitionConditionsAtIndices;
function dmGetTransitionDeleteParams(state, id) {
    var deleteParams = {
        transitionIds: Array.isArray(id) ? id : [id],
        commandIds: [],
    };
    deleteParams.transitionIds.forEach(function (transitionId) {
        var transitionCommands = selectors_1.dmCommandIdsForTransition(state, { id: transitionId });
        deleteParams.commandIds = deleteParams.commandIds.concat(transitionCommands);
    });
    return deleteParams;
}
exports.dmGetTransitionDeleteParams = dmGetTransitionDeleteParams;
function dmDeleteTransitionWithParams(params) {
    return {
        type: exports.DELETE_TRANSITION,
        payload: params,
    };
}
exports.dmDeleteTransitionWithParams = dmDeleteTransitionWithParams;
function dmDeleteTransition(id) {
    return function (dispatch, getState) {
        var deleteParams = dmGetTransitionDeleteParams(bsDmState_1.dmFilterDmState(getState()), id);
        var mainAction = dmDeleteTransitionWithParams(deleteParams);
        dispatch(mainAction);
        return mainAction;
    };
}
exports.dmDeleteTransition = dmDeleteTransition;


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var selectorSign_1 = __webpack_require__(49);
var selectorDeviceWebPage_1 = __webpack_require__(54);
var lodash_1 = __webpack_require__(0);
function dmGetAssetItemById(state, props) {
    var asset = state.assetMap[props.id];
    return asset ? Object.assign({}, asset) : null;
}
exports.dmGetAssetItemById = dmGetAssetItemById;
function dmGetAssetIdByLocator(state, props) {
    var assetMap = state.assetMap;
    var assetId = lodash_1.find(Object.keys(assetMap), function (id) { return assetMap[id].locator === props.locator; });
    return lodash_1.isNil(assetId) ? null : assetId;
}
exports.dmGetAssetIdByLocator = dmGetAssetIdByLocator;
function dmGetAssetItemByLocator(state, props) {
    var assetMap = state.assetMap;
    var assetId = lodash_1.find(Object.keys(assetMap), function (id) { return assetMap[id].locator === props.locator; });
    return lodash_1.isNil(assetId) ? null : assetMap[assetId];
}
exports.dmGetAssetItemByLocator = dmGetAssetItemByLocator;
function dmGetAssetItemIdsForSign(state) {
    return Object.keys(state.assetMap);
}
exports.dmGetAssetItemIdsForSign = dmGetAssetItemIdsForSign;
function dmHasLocalAssetItems(state) {
    var assetId = lodash_1.find(Object.keys(state.assetMap), function (id) { return state.assetMap[id].location === bscore_1.AssetLocation.Local; });
    return !lodash_1.isNil(assetId);
}
exports.dmHasLocalAssetItems = dmHasLocalAssetItems;
var MediaContentTypes = new Set([bscore_1.MediaType.Video, bscore_1.MediaType.Image, bscore_1.MediaType.Audio]);
function dmGetMediaContentAssetItemList(state) {
    return Object.keys(state.assetMap).reduce(function (acc, assetId) {
        var assetItem = state.assetMap[assetId];
        if (assetItem.assetType === bscore_1.AssetType.Content && MediaContentTypes.has(assetItem.mediaType)) {
            acc.push(assetItem);
        }
        return acc;
    }, []);
}
exports.dmGetMediaContentAssetItemList = dmGetMediaContentAssetItemList;
function dmGetAssetItemListForFileName(state, props) {
    return Object.keys(state.assetMap).reduce(function (acc, assetId) {
        var assetItem = state.assetMap[assetId];
        if (assetItem.name.toUpperCase() === props.name.toUpperCase()) {
            acc.push(assetItem);
        }
        return acc;
    }, []);
}
exports.dmGetAssetItemListForFileName = dmGetAssetItemListForFileName;
function dmGetBsnAssetLocatorList(state) {
    return Object.keys(state.assetMap).reduce(function (acc, assetId) {
        var assetItem = state.assetMap[assetId];
        if (assetItem.location === bscore_1.AssetLocation.Bsn) {
            acc.push(bscore_1.bscAssetLocatorFromAssetItem(assetItem));
        }
        return acc;
    }, []);
}
exports.dmGetBsnAssetLocatorList = dmGetBsnAssetLocatorList;
function dmGetLocalAssetLocatorList(state) {
    return Object.keys(state.assetMap).reduce(function (acc, assetId) {
        var assetItem = state.assetMap[assetId];
        if (assetItem.location === bscore_1.AssetLocation.Local) {
            acc.push(bscore_1.bscAssetLocatorFromAssetItem(assetItem));
        }
        return acc;
    }, []);
}
exports.dmGetLocalAssetLocatorList = dmGetLocalAssetLocatorList;
function dmGetBlobAssetItemList(state) {
    return Object.keys(state.assetMap).reduce(function (acc, assetId) {
        var assetItem = state.assetMap[assetId];
        if (assetItem.location === bscore_1.AssetLocation.Blob) {
            acc.push(assetItem);
        }
        return acc;
    }, []);
}
exports.dmGetBlobAssetItemList = dmGetBlobAssetItemList;
function dmGetBsnPresentationAssetItemSpecification(state) {
    var assetItemSpec = {};
    var hasLocalAsset = false;
    Object.keys(state.assetMap).some(function (id) {
        var assetItem = state.assetMap[id];
        if (assetItem.location !== bscore_1.AssetLocation.Bsn) {
            hasLocalAsset = true;
            return true;
        }
        var arrayName = null;
        switch (assetItem.assetType) {
            case bscore_1.AssetType.Content:
                arrayName = 'mediaFiles';
                break;
            case bscore_1.AssetType.HtmlSite:
                arrayName = 'webPages';
                break;
            case bscore_1.AssetType.BSNDataFeed:
                arrayName = 'liveTextFeeds';
                break;
            case bscore_1.AssetType.BSNMediaFeed:
                arrayName = 'liveMediaFeeds';
                break;
            case bscore_1.AssetType.BSNDynamicPlaylist:
                arrayName = 'dynamicPlaylists';
                break;
            case bscore_1.AssetType.BSNTaggedPlaylist:
                arrayName = 'taggedPlaylists';
                break;
            case bscore_1.AssetType.BrightScript:
                arrayName = 'autorunPlugins';
                break;
        }
        if (!lodash_1.isNil(arrayName)) {
            if (!assetItemSpec[arrayName] || !Array.isArray(assetItemSpec[arrayName])) {
                assetItemSpec[arrayName] = [];
            }
            assetItemSpec[arrayName].push(assetItem);
        }
        return false;
    });
    if (!hasLocalAsset) {
        assetItemSpec.useStandardDeviceWebPage = false;
        var presentationWebPageMode = selectorSign_1.dmGetSignPresentationWebPageDisplayMode(state);
        var deviceWebPage = selectorDeviceWebPage_1.dmGetDeviceWebPageForPort(state, { port: 0 });
        if (presentationWebPageMode === bscore_1.DeviceWebPageDisplay.Custom && !lodash_1.isNil(deviceWebPage)) {
            var assetItem = state.assetMap[deviceWebPage.indexAssetId];
            if (!lodash_1.isNil(assetItem)) {
                assetItemSpec.deviceWebPage = assetItem;
            }
        }
        else {
            assetItemSpec.useStandardDeviceWebPage = presentationWebPageMode === bscore_1.DeviceWebPageDisplay.Standard;
        }
        return assetItemSpec;
    }
    return null;
}
exports.dmGetBsnPresentationAssetItemSpecification = dmGetBsnPresentationAssetItemSpecification;


/***/ }),
/* 24 */
/***/ (function(module, exports) {

module.exports = __webpack_require__(57);

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var lodash_1 = __webpack_require__(0);
function dmGetParameterizedNumberFromNumber(value) {
    return { type: bscore_1.NumberParameterType.Number, value: value };
}
exports.dmGetParameterizedNumberFromNumber = dmGetParameterizedNumberFromNumber;
function dmResolveDmParameterizedNumber(arg) {
    if (arg !== undefined) {
        if (typeof arg === 'number') {
            return dmGetParameterizedNumberFromNumber(arg);
        }
        else if (dmIsValidParameterizedNumber(arg)) {
            return arg;
        }
    }
    return dmGetParameterizedNumberFromNumber(0);
}
exports.dmResolveDmParameterizedNumber = dmResolveDmParameterizedNumber;
function dmGetParameterizedNumberFromUserVariable(uvId) {
    return { type: bscore_1.NumberParameterType.UserVariable, value: uvId };
}
exports.dmGetParameterizedNumberFromUserVariable = dmGetParameterizedNumberFromUserVariable;
function dmGetParameterizedNumberFromUserVariableName(uvName) {
    return { type: bscore_1.NumberParameterType.UserVariableName, value: uvName };
}
exports.dmGetParameterizedNumberFromUserVariableName = dmGetParameterizedNumberFromUserVariableName;
function dmIsValidParameterizedNumber(pn) {
    return !lodash_1.isNil(pn)
        && typeof pn === 'object'
        && pn.hasOwnProperty('type')
        && pn.hasOwnProperty('value')
        && ((pn.type === bscore_1.NumberParameterType.Number && typeof pn.value === 'number')
            || ((pn.type === bscore_1.NumberParameterType.UserVariable || pn.type === bscore_1.NumberParameterType.UserVariableName)
                && typeof pn.value === 'string'));
}
exports.dmIsValidParameterizedNumber = dmIsValidParameterizedNumber;
function dmIsParameterizedNumberUserVariableResolved(pn) {
    if (pn.type === bscore_1.NumberParameterType.UserVariableName) {
        return { ok: false, undefinedUserVariableNames: [pn.value] };
    }
    return { ok: true };
}
exports.dmIsParameterizedNumberUserVariableResolved = dmIsParameterizedNumberUserVariableResolved;
function dmGetNumberFromParameterizedNumber(pn) {
    return pn.type === bscore_1.NumberParameterType.Number ? pn.value : null;
}
exports.dmGetNumberFromParameterizedNumber = dmGetNumberFromParameterizedNumber;
function dmIsSimpleParameterizedNumber(pn) {
    return pn.type === bscore_1.NumberParameterType.Number;
}
exports.dmIsSimpleParameterizedNumber = dmIsSimpleParameterizedNumber;
function dmIsEqualParameterizedNumber(pn1, pn2) {
    return pn1.type === pn2.type && pn1.value === pn2.value;
}
exports.dmIsEqualParameterizedNumber = dmIsEqualParameterizedNumber;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(3);
var bscore_1 = __webpack_require__(1);
var bsDmParameterizedStrings_1 = __webpack_require__(14);
var bsDmState_1 = __webpack_require__(5);
var actionBase_1 = __webpack_require__(8);
var actionAssetHelper_1 = __webpack_require__(11);
var actionAssetMap_1 = __webpack_require__(9);
var lodash_1 = __webpack_require__(0);
var lodash_2 = __webpack_require__(0);
exports.ADD_HTML_SITE = 'DM_ADD_HTML_SITE';
exports.UPDATE_HTML_SITE = 'DM_UPDATE_HTML_SITE';
exports.DELETE_HTML_SITE = 'DM_DELETE_HTML_SITE';
function dmAddHostedHtmlSite(name, indexAssetItem, queryString, enableNode) {
    return function (dispatch, getState) {
        if (!indexAssetItem) {
            indexAssetItem = bscore_1.bscGetNullAssetItem(bscore_1.AssetType.HtmlSite);
        }
        var mainAction = {
            type: exports.ADD_HTML_SITE,
            payload: {
                id: utils_1.newBsDmId(),
                type: bscore_1.HtmlSiteType.Hosted,
                name: name,
                queryString: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(queryString),
                enableNode: !lodash_2.isNil(enableNode) ? enableNode : false,
            },
        };
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, indexAssetItem, mainAction);
        var assetAction = actionAssetMap_1.dmPutAssetItem(assetItem);
        batchedActions.push(assetAction);
        mainAction.payload.indexAssetId = assetItem.id;
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmAddHostedHtmlSite = dmAddHostedHtmlSite;
function dmAddHostedHtmlSiteWithoutAssetProcessing(name, indexAssetId, queryString, enableNode) {
    return {
        type: exports.ADD_HTML_SITE,
        payload: {
            id: utils_1.newBsDmId(),
            type: bscore_1.HtmlSiteType.Hosted,
            name: name,
            indexAssetId: indexAssetId,
            queryString: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(queryString),
            enableNode: !lodash_2.isNil(enableNode) ? enableNode : false,
        },
    };
}
exports.dmAddHostedHtmlSiteWithoutAssetProcessing = dmAddHostedHtmlSiteWithoutAssetProcessing;
function dmAddRemoteHtmlSite(name, url, queryString) {
    return {
        type: exports.ADD_HTML_SITE,
        payload: {
            id: utils_1.newBsDmId(),
            type: bscore_1.HtmlSiteType.Remote,
            name: name,
            url: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(url),
            queryString: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(queryString),
        },
    };
}
exports.dmAddRemoteHtmlSite = dmAddRemoteHtmlSite;
function dmUpdateHtmlSite(params) {
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.UPDATE_HTML_SITE,
            payload: lodash_1.pick(params, ['id', 'type', 'name']),
        };
        var batchedActions = [];
        if (params.hasOwnProperty('queryString')) {
            mainAction.payload.queryString = bsDmParameterizedStrings_1.dmResolveDmParameterizedString(params.queryString);
        }
        var siteType = params.type ? params.type : null;
        if (!siteType) {
            if (params.hasOwnProperty('indexAssetItem')) {
                siteType = bscore_1.HtmlSiteType.Hosted;
            }
            else if (params.hasOwnProperty('url')) {
                siteType = bscore_1.HtmlSiteType.Remote;
            }
        }
        if (siteType === bscore_1.HtmlSiteType.Hosted && params.hasOwnProperty('indexAssetItem')) {
            var assetItem = params.indexAssetItem;
            if (assetItem === null) {
                assetItem = bscore_1.bscGetNullAssetItem(bscore_1.AssetType.HtmlSite);
            }
            if (assetItem) {
                var dmState = bsDmState_1.dmFilterDmState(getState());
                var currentHtmlSite = dmState.htmlSites[params.id];
                if (currentHtmlSite.type === bscore_1.HtmlSiteType.Hosted && currentHtmlSite.indexAssetId) {
                    batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(currentHtmlSite.indexAssetId));
                }
                assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, assetItem, mainAction);
                var assetAction = actionAssetMap_1.dmPutAssetItem(assetItem);
                batchedActions.push(assetAction);
                mainAction.payload.indexAssetId = assetItem.id;
            }
        }
        else if (siteType === bscore_1.HtmlSiteType.Remote && params.hasOwnProperty('url')) {
            var dmState = bsDmState_1.dmFilterDmState(getState());
            var currentHtmlSite = dmState.htmlSites[params.id];
            if (currentHtmlSite.type === bscore_1.HtmlSiteType.Hosted && currentHtmlSite.indexAssetId) {
                batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(currentHtmlSite.indexAssetId));
            }
            mainAction.payload.url =
                bsDmParameterizedStrings_1.dmResolveDmParameterizedString(params.url);
        }
        if (siteType === bscore_1.HtmlSiteType.Hosted && params.hasOwnProperty('enableNode')) {
            mainAction.payload.enableNode = params.enableNode;
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmUpdateHtmlSite = dmUpdateHtmlSite;
function dmUpdateHtmlSiteWithoutAssetProcessing(params) {
    var localParams = params;
    if (params.hasOwnProperty('queryString')) {
        localParams = Object.assign({}, params, { queryString: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(params.queryString) });
    }
    if (params.hasOwnProperty('url')) {
        localParams =
            Object.assign({}, localParams, { url: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(params.url) });
    }
    if (params.hasOwnProperty('enableNode')) {
        localParams =
            Object.assign({}, localParams, { enableNode: params.enableNode });
    }
    return {
        type: exports.UPDATE_HTML_SITE,
        payload: localParams,
    };
}
exports.dmUpdateHtmlSiteWithoutAssetProcessing = dmUpdateHtmlSiteWithoutAssetProcessing;
function dmDeleteHtmlSite(id) {
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.DELETE_HTML_SITE,
            payload: { id: id },
        };
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var batchedActions = [];
        var htmlSite = dmState.htmlSites[id];
        if (htmlSite && htmlSite.type === bscore_1.HtmlSiteType.Hosted) {
            batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(htmlSite.indexAssetId));
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmDeleteHtmlSite = dmDeleteHtmlSite;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(3);
var lodash_1 = __webpack_require__(0);
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmState_1 = __webpack_require__(5);
var bsDmLiveText_1 = __webpack_require__(28);
var bsDmContentItems_1 = __webpack_require__(13);
var bsDmAssetItems_1 = __webpack_require__(33);
var bsDmDefaults_1 = __webpack_require__(16);
var bsDmError_1 = __webpack_require__(4);
var actionBase_1 = __webpack_require__(8);
var actionAssetHelper_1 = __webpack_require__(11);
var actionAssetMap_1 = __webpack_require__(9);
var actionDataFeed_1 = __webpack_require__(20);
var selectors_1 = __webpack_require__(6);
exports.ADD_LIVE_TEXT_CANVAS = 'DM_ADD_LIVE_TEXT_CANVAS';
exports.UPDATE_LIVE_TEXT_CANVAS = 'DM_UPDATE_LIVE_TEXT_CANVAS';
exports.DELETE_LIVE_TEXT_CANVAS = 'DM_DELETE_LIVE_TEXT_CANVAS';
exports.ADD_LIVE_TEXT_ITEM = 'DM_ADD_LIVE_TEXT_ITEM';
exports.UPDATE_LIVE_TEXT_ITEM = 'DM_UPDATE_LIVE_TEXT_ITEM';
exports.DELETE_LIVE_TEXT_ITEM = 'DM_DELETE_LIVE_TEXT_ITEM';
exports.ADD_LIVE_TEXT_DATA_FEED_GROUP = 'DM_ADD_LIVE_TEXT_DATA_FEED_GROUP';
exports.UPDATE_LIVE_TEXT_DATA_FEED_GROUP = 'DM_UPDATE_LIVE_TEXT_DATA_FEED_GROUP';
exports.ADD_LIVE_TEXT_DATA_FEED = 'DM_ADD_LIVE_TEXT_DATA_FEED';
exports.MOVE_LIVE_TEXT_DATA_FEED = 'DM_MOVE_LIVE_TEXT_DATA_FEED';
exports.DELETE_LIVE_TEXT_DATA_FEED = 'DM_DELETE_LIVE_TEXT_DATA_FEED';
function dmAddLiveTextCanvas(backgroundImage, backgroundColor, backgroundWidth, backgroundHeight) {
    if (backgroundWidth === void 0) { backgroundWidth = 0; }
    if (backgroundHeight === void 0) { backgroundHeight = 0; }
    return function (dispatch, getState) {
        var actionListParams = dmGetAddLiveTextCanvasActionList(bsDmState_1.dmFilterDmState(getState()), backgroundImage, backgroundColor, backgroundWidth, backgroundHeight);
        dispatch(actionBase_1.dmBatchActions(actionListParams.actions));
        return actionListParams.mainAction;
    };
}
exports.dmAddLiveTextCanvas = dmAddLiveTextCanvas;
function dmGetAddLiveTextCanvasActionList(dmState, backgroundImage, backgroundColor, backgroundWidth, backgroundHeight) {
    if (backgroundWidth === void 0) { backgroundWidth = 0; }
    if (backgroundHeight === void 0) { backgroundHeight = 0; }
    var mainAction = {
        type: exports.ADD_LIVE_TEXT_CANVAS,
        payload: {
            id: utils_1.newBsDmId(),
            backgroundColor: lodash_1.isNil(backgroundColor) ? bscore_1.BsBlack : backgroundColor,
            backgroundImageId: bscore_1.BsAssetIdNone,
            backgroundWidth: backgroundWidth,
            backgroundHeight: backgroundHeight,
        },
    };
    var actions = [];
    if (!lodash_1.isNil(backgroundImage)) {
        if (backgroundImage.assetType !== bscore_1.AssetType.Content
            || backgroundImage.mediaType !== bscore_1.MediaType.Image) {
            throw (new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'AddLiveTextCanvas - background asset must be an image'));
        }
        var assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, backgroundImage, mainAction);
        mainAction.payload.backgroundImageId = assetItem.id;
        actions.push(actionAssetMap_1.dmPutAssetItem(assetItem));
    }
    actions.push(mainAction);
    return { actions: actions, mainAction: mainAction };
}
exports.dmGetAddLiveTextCanvasActionList = dmGetAddLiveTextCanvasActionList;
function dmUpdateLiveTextCanvas(params) {
    return function (dispatch, getState) {
        var payloadParams = lodash_1.pick(params, ['id', 'backgroundColor', 'backgroundWidth', 'backgroundHeight']);
        var mainAction = {
            type: exports.UPDATE_LIVE_TEXT_CANVAS,
            payload: payloadParams,
        };
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var canvas = selectors_1.dmGetLiveTextCanvasStateById(dmState, { id: params.id });
        if (lodash_1.isNil(canvas)) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateLiveTextCanvas - invalid canvas ID');
        }
        if (!lodash_1.isUndefined(params.backgroundImage)) {
            if (utils_1.isValidBsDmId(canvas.backgroundImageId)) {
                batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(canvas.backgroundImageId));
            }
            if (!lodash_1.isNull(params.backgroundImage)) {
                if (params.backgroundImage.assetType !== bscore_1.AssetType.Content
                    || params.backgroundImage.mediaType !== bscore_1.MediaType.Image) {
                    throw (new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'AddLiveTextCanvas - background asset must be an image'));
                }
                var assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, params.backgroundImage, mainAction);
                mainAction.payload.backgroundImageId = assetItem.id;
                batchedActions.push(actionAssetMap_1.dmPutAssetItem(assetItem));
            }
            else {
                mainAction.payload.backgroundImageId = bscore_1.BsAssetIdNone;
            }
            batchedActions.push(mainAction);
            dispatch(actionBase_1.dmBatchActions(batchedActions));
        }
        return mainAction;
    };
}
exports.dmUpdateLiveTextCanvas = dmUpdateLiveTextCanvas;
function dmGetLiveTextCanvasDeleteParams(state, id) {
    var deleteParams = {
        liveTextCanvasIds: (Array.isArray(id) ? id : [id]).filter(utils_1.isValidBsDmId),
        liveTextItemIds: [],
        liveTextGroupIds: [],
        dataFeedIds: [],
        dataFeedSourceIds: [],
        assetIds: [],
    };
    deleteParams.liveTextCanvasIds.forEach(function (canvasId) {
        var _a, _b, _c, _d, _e;
        var itemIds = selectors_1.dmGetAllLiveTextItemIdsForCanvas(state, { id: canvasId });
        if (!lodash_1.isNil(itemIds)) {
            var itemDeleteParams = dmGetLiveTextItemDeleteParams(state, itemIds);
            (_a = deleteParams.liveTextItemIds).push.apply(_a, itemDeleteParams.liveTextItemIds);
            (_b = deleteParams.liveTextGroupIds).push.apply(_b, itemDeleteParams.liveTextGroupIds);
            (_c = deleteParams.dataFeedIds).push.apply(_c, itemDeleteParams.dataFeedIds);
            (_d = deleteParams.dataFeedSourceIds).push.apply(_d, itemDeleteParams.dataFeedSourceIds);
            (_e = deleteParams.assetIds).push.apply(_e, itemDeleteParams.assetIds);
        }
    });
    return deleteParams;
}
exports.dmGetLiveTextCanvasDeleteParams = dmGetLiveTextCanvasDeleteParams;
function dmDeleteLiveTextCanvasWithParams(params) {
    return {
        type: exports.DELETE_LIVE_TEXT_CANVAS,
        payload: params,
    };
}
exports.dmDeleteLiveTextCanvasWithParams = dmDeleteLiveTextCanvasWithParams;
function dmDeleteLiveTextCanvas(id) {
    return function (dispatch, getState) {
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var deleteParams = dmGetLiveTextCanvasDeleteParams(dmState, id);
        var mainAction = dmDeleteLiveTextCanvasWithParams(deleteParams);
        dispatch(mainAction);
        return mainAction;
    };
}
exports.dmDeleteLiveTextCanvas = dmDeleteLiveTextCanvas;
function dmAddLiveTextItem(canvasId, data, props) {
    if (props === void 0) { props = {}; }
    return function (dispatch, getState) {
        var position = lodash_1.isNil(props.position) ? __assign({}, bsDmLiveText_1.DefaultLiveTextPosition) : props.position;
        var textProps = bsDmLiveText_1.dmIsLiveTextDataTextContent(data) ?
            (lodash_1.isNil(props.textProperties) ? __assign({}, bsDmDefaults_1.dmGetDefaultLiveTextItemTextProperties()) : props.textProperties) :
            null;
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        if (!lodash_1.isNil(props.layerIndex) && props.layerIndex >= 0) {
            var activeLayerIndexArray = selectors_1.dmGetLiveTextLayerActiveIndexArrayForCanvas(dmState, { id: canvasId });
            if (!lodash_1.isNil(activeLayerIndexArray)) {
                props.layerIndex = activeLayerIndexArray.indexOf(props.layerIndex);
            }
        }
        var mainAction;
        if (bsDmLiveText_1.dmIsLiveTextDataSimpleRss(data)
            || (bsDmLiveText_1.dmIsLiveTextDataMediaRss(data) && data.element !== bsDmInterfaces_1.RssTextElementName.Custom)
            || (bsDmLiveText_1.dmIsLiveTextDataMediaRssMedia(data))) {
            var actionListParams = dmGetAddLiveTextRssGroupActionList(dmState, canvasId, data, props);
            batchedActions.push.apply(batchedActions, actionListParams.actions);
            mainAction = actionListParams.mainAction;
        }
        else {
            if (!lodash_1.isNil(textProps) && bscore_1.bscIsAssetItem(props.fontAssetItem) && bsDmAssetItems_1.dmIsFontAssetItem(props.fontAssetItem)) {
                var assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, props.fontAssetItem);
                batchedActions.push(actionAssetMap_1.dmPutAssetItem(assetItem));
                textProps.widget.font = assetItem.id;
            }
            mainAction = dmPutLiveTextItem(canvasId, position, data, textProps, props.layerIndex);
            if (bsDmLiveText_1.dmIsLiveTextDataMediaCounter(mainAction.payload.data)) {
                if (!lodash_1.isNil(props.contentAssetItem)) {
                    if (bscore_1.bscIsMediaTypePlayable(props.contentAssetItem.mediaType)) {
                        var assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, props.contentAssetItem, mainAction);
                        batchedActions.push(actionAssetMap_1.dmPutAssetItem(assetItem));
                        mainAction.payload.data.assetId = assetItem.id;
                    }
                    else {
                        throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'AddLiveTextItem - displayable content asset must be specified for a mediaCounter LiveTextItem', { action: mainAction });
                    }
                }
                else if (utils_1.isValidBsDmId(mainAction.payload.data.assetId)) {
                    if (lodash_1.isNil(selectors_1.dmGetAssetItemById(dmState, { id: mainAction.payload.data.assetId }))) {
                        throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'AddLiveTextItem - invalid assetId specified for a mediaCounter LiveTextItem', { action: mainAction });
                    }
                }
                else {
                    mainAction.payload.data.assetId = bsDmInterfaces_1.BsDmIdNone;
                }
            }
            else if (bsDmLiveText_1.dmIsLiveTextDataImageContent(mainAction.payload.data)) {
                if (!lodash_1.isNil(props.contentAssetItem)) {
                    if (props.contentAssetItem.assetType === bscore_1.AssetType.Content
                        && props.contentAssetItem.mediaType === bscore_1.MediaType.Image) {
                        var assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, props.contentAssetItem, mainAction);
                        batchedActions.push(actionAssetMap_1.dmPutAssetItem(assetItem));
                        mainAction.payload.data.assetId = assetItem.id;
                    }
                    else {
                        throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'AddLiveTextItem - image asset must be specified for an image based LiveTextItem', { action: mainAction });
                    }
                }
                else if (utils_1.isValidBsDmId(mainAction.payload.data.assetId)) {
                    var assetItem = selectors_1.dmGetAssetItemById(dmState, { id: mainAction.payload.data.assetId });
                    if (lodash_1.isNil(assetItem)
                        || assetItem.assetType !== bscore_1.AssetType.Content
                        || assetItem.mediaType !== bscore_1.MediaType.Image) {
                        throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'AddLiveTextItem - invalid assetId specified for an image LiveTextItem', { action: mainAction });
                    }
                }
                else {
                    mainAction.payload.data.assetId = bsDmInterfaces_1.BsDmIdNone;
                }
            }
            else if (bsDmLiveText_1.dmIsLiveTextDataFromDataFeed(mainAction.payload.data)) {
                if (!lodash_1.isNil(props.dataFeedSpec)) {
                    var actionListParams = actionDataFeed_1.dmGetAddDataFeedActionList(dmState, null, props.dataFeedSpec);
                    batchedActions.push.apply(batchedActions, actionListParams.actions);
                    mainAction.payload.data.dataFeedId = actionListParams.mainAction.payload.id;
                }
                else if (utils_1.isValidBsDmId(mainAction.payload.data.dataFeedId)) {
                    if (lodash_1.isNil(selectors_1.dmGetDataFeedStateById(dmState, { id: mainAction.payload.data.dataFeedId }))) {
                        throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'AddLiveTextItem - invalid dataFeedId specified for a dataFeed LiveTextItem', { action: mainAction });
                    }
                }
                else {
                    mainAction.payload.data.dataFeedId = bsDmInterfaces_1.BsDmIdNone;
                }
            }
            else if (bsDmLiveText_1.dmIsLiveTextDataMediaRss(data) && data.element === bsDmInterfaces_1.RssTextElementName.Custom) {
                var dataFeedSequence = selectors_1.dmGetLiveTextDataFeedGroupByGroupId(dmState, { id: data.groupId });
                if (lodash_1.isNil(dataFeedSequence) || dataFeedSequence.usage !== bscore_1.DataFeedUsageType.Mrss) {
                    throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'AddLiveTextItem - liveText group ID must reference a valid MRSS liveText group ' +
                        'to add an item for a custom data field');
                }
            }
            batchedActions.push(mainAction);
        }
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmAddLiveTextItem = dmAddLiveTextItem;
function dmPutLiveTextItem(canvasId, position, data, textProps, layerIndex) {
    if (layerIndex === void 0) { layerIndex = -1; }
    return {
        type: exports.ADD_LIVE_TEXT_ITEM,
        payload: {
            id: utils_1.newBsDmId(),
            canvasId: canvasId,
            position: lodash_1.cloneDeep(position),
            data: lodash_1.cloneDeep(data),
            textProperties: lodash_1.cloneDeep(textProps),
            layerIndex: layerIndex,
        },
    };
}
exports.dmPutLiveTextItem = dmPutLiveTextItem;
function dmUpdateLiveTextItem(params) {
    return function (dispatch, getState) {
        var dmState = bsDmState_1.dmFilterDmState(getState());
        if (!lodash_1.isNil(params.layerIndex) && params.layerIndex >= 0) {
            var activeLayerIndexArray = selectors_1.dmGetLiveTextLayerActiveIndexArrayForCanvas(dmState, { id: params.canvasId });
            if (!lodash_1.isNil(activeLayerIndexArray)) {
                params.layerIndex = activeLayerIndexArray.indexOf(params.layerIndex);
            }
        }
        var batchedActions = [];
        var updateParams = lodash_1.pick(params, ['id', 'canvasId', 'position', 'data', 'textProperties', 'layerIndex']);
        var existingItem = selectors_1.dmGetLiveTextItemStateById(dmState, { id: params.id });
        if (!lodash_1.isNil(existingItem)) {
            var updatedItemData = lodash_1.isNil(updateParams.data) ?
                bsDmLiveText_1.dmGetLiveTextItemData(existingItem) : updateParams.data;
            var fontAssetItem = null;
            var existingCustomFontId = null;
            var assetIdsToRemove = [];
            if (bsDmLiveText_1.dmIsLiveTextDataTextContent(updatedItemData)) {
                if (!lodash_1.isNil(params.fontAssetItem)) {
                    fontAssetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, params.fontAssetItem);
                }
                if (bsDmLiveText_1.dmIsLiveTextDataTextContent(existingItem)) {
                    if (!lodash_1.isUndefined(params.fontAssetItem)) {
                        existingCustomFontId = bsDmContentItems_1.dmGetWidgetCustomFontAssetId(existingItem.widget);
                        var widgetProps = {};
                        if (lodash_1.isNil(updateParams.textProperties)) {
                            updateParams.textProperties = {};
                        }
                        else if (!lodash_1.isNil(updateParams.textProperties.widget)) {
                            widgetProps = __assign({}, updateParams.textProperties.widget);
                        }
                        var font = lodash_1.isNull(fontAssetItem) ? bsDmInterfaces_1.DmDefaultFontName : fontAssetItem.id;
                        updateParams.textProperties.widget = __assign({}, existingItem.widget, widgetProps, { font: font });
                    }
                }
                else {
                    var defaultTextProps = bsDmDefaults_1.dmGetDefaultLiveTextItemTextProperties();
                    if (lodash_1.isNil(updateParams.textProperties)) {
                        updateParams.textProperties = __assign({}, defaultTextProps);
                    }
                    else {
                        updateParams.textProperties = __assign({}, defaultTextProps, updateParams.textProperties);
                    }
                    if (!lodash_1.isNil(fontAssetItem)) {
                        updateParams.textProperties.widget.font = fontAssetItem.id;
                    }
                }
            }
            else if (bsDmLiveText_1.dmIsLiveTextDataTextContent(existingItem)) {
                existingCustomFontId = bsDmContentItems_1.dmGetWidgetCustomFontAssetId(existingItem.widget);
            }
            if (!lodash_1.isNil(updatedItemData) && updatedItemData.type !== existingItem.type) {
                if (bsDmLiveText_1.dmIsLiveTextDataImageContent(existingItem) || bsDmLiveText_1.dmIsLiveTextDataMediaCounter(existingItem)) {
                    assetIdsToRemove.push(existingItem.assetId);
                }
                else if (bsDmLiveText_1.dmIsLiveTextDataFromDataFeed(existingItem)) {
                    if (!bsDmLiveText_1.dmIsLiveTextDataFromDataFeed(updatedItemData)) {
                        batchedActions.push(actionDataFeed_1.dmDeleteDataFeedWithParams(actionDataFeed_1.dmGetDataFeedDeleteParams(dmState, existingItem.dataFeedId)));
                    }
                }
                else if ((bsDmLiveText_1.dmIsLiveTextDataSimpleRss(existingItem) && !bsDmLiveText_1.dmIsLiveTextDataSimpleRss(updatedItemData))
                    || (bsDmLiveText_1.dmIsLiveTextDataMediaRss(existingItem) && !bsDmLiveText_1.dmIsLiveTextDataMediaRss(updatedItemData))) {
                    batchedActions.push(dmDeleteLiveTextItemsWithParams(dmGetLiveTextItemDeleteParams(dmState, existingItem.id, true)));
                }
            }
            if (!lodash_1.isNil(existingCustomFontId)) {
                assetIdsToRemove.push(existingCustomFontId);
            }
            var mainAction = dmDoUpdateLiveTextItem(updateParams);
            if (bsDmLiveText_1.dmIsLiveTextDataMediaCounter(updatedItemData)) {
                if (!lodash_1.isNil(params.contentAssetItem)) {
                    if (bsDmLiveText_1.dmIsLiveTextDataMediaCounter(existingItem)) {
                        assetIdsToRemove.push(existingItem.assetId);
                    }
                    var assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, params.contentAssetItem, mainAction);
                    batchedActions.push(actionAssetMap_1.dmPutAssetItem(assetItem));
                    updatedItemData.assetId = assetItem.id;
                    mainAction.payload.data = updatedItemData;
                }
                else if (!utils_1.isValidBsDmId(updatedItemData.assetId)) {
                    throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateLiveTextItem - asset must be specified for a mediaCounter LiveTextItem', { action: mainAction });
                }
            }
            else if (bsDmLiveText_1.dmIsLiveTextDataImageContent(updatedItemData)) {
                if (!lodash_1.isNil(params.contentAssetItem)
                    && params.contentAssetItem.assetType === bscore_1.AssetType.Content
                    && params.contentAssetItem.mediaType === bscore_1.MediaType.Image) {
                    if (bsDmLiveText_1.dmIsLiveTextDataImageContent(existingItem)) {
                        assetIdsToRemove.push(existingItem.assetId);
                    }
                    var assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, params.contentAssetItem, mainAction);
                    batchedActions.push(actionAssetMap_1.dmPutAssetItem(assetItem));
                    updatedItemData.assetId = assetItem.id;
                    mainAction.payload.data = updatedItemData;
                }
                else if (!utils_1.isValidBsDmId(updatedItemData.assetId)) {
                    throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateLiveTextItem - image asset must be specified for an image based LiveTextItem', { action: mainAction });
                }
            }
            else if (bsDmLiveText_1.dmIsLiveTextDataFromDataFeed(updatedItemData)) {
                if (!lodash_1.isNil(params.dataFeedSpec)) {
                    var dataFeedActionList = void 0;
                    if (bsDmLiveText_1.dmIsLiveTextDataFromDataFeed(existingItem)) {
                        dataFeedActionList =
                            actionDataFeed_1.dmGetUpdateDataFeedActionList(dmState, { id: existingItem.dataFeedId, feedSpec: params.dataFeedSpec });
                    }
                    else {
                        dataFeedActionList = actionDataFeed_1.dmGetAddDataFeedActionList(dmState, null, params.dataFeedSpec);
                    }
                    if (!lodash_1.isNil(dataFeedActionList) && dataFeedActionList.actions.length > 0) {
                        batchedActions.push.apply(batchedActions, dataFeedActionList.actions);
                        updatedItemData.dataFeedId = dataFeedActionList.mainAction.payload.id;
                    }
                }
                else {
                    if (bsDmLiveText_1.dmIsLiveTextDataFromDataFeed(existingItem)) {
                        updatedItemData.dataFeedId = existingItem.dataFeedId;
                    }
                    else {
                        updatedItemData.dataFeedId = bsDmInterfaces_1.BsDmIdNone;
                    }
                }
                mainAction.payload.data = updatedItemData;
            }
            else if ((bsDmLiveText_1.dmIsLiveTextDataSimpleRss(updatedItemData) && !bsDmLiveText_1.dmIsLiveTextDataSimpleRss(existingItem))
                || (bsDmLiveText_1.dmIsLiveTextDataMediaRss(updatedItemData) && !bsDmLiveText_1.dmIsLiveTextDataMediaRss(existingItem))) {
                if (!lodash_1.isNil(params.dataFeedSpec)) {
                    if (bsDmLiveText_1.dmIsLiveTextDataSimpleRss(updatedItemData)) {
                        params.dataFeedSpec.usage = bscore_1.DataFeedUsageType.Text;
                    }
                    else if (params.dataFeedSpec.usage !== bscore_1.DataFeedUsageType.Mrss) {
                        throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateLiveTextItem - dataFeed usage must be MRSS for a MediaRSS LiveTextItem');
                    }
                }
                var layerIndex = params.layerIndex;
                if (lodash_1.isNil(layerIndex)) {
                    var layerSequence = selectors_1.dmGetLiveTextLayerSequenceForCanvas(dmState, { id: params.canvasId });
                    if (!lodash_1.isNil(layerSequence)) {
                        layerIndex = layerSequence.indexOf(existingItem.id);
                    }
                    else {
                        layerIndex = -1;
                    }
                }
                var textProperties = bsDmLiveText_1.dmGetLiveTextItemTextProperties(existingItem);
                if (lodash_1.isNil(textProperties)) {
                    textProperties = __assign({}, bsDmDefaults_1.dmGetDefaultLiveTextItemTextProperties(), params.textProperties);
                }
                else {
                    textProperties = __assign({}, textProperties, params.textProperties);
                }
                var props = {
                    position: lodash_1.isNil(params.position) ? existingItem.position : params.position,
                    layerIndex: layerIndex,
                    textProperties: textProperties,
                    dataFeedSpec: params.dataFeedSpec,
                    fontAssetItem: fontAssetItem,
                    rssDisplayTime: params.rssDisplayTime,
                    positionOffsetX: params.positionOffsetX,
                    positionOffsetY: params.positionOffsetY,
                };
                var actionListParams = dmGetAddLiveTextRssGroupActionList(dmState, params.canvasId, updatedItemData, props, true);
                batchedActions.push.apply(batchedActions, actionListParams.actions);
                mainAction.payload.data.groupId =
                    actionListParams.mainAction.payload.data.groupId;
            }
            if (assetIdsToRemove.length) {
                batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(assetIdsToRemove));
            }
            if (!lodash_1.isNil(fontAssetItem)) {
                batchedActions.push(actionAssetMap_1.dmPutAssetItem(fontAssetItem));
            }
            batchedActions.push(mainAction);
            dispatch(actionBase_1.dmBatchActions(batchedActions));
            return mainAction;
        }
        else {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateLiveTextItem - LiveTextItem ID does not reference a valid LiveTextItem');
        }
    };
}
exports.dmUpdateLiveTextItem = dmUpdateLiveTextItem;
function dmDoUpdateLiveTextItem(params) {
    return {
        type: exports.UPDATE_LIVE_TEXT_ITEM,
        payload: params,
    };
}
exports.dmDoUpdateLiveTextItem = dmDoUpdateLiveTextItem;
function dmGetLiveTextItemDeleteParams(state, id, retainMainLiveTextItem) {
    var _a, _b;
    if (retainMainLiveTextItem === void 0) { retainMainLiveTextItem = false; }
    var deleteParams = {
        liveTextItemIds: (Array.isArray(id) ? id : [id]).filter(utils_1.isValidBsDmId),
        liveTextGroupIds: [],
        dataFeedIds: [],
        dataFeedSourceIds: [],
        assetIds: [],
    };
    var mainLiveTextItemId = deleteParams.liveTextItemIds[0];
    var groupedItemIdsToDelete = [];
    deleteParams.liveTextItemIds.forEach(function (itemId, index) {
        var _a;
        var item = selectors_1.dmGetLiveTextItemStateById(state, { id: itemId });
        if (!lodash_1.isNil(item)) {
            if (bsDmLiveText_1.dmIsLiveTextDataImageContent(item) || bsDmLiveText_1.dmIsLiveTextDataMediaCounter(item)) {
                if (!lodash_1.isNil(item.assetId)) {
                    deleteParams.assetIds.push(item.assetId);
                }
            }
            else if (bsDmLiveText_1.dmIsLiveTextDataFromDataFeed(item)) {
                if (!lodash_1.isNil(item.dataFeedId)) {
                    deleteParams.dataFeedIds.push(item.dataFeedId);
                }
            }
            else if (bsDmLiveText_1.dmIsLiveTextDataGroupedDataFeedItem(item)
                && (!(bsDmLiveText_1.dmIsLiveTextDataMediaRss(item) && item.element === bsDmInterfaces_1.RssTextElementName.Custom))) {
                groupedItemIdsToDelete.push.apply(groupedItemIdsToDelete, selectors_1.dmGetAllLiveTextItemIdsForGroup(state, { id: item.groupId }));
                if (!lodash_1.isNil(item.groupId) && deleteParams.liveTextGroupIds.indexOf(item.groupId) < 0) {
                    deleteParams.liveTextGroupIds.push(item.groupId);
                }
                var liveTextDataFeedSequence = selectors_1.dmGetLiveTextDataFeedGroupByGroupId(state, { id: item.groupId });
                if (!lodash_1.isNil(liveTextDataFeedSequence) && liveTextDataFeedSequence.dataFeedIds.length) {
                    (_a = deleteParams.dataFeedIds).push.apply(_a, liveTextDataFeedSequence.dataFeedIds);
                }
            }
            if (bsDmLiveText_1.dmIsLiveTextDataTextContent(item) && (!retainMainLiveTextItem || index > 0)) {
                var fontAssetId = bsDmContentItems_1.dmGetWidgetCustomFontAssetId(item.widget);
                if (!lodash_1.isNil(fontAssetId)) {
                    deleteParams.assetIds.push(fontAssetId);
                }
            }
        }
    });
    if (groupedItemIdsToDelete.length) {
        (_a = deleteParams.liveTextItemIds).push.apply(_a, groupedItemIdsToDelete);
        deleteParams.liveTextItemIds = lodash_1.uniq(deleteParams.liveTextItemIds);
    }
    if (deleteParams.dataFeedIds.length > 0) {
        var dataFeedDeleteParams = actionDataFeed_1.dmGetDataFeedDeleteParams(state, deleteParams.dataFeedIds);
        deleteParams.dataFeedSourceIds = dataFeedDeleteParams.dataFeedSourceIds;
        if (dataFeedDeleteParams.assetIds.length > 0) {
            (_b = deleteParams.assetIds).push.apply(_b, dataFeedDeleteParams.assetIds);
        }
    }
    if (retainMainLiveTextItem) {
        deleteParams.liveTextItemIds = lodash_1.without(deleteParams.liveTextItemIds, mainLiveTextItemId);
    }
    return deleteParams;
}
exports.dmGetLiveTextItemDeleteParams = dmGetLiveTextItemDeleteParams;
function dmDeleteLiveTextItemsWithParams(params) {
    return {
        type: exports.DELETE_LIVE_TEXT_ITEM,
        payload: params,
    };
}
exports.dmDeleteLiveTextItemsWithParams = dmDeleteLiveTextItemsWithParams;
function dmDeleteLiveTextItem(id) {
    return function (dispatch, getState) {
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var deleteParams = dmGetLiveTextItemDeleteParams(dmState, id);
        var mainAction = dmDeleteLiveTextItemsWithParams(deleteParams);
        dispatch(mainAction);
        return mainAction;
    };
}
exports.dmDeleteLiveTextItem = dmDeleteLiveTextItem;
function dmGetAddLiveTextRssGroupActionList(dmState, canvasId, data, props, omitMainAction) {
    if (props === void 0) { props = {}; }
    if (omitMainAction === void 0) { omitMainAction = false; }
    var usage = bscore_1.DataFeedUsageType.Text;
    var textItemType = bsDmInterfaces_1.LiveTextItemType.SimpleRss;
    var displayTime = 0;
    if (bsDmLiveText_1.dmIsLiveTextDataMediaRss(data)) {
        usage = bscore_1.DataFeedUsageType.Mrss;
        textItemType = bsDmInterfaces_1.LiveTextItemType.MediaRssText;
    }
    else if (!lodash_1.isNil(props.rssDisplayTime)) {
        displayTime = props.rssDisplayTime;
    }
    var position = lodash_1.isNil(props.position) ? __assign({}, bsDmLiveText_1.DefaultLiveTextPosition) : __assign({}, props.position);
    var layerIndex = lodash_1.isNil(props.layerIndex) ? -1 : props.layerIndex;
    var adjustForNextItem = function () {
        if (props.positionOffsetX) {
            position.x += props.positionOffsetX;
        }
        if (props.positionOffsetY) {
            position.y += props.positionOffsetY;
        }
        if (layerIndex >= 0) {
            layerIndex += 1;
        }
    };
    var textProps = lodash_1.isNil(props.textProperties) ? __assign({}, bsDmDefaults_1.dmGetDefaultLiveTextItemTextProperties()) : props.textProperties;
    var fontAssetItem = null;
    if (bscore_1.bscIsAssetItem(props.fontAssetItem) && bsDmAssetItems_1.dmIsFontAssetItem(props.fontAssetItem)) {
        fontAssetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, props.fontAssetItem);
        textProps.widget.font = fontAssetItem.id;
    }
    var actions = [];
    var dataFeedIds = [];
    if (!lodash_1.isNil(props.dataFeedSpec)) {
        props.dataFeedSpec.usage = usage;
        var actionListParams = actionDataFeed_1.dmGetAddDataFeedActionList(dmState, null, props.dataFeedSpec);
        actions.push.apply(actions, actionListParams.actions);
        dataFeedIds.push(actionListParams.mainAction.payload.id);
    }
    var groupAction = dmAddLiveTextDataFeedGroup(canvasId, usage, displayTime, dataFeedIds);
    actions.push(groupAction);
    var groupId = groupAction.payload.groupId;
    var titleItemData = bsDmLiveText_1.dmCreateLiveTextItemData(textItemType, { element: bsDmInterfaces_1.RssTextElementName.Title, groupId: groupId });
    var mainAction = dmPutLiveTextItem(canvasId, position, titleItemData, textProps, layerIndex);
    if (!omitMainAction) {
        actions.push(mainAction);
        if (!lodash_1.isNil(fontAssetItem)) {
            actions.push(actionAssetMap_1.dmPutAssetItem(fontAssetItem));
        }
    }
    adjustForNextItem();
    var descriptionItemData = bsDmLiveText_1.dmCreateLiveTextItemData(textItemType, { element: bsDmInterfaces_1.RssTextElementName.Description, groupId: groupId });
    actions.push(dmPutLiveTextItem(canvasId, position, descriptionItemData, textProps, layerIndex));
    if (!lodash_1.isNil(fontAssetItem)) {
        actions.push(actionAssetMap_1.dmPutAssetItem(fontAssetItem));
    }
    if (bsDmLiveText_1.dmIsLiveTextDataMediaRss(data)) {
        adjustForNextItem();
        var mediaItemData = bsDmLiveText_1.dmCreateLiveTextItemData(bsDmInterfaces_1.LiveTextItemType.MediaRssMedia, { groupId: groupId });
        actions.push(dmPutLiveTextItem(canvasId, position, mediaItemData, null, layerIndex));
    }
    return { actions: actions, mainAction: mainAction };
}
function dmAddLiveTextDataFeedGroup(canvasId, usage, displayTime, dataFeedIds) {
    return {
        type: exports.ADD_LIVE_TEXT_DATA_FEED_GROUP,
        payload: {
            groupId: utils_1.newBsDmId(),
            canvasId: canvasId,
            usage: usage,
            displayTime: displayTime,
            dataFeedIds: dataFeedIds,
        },
    };
}
exports.dmAddLiveTextDataFeedGroup = dmAddLiveTextDataFeedGroup;
function dmSetEnableForLiveTextGroupedItem(id, enabled) {
    return function (dispatch, getState) {
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var item = selectors_1.dmGetLiveTextItemStateById(dmState, { id: id });
        if (bsDmLiveText_1.dmIsLiveTextDataGroupedDataFeedItem(item)) {
            var data = __assign({}, lodash_1.pick(item, ['type', 'element', 'groupId', 'customFieldName']), { enabled: enabled });
            var params = {
                id: id,
                canvasId: item.canvasId,
                data: data,
            };
            return dispatch(dmDoUpdateLiveTextItem(params));
        }
        else {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'SetEnableForLiveTextGroupedItem - liveTextItem specified is not a grouped item');
        }
    };
}
exports.dmSetEnableForLiveTextGroupedItem = dmSetEnableForLiveTextGroupedItem;
function dmAddDataFeedToLiveTextGroup(groupId, dataFeedSpec, index) {
    if (index === void 0) { index = -1; }
    return function (dispatch, getState) {
        var mainAction = dmAddLiveTextDataFeedIdToGroup(groupId, bsDmInterfaces_1.BsDmIdNone, index);
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var batchedActions = [];
        var actionListParams = actionDataFeed_1.dmGetAddDataFeedActionList(dmState, null, dataFeedSpec);
        batchedActions.push.apply(batchedActions, actionListParams.actions);
        mainAction.payload.dataFeedId = actionListParams.mainAction.payload.id;
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmAddDataFeedToLiveTextGroup = dmAddDataFeedToLiveTextGroup;
function dmUpdateDataFeedLiveTextGroup(params) {
    return function (dispatch, getState) {
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var group = selectors_1.dmGetLiveTextDataFeedGroupByGroupId(dmState, { id: params.groupId });
        if (lodash_1.isNil(group)) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateDataFeedToLiveTextGroup - invalid liveText group ID');
        }
        if (group.usage !== bscore_1.DataFeedUsageType.Text) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateDataFeedToLiveTextGroup - can only set displayTime for Text data feeds');
        }
        var mainAction = {
            type: exports.UPDATE_LIVE_TEXT_DATA_FEED_GROUP,
            payload: params,
        };
        return dispatch(mainAction);
    };
}
exports.dmUpdateDataFeedLiveTextGroup = dmUpdateDataFeedLiveTextGroup;
function dmAddLiveTextDataFeedIdToGroup(groupId, dataFeedId, index) {
    if (index === void 0) { index = -1; }
    return {
        type: exports.ADD_LIVE_TEXT_DATA_FEED,
        payload: {
            groupId: groupId,
            dataFeedId: dataFeedId,
            index: index,
        },
    };
}
exports.dmAddLiveTextDataFeedIdToGroup = dmAddLiveTextDataFeedIdToGroup;
function dmMoveLiveTextDataFeedsInGroup(groupId, indices, targetIndex) {
    if (typeof indices === 'number') {
        indices = [indices];
    }
    return {
        type: exports.MOVE_LIVE_TEXT_DATA_FEED,
        payload: {
            groupId: groupId,
            indices: indices,
            targetIndex: targetIndex,
        },
    };
}
exports.dmMoveLiveTextDataFeedsInGroup = dmMoveLiveTextDataFeedsInGroup;
function dmDeleteDataFeedsFromLiveTextGroup(groupId, dataFeedIds) {
    return function (dispatch, getState) {
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var dataFeedDeleteParams = actionDataFeed_1.dmGetDataFeedDeleteParams(dmState, dataFeedIds);
        return dispatch(dmDeleteLiveTextDataFeedIdFromGroupWithParams(groupId, dataFeedDeleteParams));
    };
}
exports.dmDeleteDataFeedsFromLiveTextGroup = dmDeleteDataFeedsFromLiveTextGroup;
function dmDeleteLiveTextDataFeedIdFromGroupWithParams(groupId, dataFeedDeleteParams) {
    return {
        type: exports.DELETE_LIVE_TEXT_DATA_FEED,
        payload: __assign({ liveTextGroupIds: [groupId] }, dataFeedDeleteParams),
    };
}
exports.dmDeleteLiveTextDataFeedIdFromGroupWithParams = dmDeleteLiveTextDataFeedIdFromGroupWithParams;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmParameterizedNumbers_1 = __webpack_require__(25);
var bsDmParameterizedStrings_1 = __webpack_require__(14);
var bsDmClasses_1 = __webpack_require__(10);
var lodash_1 = __webpack_require__(0);
exports.DefaultLiveTextPosition = bscore_1.bscCreatePercentageRect(0, 0, 50, 10);
Object.freeze(exports.DefaultLiveTextPosition);
function dmCreateLiveTextItemData(type, params) {
    if (params === void 0) { params = {}; }
    switch (type) {
        default:
        case bsDmInterfaces_1.LiveTextItemType.StaticText:
            return {
                type: 'StaticText',
                text: lodash_1.isNil(params.text) ? '' : params.text,
            };
        case bsDmInterfaces_1.LiveTextItemType.SystemVariable:
            return {
                type: 'SystemVariable',
                variable: lodash_1.isNil(params.systemVariable) ? bscore_1.SystemVariableType.SerialNumber : params.systemVariable,
            };
        case bsDmInterfaces_1.LiveTextItemType.MediaCounter:
            return {
                type: 'MediaCounter',
                assetId: lodash_1.isNil(params.assetId) ? bscore_1.BsAssetIdNone : params.assetId,
            };
        case bsDmInterfaces_1.LiveTextItemType.UserVariable: {
            var userVariableIdOrName = lodash_1.isNil(params.userVariableId) ?
                (lodash_1.isNil(params.userVariableName) ? bsDmInterfaces_1.BsDmIdNone : params.userVariableName) :
                params.userVariableId;
            return {
                type: 'UserVariable',
                userVariableIdOrName: userVariableIdOrName,
            };
        }
        case bsDmInterfaces_1.LiveTextItemType.SimpleRss:
            return {
                type: 'SimpleRss',
                element: lodash_1.isNil(params.element) ? bsDmInterfaces_1.RssTextElementName.Title : params.element,
                groupId: lodash_1.isNil(params.groupId) ? bsDmInterfaces_1.BsDmIdNone : params.groupId,
                enabled: true,
            };
        case bsDmInterfaces_1.LiveTextItemType.MediaRssText:
        case bsDmInterfaces_1.LiveTextEntityType.MediaRss:
            var mediaRssData = {
                type: 'MediaRssText',
                element: lodash_1.isNil(params.element) ? bsDmInterfaces_1.RssTextElementName.Title : params.element,
                groupId: lodash_1.isNil(params.groupId) ? bsDmInterfaces_1.BsDmIdNone : params.groupId,
                enabled: true,
            };
            if (mediaRssData.element === bsDmInterfaces_1.RssTextElementName.Custom && !lodash_1.isNil(params.customFieldName)) {
                mediaRssData.customFieldName = params.customFieldName;
            }
            return mediaRssData;
        case bsDmInterfaces_1.LiveTextItemType.MediaRssMedia:
            return {
                type: 'MediaRssMedia',
                groupId: lodash_1.isNil(params.groupId) ? bsDmInterfaces_1.BsDmIdNone : params.groupId,
                enabled: true,
            };
        case bsDmInterfaces_1.LiveTextItemType.Image:
            return {
                type: 'Image',
                assetId: bscore_1.BsAssetIdNone,
            };
        case bsDmInterfaces_1.LiveTextItemType.IndexedDataFeed:
            return {
                type: 'IndexedDataFeed',
                dataFeedId: bsDmInterfaces_1.BsDmIdNone,
                index: lodash_1.isNil(params.index) ?
                    bsDmParameterizedNumbers_1.dmGetParameterizedNumberFromNumber(0) : bsDmParameterizedNumbers_1.dmResolveDmParameterizedNumber(params.index),
            };
        case bsDmInterfaces_1.LiveTextItemType.TitledDataFeed:
        case bsDmInterfaces_1.LiveTextEntityType.DataFeed:
            return {
                type: 'TitledDataFeed',
                dataFeedId: bsDmInterfaces_1.BsDmIdNone,
                title: lodash_1.isNil(params.title) ?
                    bsDmParameterizedStrings_1.dmGetEmptyParameterizedString() : bsDmParameterizedStrings_1.dmResolveDmParameterizedString(params.title),
            };
    }
}
exports.dmCreateLiveTextItemData = dmCreateLiveTextItemData;
function dmGetLiveTextItemData(item) {
    switch (item.type) {
        case bsDmInterfaces_1.LiveTextItemType.StaticText:
            return lodash_1.pick(item, ['type', 'text']);
        case bsDmInterfaces_1.LiveTextItemType.SystemVariable:
            return lodash_1.pick(item, ['type', 'variable']);
        case bsDmInterfaces_1.LiveTextItemType.MediaCounter:
            return lodash_1.pick(item, ['type', 'assetId']);
        case bsDmInterfaces_1.LiveTextItemType.UserVariable:
            return lodash_1.pick(item, ['type', 'userVariableIdOrName']);
        case bsDmInterfaces_1.LiveTextItemType.SimpleRss:
            return lodash_1.pick(item, ['type', 'element', 'groupId', 'enabled']);
        case bsDmInterfaces_1.LiveTextItemType.MediaRssText:
            return lodash_1.pick(item, ['type', 'element', 'customFieldName', 'groupId', 'enabled']);
        case bsDmInterfaces_1.LiveTextItemType.MediaRssMedia:
            return lodash_1.pick(item, ['type', 'groupId', 'enabled']);
        case bsDmInterfaces_1.LiveTextItemType.Image:
            return lodash_1.pick(item, ['type', 'assetId']);
        case bsDmInterfaces_1.LiveTextItemType.IndexedDataFeed:
            return lodash_1.pick(item, ['type', 'dataFeedId', 'index']);
        case bsDmInterfaces_1.LiveTextItemType.TitledDataFeed:
            return lodash_1.pick(item, ['type', 'dataFeedId', 'title']);
    }
    return undefined;
}
exports.dmGetLiveTextItemData = dmGetLiveTextItemData;
function dmGetLiveTextItemTextProperties(item) {
    if (dmIsLiveTextDataTextContent(item)) {
        return lodash_1.pick(item, ['textWidget', 'widget', 'useBackgroundColor']);
    }
    return null;
}
exports.dmGetLiveTextItemTextProperties = dmGetLiveTextItemTextProperties;
var LiveTextItemTextTypes = new Set([
    bsDmInterfaces_1.LiveTextItemType.StaticText, bsDmInterfaces_1.LiveTextItemType.SystemVariable, bsDmInterfaces_1.LiveTextItemType.MediaCounter,
    bsDmInterfaces_1.LiveTextItemType.UserVariable, bsDmInterfaces_1.LiveTextItemType.SimpleRss, bsDmInterfaces_1.LiveTextItemType.MediaRssText,
    bsDmInterfaces_1.LiveTextItemType.IndexedDataFeed, bsDmInterfaces_1.LiveTextItemType.TitledDataFeed,
]);
function dmIsLiveTextDataTextContent(data) {
    return !lodash_1.isNil(data) && LiveTextItemTextTypes.has(data.type);
}
exports.dmIsLiveTextDataTextContent = dmIsLiveTextDataTextContent;
function dmIsLiveTextDataMediaCounter(data) {
    return !lodash_1.isNil(data) && data.type === bsDmInterfaces_1.LiveTextItemType.MediaCounter;
}
exports.dmIsLiveTextDataMediaCounter = dmIsLiveTextDataMediaCounter;
function dmIsLiveTextDataUserVariable(data) {
    return !lodash_1.isNil(data) && data.type === bsDmInterfaces_1.LiveTextItemType.UserVariable;
}
exports.dmIsLiveTextDataUserVariable = dmIsLiveTextDataUserVariable;
function dmIsLiveTextDataImageContent(data) {
    return !lodash_1.isNil(data) && data.type === bsDmInterfaces_1.LiveTextItemType.Image;
}
exports.dmIsLiveTextDataImageContent = dmIsLiveTextDataImageContent;
function dmIsLiveTextDataFromDataFeed(data) {
    return !lodash_1.isNil(data)
        && (data.type === bsDmInterfaces_1.LiveTextItemType.IndexedDataFeed || data.type === bsDmInterfaces_1.LiveTextItemType.TitledDataFeed);
}
exports.dmIsLiveTextDataFromDataFeed = dmIsLiveTextDataFromDataFeed;
function dmIsLiveTextDataTitledDataFeed(data) {
    return !lodash_1.isNil(data) && data.type === bsDmInterfaces_1.LiveTextItemType.TitledDataFeed;
}
exports.dmIsLiveTextDataTitledDataFeed = dmIsLiveTextDataTitledDataFeed;
function dmIsLiveTextDataIndexedDataFeed(data) {
    return !lodash_1.isNil(data) && data.type === bsDmInterfaces_1.LiveTextItemType.IndexedDataFeed;
}
exports.dmIsLiveTextDataIndexedDataFeed = dmIsLiveTextDataIndexedDataFeed;
function dmIsLiveTextItemGroupedDataFeedType(type) {
    return !lodash_1.isNil(type) &&
        (type === bsDmInterfaces_1.LiveTextItemType.SimpleRss
            || type === bsDmInterfaces_1.LiveTextItemType.MediaRssText
            || type === bsDmInterfaces_1.LiveTextItemType.MediaRssMedia);
}
exports.dmIsLiveTextItemGroupedDataFeedType = dmIsLiveTextItemGroupedDataFeedType;
function dmIsLiveTextDataGroupedDataFeedItem(data) {
    return !lodash_1.isNil(data) && dmIsLiveTextItemGroupedDataFeedType(data.type);
}
exports.dmIsLiveTextDataGroupedDataFeedItem = dmIsLiveTextDataGroupedDataFeedItem;
function dmIsLiveTextDataSimpleRss(data) {
    return !lodash_1.isNil(data) && data.type === bsDmInterfaces_1.LiveTextItemType.SimpleRss;
}
exports.dmIsLiveTextDataSimpleRss = dmIsLiveTextDataSimpleRss;
function dmIsLiveTextDataMediaRss(data) {
    return !lodash_1.isNil(data) && data.type === bsDmInterfaces_1.LiveTextItemType.MediaRssText;
}
exports.dmIsLiveTextDataMediaRss = dmIsLiveTextDataMediaRss;
function dmIsLiveTextDataMediaRssMedia(data) {
    return !lodash_1.isNil(data) && data.type === bsDmInterfaces_1.LiveTextItemType.MediaRssMedia;
}
exports.dmIsLiveTextDataMediaRssMedia = dmIsLiveTextDataMediaRssMedia;
function dmIsDmcLiveTextItemGroupedDataFeedItem(item) {
    return !lodash_1.isNil(item) && dmIsLiveTextItemGroupedDataFeedType(item.type);
}
exports.dmIsDmcLiveTextItemGroupedDataFeedItem = dmIsDmcLiveTextItemGroupedDataFeedItem;
var DmcLiveTextCanvas = (function () {
    function DmcLiveTextCanvas(canvas, itemMap, groupedTextItemMap, groupedMediaItemMap, dataFeedMap, backgroundAssetItem) {
        this.groupedTextItemMap = {};
        this.groupedMediaItemMap = {};
        this.dataFeedMap = {};
        this.id = canvas.id;
        this.backgroundColor = canvas.backgroundColor;
        this.backgroundImageId = canvas.backgroundImageId;
        this.backgroundWidth = canvas.backgroundWidth;
        this.backgroundHeight = canvas.backgroundHeight;
        this.backgroundAssetItem = backgroundAssetItem;
        this.itemMap = itemMap;
        this.itemList = Object.keys(itemMap).reduce(function (list, itemId) {
            var item = itemMap[itemId];
            if (!lodash_1.isNil(item) && item.layerIndex >= 0) {
                list.push(item);
            }
            return list;
        }, []);
        if (!lodash_1.isNil(groupedTextItemMap)) {
            this.groupedTextItemMap = groupedTextItemMap;
        }
        if (!lodash_1.isNil(groupedMediaItemMap)) {
            this.groupedMediaItemMap = groupedMediaItemMap;
        }
        if (!lodash_1.isNil(dataFeedMap)) {
            this.dataFeedMap = dataFeedMap;
        }
    }
    Object.defineProperty(DmcLiveTextCanvas.prototype, "hasMediaRssItems", {
        get: function () {
            return Object.keys(this.groupedMediaItemMap).length > 0;
        },
        enumerable: true,
        configurable: true
    });
    return DmcLiveTextCanvas;
}());
exports.DmcLiveTextCanvas = DmcLiveTextCanvas;
var DmcLiveTextItem = (function () {
    function DmcLiveTextItem(item, layerIndex) {
        this.id = item.id;
        this.canvasId = item.canvasId;
        this.position = item.position;
        this.layerIndex = layerIndex;
        this.hasTextProperties = false;
    }
    Object.defineProperty(DmcLiveTextItem.prototype, "isGroupedDataFeedItem", {
        get: function () {
            return dmIsLiveTextItemGroupedDataFeedType(this.type);
        },
        enumerable: true,
        configurable: true
    });
    return DmcLiveTextItem;
}());
exports.DmcLiveTextItem = DmcLiveTextItem;
var DmcLiveTextItemWithTextContent = (function (_super) {
    __extends(DmcLiveTextItemWithTextContent, _super);
    function DmcLiveTextItemWithTextContent(item, layerIndex) {
        var _this = _super.call(this, item, layerIndex) || this;
        _this.widget = lodash_1.cloneDeep(item.widget);
        _this.textWidget = lodash_1.cloneDeep(item.textWidget);
        _this.useBackgroundColor = item.useBackgroundColor;
        _this.hasTextProperties = true;
        return _this;
    }
    return DmcLiveTextItemWithTextContent;
}(DmcLiveTextItem));
exports.DmcLiveTextItemWithTextContent = DmcLiveTextItemWithTextContent;
var DmcStaticLiveTextItem = (function (_super) {
    __extends(DmcStaticLiveTextItem, _super);
    function DmcStaticLiveTextItem(item, layerIndex) {
        var _this = _super.call(this, item, layerIndex) || this;
        _this.type = item.type;
        _this.text = item.text;
        return _this;
    }
    return DmcStaticLiveTextItem;
}(DmcLiveTextItemWithTextContent));
exports.DmcStaticLiveTextItem = DmcStaticLiveTextItem;
function dmIsDmcLiveTextItemStaticTextItem(item) {
    return item.type === bsDmInterfaces_1.LiveTextItemType.StaticText;
}
exports.dmIsDmcLiveTextItemStaticTextItem = dmIsDmcLiveTextItemStaticTextItem;
var DmcSystemVariableLiveTextItem = (function (_super) {
    __extends(DmcSystemVariableLiveTextItem, _super);
    function DmcSystemVariableLiveTextItem(item, layerIndex) {
        var _this = _super.call(this, item, layerIndex) || this;
        _this.type = item.type;
        _this.variable = item.variable;
        return _this;
    }
    return DmcSystemVariableLiveTextItem;
}(DmcLiveTextItemWithTextContent));
exports.DmcSystemVariableLiveTextItem = DmcSystemVariableLiveTextItem;
function dmIsDmcLiveTextItemSystemVariableItem(item) {
    return item.type === bsDmInterfaces_1.LiveTextItemType.SystemVariable;
}
exports.dmIsDmcLiveTextItemSystemVariableItem = dmIsDmcLiveTextItemSystemVariableItem;
var DmcMediaCounterLiveTextItem = (function (_super) {
    __extends(DmcMediaCounterLiveTextItem, _super);
    function DmcMediaCounterLiveTextItem(item, layerIndex, assetItem) {
        var _this = _super.call(this, item, layerIndex) || this;
        _this.type = item.type;
        _this.assetId = item.assetId;
        _this.assetItem = assetItem;
        return _this;
    }
    return DmcMediaCounterLiveTextItem;
}(DmcLiveTextItemWithTextContent));
exports.DmcMediaCounterLiveTextItem = DmcMediaCounterLiveTextItem;
function dmIsDmcLiveTextItemMediaCounterItem(item) {
    return item.type === bsDmInterfaces_1.LiveTextItemType.MediaCounter;
}
exports.dmIsDmcLiveTextItemMediaCounterItem = dmIsDmcLiveTextItemMediaCounterItem;
var DmcUserVariableLiveTextItem = (function (_super) {
    __extends(DmcUserVariableLiveTextItem, _super);
    function DmcUserVariableLiveTextItem(item, layerIndex, userVariable) {
        var _this = _super.call(this, item, layerIndex) || this;
        _this.type = item.type;
        _this.userVariableIdOrName = item.userVariableIdOrName;
        _this.userVariable = lodash_1.isNil(userVariable) ? null : new bsDmClasses_1.DmcUserVariable(userVariable);
        return _this;
    }
    return DmcUserVariableLiveTextItem;
}(DmcLiveTextItemWithTextContent));
exports.DmcUserVariableLiveTextItem = DmcUserVariableLiveTextItem;
function dmIsDmcLiveTextItemUserVariableItem(item) {
    return item.type === bsDmInterfaces_1.LiveTextItemType.UserVariable;
}
exports.dmIsDmcLiveTextItemUserVariableItem = dmIsDmcLiveTextItemUserVariableItem;
var DmcImageLiveTextItem = (function (_super) {
    __extends(DmcImageLiveTextItem, _super);
    function DmcImageLiveTextItem(item, layerIndex, assetItem) {
        var _this = _super.call(this, item, layerIndex) || this;
        _this.type = item.type;
        _this.assetId = item.assetId;
        _this.assetItem = assetItem;
        return _this;
    }
    return DmcImageLiveTextItem;
}(DmcLiveTextItem));
exports.DmcImageLiveTextItem = DmcImageLiveTextItem;
function dmIsDmcLiveTextItemImageItem(item) {
    return item.type === bsDmInterfaces_1.LiveTextItemType.Image;
}
exports.dmIsDmcLiveTextItemImageItem = dmIsDmcLiveTextItemImageItem;
var DmcTitledDataFeedTextItem = (function (_super) {
    __extends(DmcTitledDataFeedTextItem, _super);
    function DmcTitledDataFeedTextItem(item, layerIndex, dataFeedObjects) {
        var _this = _super.call(this, item, layerIndex) || this;
        _this.type = item.type;
        _this.title = item.title;
        _this.dataFeedId = item.dataFeedId;
        _this.dataFeed = lodash_1.isNil(dataFeedObjects) ? null : new bsDmClasses_1.DmcDataFeed(dataFeedObjects);
        return _this;
    }
    return DmcTitledDataFeedTextItem;
}(DmcLiveTextItemWithTextContent));
exports.DmcTitledDataFeedTextItem = DmcTitledDataFeedTextItem;
function dmIsDmcLiveTextItemTitledDataFeedItem(item) {
    return item.type === bsDmInterfaces_1.LiveTextItemType.TitledDataFeed;
}
exports.dmIsDmcLiveTextItemTitledDataFeedItem = dmIsDmcLiveTextItemTitledDataFeedItem;
var DmcIndexedDataFeedTextItem = (function (_super) {
    __extends(DmcIndexedDataFeedTextItem, _super);
    function DmcIndexedDataFeedTextItem(item, layerIndex, dataFeedObjects) {
        var _this = _super.call(this, item, layerIndex) || this;
        _this.type = item.type;
        _this.index = item.index;
        _this.dataFeedId = item.dataFeedId;
        _this.dataFeed = lodash_1.isNil(dataFeedObjects) ? null : new bsDmClasses_1.DmcDataFeed(dataFeedObjects);
        return _this;
    }
    return DmcIndexedDataFeedTextItem;
}(DmcLiveTextItemWithTextContent));
exports.DmcIndexedDataFeedTextItem = DmcIndexedDataFeedTextItem;
function dmIsDmcLiveTextItemIndexedDataFeedItem(item) {
    return item.type === bsDmInterfaces_1.LiveTextItemType.IndexedDataFeed;
}
exports.dmIsDmcLiveTextItemIndexedDataFeedItem = dmIsDmcLiveTextItemIndexedDataFeedItem;
var DmcSimpleRssTextItem = (function (_super) {
    __extends(DmcSimpleRssTextItem, _super);
    function DmcSimpleRssTextItem(item, layerIndex, displayTime) {
        var _this = _super.call(this, item, layerIndex) || this;
        _this.dataFeeds = [];
        _this.groupTextItems = [];
        _this.type = item.type;
        _this.element = item.element;
        _this.groupId = item.groupId;
        _this.displayTime = displayTime;
        _this.enabled = lodash_1.isNil(item.enabled) ? true : item.enabled;
        return _this;
    }
    DmcSimpleRssTextItem.prototype.getGroupTextItem = function (element) {
        if (element === this.element) {
            return this;
        }
        var item = lodash_1.find(this.groupTextItems, ['element', element]);
        return lodash_1.isNil(item) ? null : item;
    };
    return DmcSimpleRssTextItem;
}(DmcLiveTextItemWithTextContent));
exports.DmcSimpleRssTextItem = DmcSimpleRssTextItem;
function dmIsDmcLiveTextItemSimpleRssItem(item) {
    return item.type === bsDmInterfaces_1.LiveTextItemType.SimpleRss;
}
exports.dmIsDmcLiveTextItemSimpleRssItem = dmIsDmcLiveTextItemSimpleRssItem;
var DmcMediaRssTextItem = (function (_super) {
    __extends(DmcMediaRssTextItem, _super);
    function DmcMediaRssTextItem(item, layerIndex) {
        var _this = _super.call(this, item, layerIndex) || this;
        _this.customFieldName = null;
        _this.dataFeeds = [];
        _this.groupTextItems = [];
        _this.type = item.type;
        _this.element = item.element;
        _this.groupId = item.groupId;
        _this.enabled = lodash_1.isNil(item.enabled) ? true : item.enabled;
        if (item.element === bsDmInterfaces_1.RssTextElementName.Custom) {
            _this.customFieldName = lodash_1.isNil(item.customFieldName) ? '' : item.customFieldName;
        }
        return _this;
    }
    DmcMediaRssTextItem.prototype.getGroupTextItem = function (element, customFieldName) {
        if (element === this.element
            && (element !== bsDmInterfaces_1.RssTextElementName.Custom || customFieldName === this.customFieldName)) {
            return this;
        }
        var item = lodash_1.find(this.groupTextItems, function (textItem) {
            return element === textItem.element
                && (element !== bsDmInterfaces_1.RssTextElementName.Custom || customFieldName === textItem.customFieldName);
        });
        return lodash_1.isNil(item) ? null : item;
    };
    return DmcMediaRssTextItem;
}(DmcLiveTextItemWithTextContent));
exports.DmcMediaRssTextItem = DmcMediaRssTextItem;
function dmIsDmcLiveTextItemMediaRssTextItem(item) {
    return item.type === bsDmInterfaces_1.LiveTextItemType.MediaRssText;
}
exports.dmIsDmcLiveTextItemMediaRssTextItem = dmIsDmcLiveTextItemMediaRssTextItem;
var DmcMediaRssMediaItem = (function (_super) {
    __extends(DmcMediaRssMediaItem, _super);
    function DmcMediaRssMediaItem(item, layerIndex) {
        var _this = _super.call(this, item, layerIndex) || this;
        _this.dataFeeds = [];
        _this.groupTextItems = [];
        _this.type = item.type;
        _this.groupId = item.groupId;
        _this.enabled = lodash_1.isNil(item.enabled) ? true : item.enabled;
        return _this;
    }
    DmcMediaRssMediaItem.prototype.getGroupTextItem = function (element, customFieldName) {
        var item = lodash_1.find(this.groupTextItems, function (textItem) {
            return element === textItem.element
                && (element !== bsDmInterfaces_1.RssTextElementName.Custom || customFieldName === textItem.customFieldName);
        });
        return lodash_1.isNil(item) ? null : item;
    };
    return DmcMediaRssMediaItem;
}(DmcLiveTextItem));
exports.DmcMediaRssMediaItem = DmcMediaRssMediaItem;
function dmIsDmcLiveTextItemMediaRssMediaItem(item) {
    return item.type === bsDmInterfaces_1.LiveTextItemType.MediaRssMedia;
}
exports.dmIsDmcLiveTextItemMediaRssMediaItem = dmIsDmcLiveTextItemMediaRssMediaItem;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(3);
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmState_1 = __webpack_require__(5);
var bsDmCommands_1 = __webpack_require__(34);
var bsDmEvents_1 = __webpack_require__(19);
var bsDmError_1 = __webpack_require__(4);
var lodash_1 = __webpack_require__(0);
var selectors_1 = __webpack_require__(6);
exports.ADD_COMMAND = 'DM_ADD_COMMAND';
exports.UPDATE_COMMAND = 'DM_UPDATE_COMMAND';
exports.MOVE_COMMAND = 'DM_MOVE_COMMAND';
exports.DELETE_COMMAND = 'DM_DELETE_COMMAND';
function dmAddCommand(sequenceType, parentId, command) {
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.ADD_COMMAND,
            payload: {
                sequenceType: sequenceType,
                parentId: parentId,
                command: __assign({}, command, { id: utils_1.newBsDmId() }),
            },
        };
        if (!command.operations || !Array.isArray(command.operations) || command.operations.length === 0) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'AddCommand: invalid command: no operations array', { action: mainAction });
        }
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var isTimeCodeEvent = false;
        var isTimedCommand = bsDmCommands_1.dmIsTimedCommand(command);
        if (sequenceType === bscore_1.CommandSequenceType.Event) {
            isTimeCodeEvent = bsDmEvents_1.dmIsTimeCodeEvent(selectors_1.dmGetEventTypeById(dmState, { id: parentId }));
        }
        if (isTimeCodeEvent && !isTimedCommand) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'AddCommand: commands added to TimeCode events must be timed commands', { action: mainAction });
        }
        else if (!isTimeCodeEvent && isTimedCommand) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'AddCommand: timed commands can only be added to TimeCode events', { action: mainAction });
        }
        var sequenceId = selectors_1.dmGetCommandSequenceIdForParentAndType(dmState, { id: parentId, type: sequenceType });
        mainAction.payload.command.sequenceId = sequenceId ? sequenceId : utils_1.newBsDmId();
        return dispatch(mainAction);
    };
}
exports.dmAddCommand = dmAddCommand;
function dmUpdateCommand(params) {
    return function (dispatch, getState) {
        var mainAction = dmUpdateCommandAction(params);
        if (!lodash_1.isNil(params.startTime)) {
            var dmState = bsDmState_1.dmFilterDmState(getState());
            var existingCommand = selectors_1.dmGetCommandStateById(dmState, { id: params.id });
            if (!bsDmCommands_1.dmIsTimedCommand(existingCommand)) {
                mainAction.payload = lodash_1.omit(mainAction.payload, 'startTime');
            }
        }
        return dispatch(mainAction);
    };
}
exports.dmUpdateCommand = dmUpdateCommand;
function dmUpdateCommandAction(params) {
    return {
        type: exports.UPDATE_COMMAND,
        payload: params,
    };
}
exports.dmUpdateCommandAction = dmUpdateCommandAction;
function dmMoveCommandsAtIndices(sequenceType, parentId, indices, targetIndex) {
    return function (dispatch, getState) {
        if (typeof indices === 'number') {
            indices = [indices];
        }
        var mainAction = {
            type: exports.MOVE_COMMAND,
            payload: { sequenceId: bsDmInterfaces_1.BsDmIdNone, indices: indices, targetIndex: targetIndex },
        };
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var commandSequenceId = selectors_1.dmGetCommandSequenceIdForParentAndType(dmState, { id: parentId, type: sequenceType });
        if (lodash_1.isNil(commandSequenceId)) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'MoveCommandsAtIndices - command sequence not found for given parent state and sequence type', { action: mainAction });
        }
        var commandSequenceObject = selectors_1.dmGetCommandSequenceStateById(dmState, { id: commandSequenceId });
        mainAction.payload.sequenceId = commandSequenceId;
        var commandSequenceCount = commandSequenceObject.sequence.length;
        if (targetIndex < 0 || targetIndex >= commandSequenceCount) {
            mainAction.payload.targetIndex = commandSequenceCount - 1;
        }
        mainAction.payload.indices = indices.filter(function (index) { return index >= 0 && index < commandSequenceCount; });
        dispatch(mainAction);
        return mainAction;
    };
}
exports.dmMoveCommandsAtIndices = dmMoveCommandsAtIndices;
function dmDeleteCommand(ids) {
    return {
        type: exports.DELETE_COMMAND,
        payload: {
            commandIds: Array.isArray(ids) ? ids : [ids],
        },
    };
}
exports.dmDeleteCommand = dmDeleteCommand;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(3);
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmState_1 = __webpack_require__(5);
var bsDmParameterizedStrings_1 = __webpack_require__(14);
var bsDmError_1 = __webpack_require__(4);
var actionBase_1 = __webpack_require__(8);
var actionDataFeed_1 = __webpack_require__(20);
var lodash_1 = __webpack_require__(0);
exports.ADD_USER_VARIABLE = 'DM_ADD_USER_VARIABLE';
exports.UPDATE_USER_VARIABLE = 'DM_UPDATE_USER_VARIABLE';
exports.MOVE_USER_VARIABLES = 'DM_MOVE_USER_VARIABLES';
exports.DELETE_USER_VARIABLE = 'DM_DELETE_USER_VARIABLE';
function dmAddUserVariable(name, defaultValue, access, isNetworked, dataFeedSpec, systemVariable) {
    if (access === void 0) { access = bscore_1.AccessType.Private; }
    if (isNetworked === void 0) { isNetworked = false; }
    if (dataFeedSpec === void 0) { dataFeedSpec = null; }
    if (systemVariable === void 0) { systemVariable = null; }
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.ADD_USER_VARIABLE,
            payload: {
                id: utils_1.newBsDmId(),
                name: name,
                defaultValue: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(defaultValue),
                access: access,
                isNetworked: isNetworked,
                dataFeedId: bsDmInterfaces_1.BsDmIdNone,
                systemVariable: systemVariable,
            },
        };
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        if (isNetworked) {
            if (!lodash_1.isNil(dataFeedSpec)) {
                var actionListParams = actionDataFeed_1.dmGetAddDataFeedActionList(dmState, null, dataFeedSpec);
                batchedActions.push.apply(batchedActions, actionListParams.actions);
                mainAction.payload.dataFeedId = actionListParams.mainAction.payload.id;
            }
            else {
                mainAction.payload.isNetworked = false;
            }
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmAddUserVariable = dmAddUserVariable;
function dmUpdateUserVariable(params) {
    return function (dispatch, getState) {
        var payload = lodash_1.pick(params, ['id', 'name', 'access', 'isNetworked', 'systemVariable']);
        if (!lodash_1.isNil(params.defaultValue)) {
            payload.defaultValue = bsDmParameterizedStrings_1.dmResolveDmParameterizedString(params.defaultValue);
        }
        var mainAction = {
            type: exports.UPDATE_USER_VARIABLE,
            payload: payload,
        };
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var existingUserVar = dmState.userVariables.variablesById[params.id];
        if (!lodash_1.isNil(existingUserVar)) {
            if (params.isNetworked) {
                if (!lodash_1.isNil(params.dataFeedSpec)) {
                    var actionListParams = void 0;
                    if (utils_1.isValidBsDmId(existingUserVar.dataFeedId)) {
                        actionListParams = actionDataFeed_1.dmGetUpdateDataFeedActionList(dmState, { id: existingUserVar.dataFeedId, feedSpec: params.dataFeedSpec });
                    }
                    else {
                        actionListParams = actionDataFeed_1.dmGetAddDataFeedActionList(dmState, null, params.dataFeedSpec);
                        mainAction.payload.dataFeedId = actionListParams.mainAction.payload.id;
                    }
                    batchedActions.push.apply(batchedActions, actionListParams.actions);
                }
                else if (!existingUserVar.isNetworked) {
                    mainAction.payload.isNetworked = false;
                }
            }
            if (!lodash_1.isNil(mainAction.payload.isNetworked)
                && !mainAction.payload.isNetworked
                && utils_1.isValidBsDmId(existingUserVar.dataFeedId)) {
                batchedActions.push(actionDataFeed_1.dmDeleteDataFeedWithParams(actionDataFeed_1.dmGetDataFeedDeleteParams(dmState, existingUserVar.dataFeedId)));
                mainAction.payload.dataFeedId = bsDmInterfaces_1.BsDmIdNone;
            }
        }
        else {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateUserVariable - invalid ID');
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmUpdateUserVariable = dmUpdateUserVariable;
function dmMoveUserVariablesAtIndices(indices, targetIndex) {
    return {
        type: exports.MOVE_USER_VARIABLES,
        payload: {
            indices: Array.isArray(indices) ? indices : [indices],
            targetIndex: targetIndex,
        },
    };
}
exports.dmMoveUserVariablesAtIndices = dmMoveUserVariablesAtIndices;
function dmGetUserVariableDeleteParams(state, id) {
    var userVariableIds = (Array.isArray(id) ? id : [id]).filter(utils_1.isValidBsDmId);
    var deleteParams = {
        userVariableIds: userVariableIds,
        dataFeedIds: userVariableIds.reduce(function (acc, uvId) {
            var userVar = state.userVariables.variablesById[uvId];
            if (!lodash_1.isNil(userVar) && utils_1.isValidBsDmId(userVar.dataFeedId)) {
                acc.push(userVar.dataFeedId);
            }
            return acc;
        }, []),
        dataFeedSourceIds: [],
        assetIds: [],
    };
    if (deleteParams.dataFeedIds.length) {
        var dataFeedDeleteParams = actionDataFeed_1.dmGetDataFeedDeleteParams(state, deleteParams.dataFeedIds);
        deleteParams.dataFeedSourceIds = dataFeedDeleteParams.dataFeedSourceIds;
        deleteParams.assetIds = dataFeedDeleteParams.assetIds;
    }
    return deleteParams;
}
exports.dmGetUserVariableDeleteParams = dmGetUserVariableDeleteParams;
function dmDeleteUserVariablesWithParams(params) {
    return {
        type: exports.DELETE_USER_VARIABLE,
        payload: params,
    };
}
exports.dmDeleteUserVariablesWithParams = dmDeleteUserVariablesWithParams;
function dmDeleteUserVariable(id) {
    return function (dispatch, getState) {
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var deleteParams = dmGetUserVariableDeleteParams(dmState, id);
        var mainAction = dmDeleteUserVariablesWithParams(deleteParams);
        dispatch(mainAction);
        return mainAction;
    };
}
exports.dmDeleteUserVariable = dmDeleteUserVariable;


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmClasses_1 = __webpack_require__(10);
var bsDmDataFeed_1 = __webpack_require__(18);
var bsDmContentItems_1 = __webpack_require__(13);
var selectorAssetMap_1 = __webpack_require__(23);
var selectorUserVariable_1 = __webpack_require__(37);
var utils_1 = __webpack_require__(3);
var lodash_1 = __webpack_require__(0);
var reselect_1 = __webpack_require__(24);
function dmCreateDmcDataFeed(state, props) {
    var dataFeedObjects = dmGetDataFeedStateEntitiesByFeedId(state, props);
    return lodash_1.isNil(dataFeedObjects) ? null : new bsDmClasses_1.DmcDataFeed(dataFeedObjects);
}
function dmGetDataFeedStateById(state, props) {
    var dataFeedState = state.dataFeeds.feedsById[props.id];
    return lodash_1.isNil(dataFeedState) ? null : dataFeedState;
}
exports.dmGetDataFeedStateById = dmGetDataFeedStateById;
function dmGetDataFeedById(state, props) {
    return dmCreateDmcDataFeed(state, props);
}
exports.dmGetDataFeedById = dmGetDataFeedById;
function dmGetDataFeedIdsForSign(state) {
    return Object.keys(state.dataFeeds.feedsById);
}
exports.dmGetDataFeedIdsForSign = dmGetDataFeedIdsForSign;
function dmGetSystemDataFeedIdsForSign(state) {
    return Object.keys(state.dataFeeds.feedsById)
        .filter(function (id) {
        var dataFeedState = state.dataFeeds.feedsById[id];
        return !lodash_1.isNil(dataFeedState) && !lodash_1.isNil(dataFeedState.isSystemFeed) && dataFeedState.isSystemFeed;
    });
}
exports.dmGetSystemDataFeedIdsForSign = dmGetSystemDataFeedIdsForSign;
function dmGetDataFeedStateEntitiesByFeedId(state, props) {
    var dataFeed = state.dataFeeds.feedsById[props.id];
    if (!lodash_1.isNil(dataFeed)) {
        var feedSource = state.dataFeeds.sourcesById[dataFeed.feedSourceId];
        var assetItem = void 0;
        if (bsDmDataFeed_1.dmIsDataFeedSourceBsnDataFeed(feedSource)) {
            assetItem = selectorAssetMap_1.dmGetAssetItemById(state, { id: feedSource.dataFeedAssetId });
        }
        return { dataFeed: dataFeed, feedSource: feedSource, assetItem: assetItem };
    }
    return null;
}
exports.dmGetDataFeedStateEntitiesByFeedId = dmGetDataFeedStateEntitiesByFeedId;
function dmGetDataFeedIdsForMediaState(state, props) {
    var mediaState = state.mediaStates.mediaStatesById[props.id];
    var dataFeedIds = [];
    if (!lodash_1.isNil(mediaState)) {
        if (bsDmContentItems_1.dmContentItemIsAnyDataFeedContentItem(mediaState.contentItem)) {
            dataFeedIds.push(mediaState.contentItem.dataFeedId);
        }
        else if (bsDmContentItems_1.dmContentItemIsMediaListOrPlayFileContentItem(mediaState.contentItem)) {
            if (utils_1.isValidBsDmId(mediaState.contentItem.dataFeedId)) {
                dataFeedIds.push(mediaState.contentItem.dataFeedId);
            }
        }
    }
    return dataFeedIds;
}
exports.dmGetDataFeedIdsForMediaState = dmGetDataFeedIdsForMediaState;
function dmGetDataFeedSourceIdsForSign(state) {
    return Object.keys(state.dataFeeds.sourcesById);
}
exports.dmGetDataFeedSourceIdsForSign = dmGetDataFeedSourceIdsForSign;
function dmGetDataFeedNamesForSign(state) {
    var getDataFeedNamesForSign = reselect_1.createSelector(function (dmState) { return dmState.dataFeeds.feedsById; }, function (dataFeeds) { return Object.keys(dataFeeds).map(function (id) { return dataFeeds[id].name; }); });
    return getDataFeedNamesForSign(state);
}
exports.dmGetDataFeedNamesForSign = dmGetDataFeedNamesForSign;
function dmGetDataFeedByName(state, props) {
    var dataFeeds = state.dataFeeds.feedsById;
    var dataFeedId = lodash_1.find(Object.keys(dataFeeds), function (id) { return dataFeeds[id].name === props.name; });
    return lodash_1.isNil(dataFeedId) ? null : dmCreateDmcDataFeed(state, { id: dataFeedId });
}
exports.dmGetDataFeedByName = dmGetDataFeedByName;
function dmGetBsnDataFeedAssetItem(state, props) {
    var dataFeedSource = dmGetDataFeedSourceForFeedId(state, props);
    if (!lodash_1.isNil(dataFeedSource) && bsDmDataFeed_1.dmIsDataFeedSourceBsnDataFeed(dataFeedSource)) {
        return selectorAssetMap_1.dmGetAssetItemById(state, { id: dataFeedSource.dataFeedAssetId });
    }
    return null;
}
exports.dmGetBsnDataFeedAssetItem = dmGetBsnDataFeedAssetItem;
function dmGetBsnDataFeedAssetLocator(state, props) {
    var assetItem = dmGetBsnDataFeedAssetItem(state, props);
    return lodash_1.isNil(assetItem) ? null : bscore_1.bscAssetLocatorFromAssetItem(assetItem);
}
exports.dmGetBsnDataFeedAssetLocator = dmGetBsnDataFeedAssetLocator;
function dmGetDataFeedSourceForFeedId(state, props) {
    var dataFeed = state.dataFeeds.feedsById[props.id];
    var dataFeedSource = lodash_1.isNil(dataFeed) ? null : state.dataFeeds.sourcesById[dataFeed.feedSourceId];
    return lodash_1.isNil(dataFeedSource) ? null : dataFeedSource;
}
exports.dmGetDataFeedSourceForFeedId = dmGetDataFeedSourceForFeedId;
function dmGetDataFeedSourceForFeedSourceId(state, props) {
    var dataFeedSource = state.dataFeeds.sourcesById[props.id];
    return lodash_1.isNil(dataFeedSource) ? null : dataFeedSource;
}
exports.dmGetDataFeedSourceForFeedSourceId = dmGetDataFeedSourceForFeedSourceId;
function dmGetDataFeedSourceIdForFeedSpec(state, feedSpec) {
    var dataFeedSources = state.dataFeeds.sourcesById;
    if (bsDmDataFeed_1.dmIsBsnDataFeedSourceSpecification(feedSpec)) {
        var bsnSourceId = lodash_1.find(Object.keys(dataFeedSources), function (id) {
            if (bsDmDataFeed_1.dmIsDataFeedSourceBsnDataFeed(dataFeedSources[id])) {
                var assetItem = selectorAssetMap_1.dmGetAssetItemById(state, { id: dataFeedSources[id].dataFeedAssetId });
                return !lodash_1.isNil(assetItem) && feedSpec.assetItem.networkId === assetItem.networkId;
            }
            return false;
        });
        return lodash_1.isUndefined(bsnSourceId) ? null : bsnSourceId;
    }
    else if (bsDmDataFeed_1.dmIsRemoteDataFeedSourceSpecification(feedSpec)) {
        var urlString_1 = typeof feedSpec.url === 'string' ?
            feedSpec.url : selectorUserVariable_1.dmGetDisplayStringFromParameterizedString(state, { paramString: feedSpec.url });
        var remoteSourceId = lodash_1.find(Object.keys(dataFeedSources), function (id) {
            return bsDmDataFeed_1.dmIsDataFeedSourceRemoteDataFeed(dataFeedSources[id])
                && urlString_1 === selectorUserVariable_1.dmGetDisplayStringFromParameterizedString(state, { paramString: dataFeedSources[id].url });
        });
        return lodash_1.isUndefined(remoteSourceId) ? null : remoteSourceId;
    }
    return null;
}
exports.dmGetDataFeedSourceIdForFeedSpec = dmGetDataFeedSourceIdForFeedSpec;


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmParameterizedStrings_1 = __webpack_require__(14);
var bsDmParameterizedNumbers_1 = __webpack_require__(25);
var selectorAssetMap_1 = __webpack_require__(23);
var bsDmDataFeed_1 = __webpack_require__(18);
var bsDmHtmlSite_1 = __webpack_require__(38);
var selectorDataFeed_1 = __webpack_require__(31);
var selectorHtmlSite_1 = __webpack_require__(55);
var selectorUserVariable_1 = __webpack_require__(37);
var bsDmError_1 = __webpack_require__(4);
var utils_1 = __webpack_require__(3);
var lodash_1 = __webpack_require__(0);
exports.dmGetEntityError = function (type, errorDetails) {
    return new bsDmError_1.BsDmError(type, null, errorDetails);
};
exports.dmValidateEntityParameterizedString = function (state, paramString, errorDetails, cannotBeEmpty) {
    if (cannotBeEmpty === void 0) { cannotBeEmpty = false; }
    if (bsDmParameterizedStrings_1.dmIsValidParameterizedString(paramString)) {
        if (!selectorUserVariable_1.dmAreParameterizedStringUserVariablesValid(state, { paramString: paramString })) {
            return exports.dmGetEntityError(bsDmError_1.DmErrorType.userVariableNameNotDefined, errorDetails);
        }
        else if (cannotBeEmpty && bsDmParameterizedStrings_1.dmIsEmptyParameterizedString(paramString)) {
            return exports.dmGetEntityError(bsDmError_1.DmErrorType.stringDataValueIsEmpty, errorDetails);
        }
    }
    else {
        return exports.dmGetEntityError(bsDmError_1.DmErrorType.invalidParameters, errorDetails);
    }
    return null;
};
exports.dmValidateEntityParameterizedHexString = function (state, paramString, errorDetails) {
    if (bsDmParameterizedStrings_1.dmIsValidParameterizedString(paramString)) {
        if (!selectorUserVariable_1.dmAreParameterizedStringUserVariablesValid(state, { paramString: paramString })) {
            return exports.dmGetEntityError(bsDmError_1.DmErrorType.userVariableNameNotDefined, errorDetails);
        }
        else if (bsDmParameterizedStrings_1.dmIsEmptyParameterizedString(paramString)) {
            return exports.dmGetEntityError(bsDmError_1.DmErrorType.stringDataValueIsEmpty, errorDetails);
        }
        else {
            var textParams = bsDmParameterizedStrings_1.dmGetParameterizedStringTextParams(paramString);
            var entityError_1 = null;
            textParams.some(function (param) {
                if (!utils_1.isValidHexString(param)) {
                    entityError_1 = exports.dmGetEntityError(bsDmError_1.DmErrorType.invalidHexString, errorDetails);
                    return true;
                }
                return false;
            });
            return entityError_1;
        }
    }
    return exports.dmGetEntityError(bsDmError_1.DmErrorType.invalidParameters, errorDetails);
};
exports.dmValidateEntityParameterizedNumber = function (state, paramNumber, errorDetails) {
    if (bsDmParameterizedNumbers_1.dmIsValidParameterizedNumber(paramNumber)) {
        if (!selectorUserVariable_1.dmIsParameterizedNumberUserVariableValid(state, { paramNumber: paramNumber })) {
            return exports.dmGetEntityError(bsDmError_1.DmErrorType.userVariableNameNotDefined, errorDetails);
        }
    }
    else {
        return exports.dmGetEntityError(bsDmError_1.DmErrorType.invalidParameters, errorDetails);
    }
    return null;
};
exports.dmValidateEntityDataFeed = function (state, dataFeedId, errorDetails) {
    if (!lodash_1.isNil(dataFeedId)) {
        var feedSource = selectorDataFeed_1.dmGetDataFeedSourceForFeedId(state, { id: dataFeedId });
        if (!lodash_1.isNil(feedSource) && bsDmDataFeed_1.dmIsDataFeedSourceRemoteDataFeed(feedSource)) {
            errorDetails.entityProperty = errorDetails.entityProperty + '.url';
            if (bsDmParameterizedStrings_1.dmIsEmptyParameterizedString(feedSource.url)) {
                return exports.dmGetEntityError(bsDmError_1.DmErrorType.dataFeedNotSpecified, errorDetails);
            }
            return exports.dmValidateEntityParameterizedString(state, feedSource.url, errorDetails);
        }
    }
    else {
        errorDetails.entityProperty = errorDetails.entityProperty + '.id';
        return exports.dmGetEntityError(bsDmError_1.DmErrorType.invalidParameters, errorDetails);
    }
    return null;
};
exports.dmValidateEntityHtmlSite = function (state, htmlSiteId, errorDetails) {
    var errorList = [];
    if (!lodash_1.isNil(htmlSiteId)) {
        var htmlSite = selectorHtmlSite_1.dmGetHtmlSiteStateById(state, { id: htmlSiteId });
        if (!lodash_1.isNil(htmlSite)) {
            var entityProperty = void 0;
            if (bsDmHtmlSite_1.dmHtmlSiteIsRemoteHtmlSite(htmlSite)) {
                entityProperty = errorDetails.entityProperty + '.url';
                var urlError = exports.dmValidateEntityParameterizedString(state, htmlSite.url, __assign({}, errorDetails, { entityProperty: entityProperty }), true);
                if (!lodash_1.isNil(urlError)) {
                    errorList.push(urlError);
                }
            }
            entityProperty = errorDetails.entityProperty + '.queryString';
            var queryStringError = exports.dmValidateEntityParameterizedString(state, htmlSite.queryString, __assign({}, errorDetails, { entityProperty: entityProperty }));
            if (!lodash_1.isNil(queryStringError)) {
                errorList.push(queryStringError);
            }
        }
    }
    return errorList.length ? errorList : null;
};
exports.dmValidateUserVariableId = function (state, userVariableId, errorDetails) {
    if (!(utils_1.isValidBsDmId(userVariableId) && !lodash_1.isNil(selectorUserVariable_1.dmGetUserVariableStateById(state, { id: userVariableId })))) {
        return exports.dmGetEntityError(bsDmError_1.DmErrorType.userVariableIdInvalid, errorDetails);
    }
    return null;
};
exports.dmValidateUserVariableName = function (state, userVariableName, errorDetails) {
    if (!lodash_1.isString(userVariableName) || lodash_1.isNil(selectorUserVariable_1.dmGetUserVariableIdForName(state, { name: userVariableName }))) {
        return exports.dmGetEntityError(bsDmError_1.DmErrorType.userVariableNameNotDefined, errorDetails);
    }
    return null;
};
exports.dmValidateAssetId = function (state, assetId, errorDetails) {
    if (!(bscore_1.bscIsValidAssetId(assetId) && !lodash_1.isNil(selectorAssetMap_1.dmGetAssetItemById(state, { id: assetId })))) {
        return exports.dmGetEntityError(bsDmError_1.DmErrorType.assetNotFound, errorDetails);
    }
    return null;
};


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var lodash_1 = __webpack_require__(0);
function dmIsFontAssetItem(assetItem) {
    return assetItem.assetType === bscore_1.AssetType.Content && assetItem.mediaType === bscore_1.MediaType.Font;
}
exports.dmIsFontAssetItem = dmIsFontAssetItem;
var VideoOrImagesPlaylistAssetTypeArray = [
    bscore_1.AssetType.HtmlSite, bscore_1.AssetType.BSNMediaFeed,
    bscore_1.AssetType.BSNDynamicPlaylist, bscore_1.AssetType.BSNTaggedPlaylist,
];
var VideoOrImagesPlaylistAssetTypes = new Set(VideoOrImagesPlaylistAssetTypeArray);
var VideoOrImagesPlaylistMediaTypeArray = [
    bscore_1.MediaType.Video, bscore_1.MediaType.Audio, bscore_1.MediaType.Image,
];
var VideoOrImagesPlaylistMediaTypes = new Set(VideoOrImagesPlaylistMediaTypeArray);
var VideoOnlyPlaylistAssetTypeArray = [];
var VideoOnlyPlaylistAssetTypes = new Set(VideoOnlyPlaylistAssetTypeArray);
var VideoOnlyPlaylistMediaTypeArray = [
    bscore_1.MediaType.Video,
];
var VideoOnlyPlaylistMediaTypes = new Set(VideoOnlyPlaylistMediaTypeArray);
var ImagesPlaylistAssetTypeArray = [
    bscore_1.AssetType.HtmlSite, bscore_1.AssetType.BSNDataFeed, bscore_1.AssetType.BSNMediaFeed,
    bscore_1.AssetType.BSNDynamicPlaylist, bscore_1.AssetType.BSNTaggedPlaylist,
];
var ImagesPlaylistAssetTypes = new Set(ImagesPlaylistAssetTypeArray);
var ImagesPlaylistMediaTypeArray = [
    bscore_1.MediaType.Image,
];
var ImagesPlaylistMediaTypes = new Set(ImagesPlaylistMediaTypeArray);
var AudioPlaylistAssetTypeArray = [
    bscore_1.AssetType.BSNMediaFeed, bscore_1.AssetType.BSNDynamicPlaylist, bscore_1.AssetType.BSNTaggedPlaylist,
];
var AudioPlaylistAssetTypes = new Set(AudioPlaylistAssetTypeArray);
var AudioPlaylistMediaTypeArray = [
    bscore_1.MediaType.Audio,
];
var AudioPlaylistMediaTypes = new Set(AudioPlaylistMediaTypeArray);
var TickerPlaylistAssetTypeArray = [
    bscore_1.AssetType.BSNDataFeed, bscore_1.AssetType.BSNMediaFeed, bscore_1.AssetType.BSNDynamicPlaylist, bscore_1.AssetType.BSNTaggedPlaylist,
];
var TickerPlaylistAssetTypes = new Set(TickerPlaylistAssetTypeArray);
var TickerPlaylistMediaTypeArray = [
    bscore_1.MediaType.Text,
];
var TickerPlaylistMediaTypes = new Set(TickerPlaylistMediaTypeArray);
var BackgroundImagePlaylistMediaTypeArray = [
    bscore_1.MediaType.Image,
];
var BackgroundImagePlaylistMediaTypes = new Set(BackgroundImagePlaylistMediaTypeArray);
function dmIsValidAssetItemForPlaylist(assetItem, zoneType) {
    if (lodash_1.isNil(assetItem) || lodash_1.isNil(zoneType)) {
        return false;
    }
    var mediaType = lodash_1.isNil(assetItem.mediaType) ? bscore_1.MediaType.Other : assetItem.mediaType;
    switch (zoneType) {
        case bscore_1.ZoneType.VideoOrImages:
            return VideoOrImagesPlaylistAssetTypes.has(assetItem.assetType)
                || (assetItem.assetType === bscore_1.AssetType.Content && VideoOrImagesPlaylistMediaTypes.has(mediaType));
        case bscore_1.ZoneType.VideoOnly:
            return VideoOnlyPlaylistAssetTypes.has(assetItem.assetType)
                || (assetItem.assetType === bscore_1.AssetType.Content && VideoOnlyPlaylistMediaTypes.has(mediaType));
        case bscore_1.ZoneType.Images:
            return ImagesPlaylistAssetTypes.has(assetItem.assetType)
                || (assetItem.assetType === bscore_1.AssetType.Content && ImagesPlaylistMediaTypes.has(mediaType));
        case bscore_1.ZoneType.AudioOnly:
        case bscore_1.ZoneType.EnhancedAudio:
            return AudioPlaylistAssetTypes.has(assetItem.assetType)
                || (assetItem.assetType === bscore_1.AssetType.Content && AudioPlaylistMediaTypes.has(mediaType));
        case bscore_1.ZoneType.Ticker:
            return TickerPlaylistAssetTypes.has(assetItem.assetType)
                || (assetItem.assetType === bscore_1.AssetType.Content && TickerPlaylistMediaTypes.has(mediaType));
        case bscore_1.ZoneType.Clock:
            return false;
        case bscore_1.ZoneType.BackgroundImage:
            return assetItem.assetType === bscore_1.AssetType.Content && BackgroundImagePlaylistMediaTypes.has(mediaType);
    }
    return false;
}
exports.dmIsValidAssetItemForPlaylist = dmIsValidAssetItemForPlaylist;
var VideoOrImagesZoneAssetTypeArray = [
    bscore_1.AssetType.HtmlSite, bscore_1.AssetType.BSNMediaFeed,
    bscore_1.AssetType.BSNDynamicPlaylist, bscore_1.AssetType.BSNTaggedPlaylist,
];
var VideoOrImagesZoneAssetTypes = new Set(VideoOrImagesZoneAssetTypeArray);
var VideoOrImagesZoneMediaTypeArray = [
    bscore_1.MediaType.Video, bscore_1.MediaType.Audio, bscore_1.MediaType.Image,
];
var VideoOrImagesZoneMediaTypes = new Set(VideoOrImagesZoneMediaTypeArray);
var VideoOnlyZoneAssetTypeArray = [];
var VideoOnlyZoneAssetTypes = new Set(VideoOnlyZoneAssetTypeArray);
var VideoOnlyZoneMediaTypeArray = [
    bscore_1.MediaType.Video,
];
var VideoOnlyZoneMediaTypes = new Set(VideoOnlyZoneMediaTypeArray);
var ImagesZoneAssetTypeArray = [
    bscore_1.AssetType.HtmlSite, bscore_1.AssetType.BSNDataFeed, bscore_1.AssetType.BSNMediaFeed,
    bscore_1.AssetType.BSNDynamicPlaylist, bscore_1.AssetType.BSNTaggedPlaylist,
];
var ImagesZoneAssetTypes = new Set(ImagesZoneAssetTypeArray);
var ImagesZoneMediaTypeArray = [
    bscore_1.MediaType.Image,
];
var ImagesZoneMediaTypes = new Set(ImagesZoneMediaTypeArray);
var AudioZoneAssetTypeArray = [
    bscore_1.AssetType.BSNMediaFeed, bscore_1.AssetType.BSNDynamicPlaylist, bscore_1.AssetType.BSNTaggedPlaylist,
];
var AudioZoneAssetTypes = new Set(AudioZoneAssetTypeArray);
var AudioZoneMediaTypeArray = [
    bscore_1.MediaType.Audio,
];
var AudioZoneMediaTypes = new Set(AudioZoneMediaTypeArray);
var TickerZoneAssetTypeArray = [
    bscore_1.AssetType.BSNDataFeed, bscore_1.AssetType.BSNMediaFeed, bscore_1.AssetType.BSNDynamicPlaylist, bscore_1.AssetType.BSNTaggedPlaylist,
];
var TickerZoneAssetTypes = new Set(TickerZoneAssetTypeArray);
var TickerZoneMediaTypeArray = [
    bscore_1.MediaType.Text,
];
var TickerZoneMediaTypes = new Set(TickerZoneMediaTypeArray);
var BackgroundImageZoneMediaTypeArray = [
    bscore_1.MediaType.Image,
];
var BackgroundImageZoneMediaTypes = new Set(BackgroundImageZoneMediaTypeArray);
function dmIsValidAssetItemForZone(assetItem, zoneType) {
    if (lodash_1.isNil(assetItem) || lodash_1.isNil(zoneType)) {
        return false;
    }
    var mediaType = lodash_1.isNil(assetItem.mediaType) ? bscore_1.MediaType.Other : assetItem.mediaType;
    switch (zoneType) {
        case bscore_1.ZoneType.VideoOrImages:
            return VideoOrImagesZoneAssetTypes.has(assetItem.assetType)
                || (assetItem.assetType === bscore_1.AssetType.Content && VideoOrImagesZoneMediaTypes.has(mediaType));
        case bscore_1.ZoneType.VideoOnly:
            return VideoOnlyZoneAssetTypes.has(assetItem.assetType)
                || (assetItem.assetType === bscore_1.AssetType.Content && VideoOnlyZoneMediaTypes.has(mediaType));
        case bscore_1.ZoneType.Images:
            return ImagesZoneAssetTypes.has(assetItem.assetType)
                || (assetItem.assetType === bscore_1.AssetType.Content && ImagesZoneMediaTypes.has(mediaType));
        case bscore_1.ZoneType.AudioOnly:
        case bscore_1.ZoneType.EnhancedAudio:
            return AudioZoneAssetTypes.has(assetItem.assetType)
                || (assetItem.assetType === bscore_1.AssetType.Content && AudioZoneMediaTypes.has(mediaType));
        case bscore_1.ZoneType.Ticker:
            return TickerZoneAssetTypes.has(assetItem.assetType)
                || (assetItem.assetType === bscore_1.AssetType.Content && TickerZoneMediaTypes.has(mediaType));
        case bscore_1.ZoneType.Clock:
            return false;
        case bscore_1.ZoneType.BackgroundImage:
            return assetItem.assetType === bscore_1.AssetType.Content && BackgroundImageZoneMediaTypes.has(mediaType);
    }
    return false;
}
exports.dmIsValidAssetItemForZone = dmIsValidAssetItemForZone;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmDefaults_1 = __webpack_require__(16);
var bsDmParameterizedNumbers_1 = __webpack_require__(25);
var bsDmParameterizedStrings_1 = __webpack_require__(14);
var lodash_1 = __webpack_require__(0);
function dmCreateCommandData(type, params) {
    if (params === void 0) { params = {}; }
    switch (type) {
        case bscore_1.CommandType.SendBpOutput:
            return {
                bpType: !lodash_1.isNil(params.bpType) ? params.bpType : bscore_1.BpType.Bp200,
                bpIndex: !lodash_1.isNil(params.bpIndex) ? params.bpIndex : bscore_1.BpIndex.A,
                buttonNumber: !lodash_1.isNil(params.buttonNumber) ? params.buttonNumber : 0,
                bpAction: !lodash_1.isNil(params.bpAction) ? params.bpAction : bscore_1.BpAction.Off,
            };
        case bscore_1.CommandType.SendWss: {
            var wssCommandData = {
                wssCommandName: lodash_1.isNil(params.wssCommandName) ? '' : params.wssCommandName,
                wssPort: lodash_1.isNil(params.wssPort) ? '' : params.wssPort,
                wssParameters: [],
            };
            if (!lodash_1.isNil(params.wssParameters)) {
                wssCommandData.wssParameters = params.wssParameters.map(bsDmParameterizedStrings_1.dmResolveDmParameterizedString);
            }
            return wssCommandData;
        }
        case bscore_1.CommandType.SendBLC400Output: {
            var blcOutputCommandData = {
                blcIndex: !lodash_1.isNil(params.blcIndex) ? params.blcIndex : bscore_1.BlcIndex.A,
                blcEffect: !lodash_1.isNil(params.blcEffect) ? params.blcEffect : bscore_1.BlcEffect.Intensity,
                blcChannels: !lodash_1.isNil(params.blcChannels) ? params.blcChannels : 0,
            };
            if (!lodash_1.isNil(params.blcEffectTime)) {
                blcOutputCommandData.blcEffectTime = params.blcEffectTime;
            }
            if (!lodash_1.isNil(params.blcIntensity)) {
                blcOutputCommandData.blcIntensity = params.blcIntensity;
            }
            if (!lodash_1.isNil(params.blcBlink)) {
                blcOutputCommandData.blcBlink = params.blcBlink;
            }
            if (!lodash_1.isNil(params.blcBreatheMin)) {
                blcOutputCommandData.blcBreatheMin = params.blcBreatheMin;
            }
            if (!lodash_1.isNil(params.blcBreatheMax)) {
                blcOutputCommandData.blcBreatheMax = params.blcBreatheMax;
            }
            if (!lodash_1.isNil(params.blcStrobeTime)) {
                blcOutputCommandData.blcStrobeTime = params.blcStrobeTime;
            }
            if (!lodash_1.isNil(params.blcMarqueeTimeOn)) {
                blcOutputCommandData.blcMarqueeTimeOn = params.blcMarqueeTimeOn;
            }
            if (!lodash_1.isNil(params.blcMarqueeTimeOff)) {
                blcOutputCommandData.blcMarqueeTimeOff = params.blcMarqueeTimeOff;
            }
            if (!lodash_1.isNil(params.blcPlaybackMode)) {
                blcOutputCommandData.blcPlaybackMode = params.blcPlaybackMode;
            }
            if (!lodash_1.isNil(params.blcTransitionMode)) {
                blcOutputCommandData.blcTransitionMode = params.blcTransitionMode;
            }
            return blcOutputCommandData;
        }
        case bscore_1.CommandType.SetConnectorVolume: {
            var defaultZoneProperties = bsDmDefaults_1.dmGetDefaultAudioZoneProperties();
            return {
                connector: !lodash_1.isNil(params.connector) ? params.connector : bscore_1.AudioOutputName.Analog1,
                volume: bsDmParameterizedNumbers_1.dmResolveDmParameterizedNumber(!lodash_1.isNil(params.volume) ? params.volume : defaultZoneProperties.audioVolume),
            };
        }
        case bscore_1.CommandType.IncrementConnectorVolume:
        case bscore_1.CommandType.DecrementConnectorVolume:
            return {
                connector: !lodash_1.isNil(params.connector) ? params.connector : bscore_1.AudioOutputName.Analog1,
                volume: bsDmParameterizedNumbers_1.dmResolveDmParameterizedNumber(!lodash_1.isNil(params.volume) ? params.volume : 1),
            };
        case bscore_1.CommandType.MuteAudioOutputs:
        case bscore_1.CommandType.UnmuteAudioOutputs:
            return {
                connectorList: !lodash_1.isNil(params.connectorList) ? params.connectorList :
                    (!lodash_1.isNil(params.connector) ? [params.connector] : [bscore_1.AudioOutputName.Analog1]),
            };
        case bscore_1.CommandType.SetZoneVolume: {
            var defaultZoneProperties = bsDmDefaults_1.dmGetDefaultAudioZoneProperties();
            return {
                zoneId: !lodash_1.isNil(params.zoneId) ? params.zoneId : bsDmInterfaces_1.BsDmIdNone,
                volume: bsDmParameterizedNumbers_1.dmResolveDmParameterizedNumber(!lodash_1.isNil(params.volume) ? params.volume : defaultZoneProperties.audioVolume),
            };
        }
        case bscore_1.CommandType.IncrementZoneVolume:
        case bscore_1.CommandType.DecrementZoneVolume:
            return {
                zoneId: !lodash_1.isNil(params.zoneId) ? params.zoneId : bsDmInterfaces_1.BsDmIdNone,
                volume: bsDmParameterizedNumbers_1.dmResolveDmParameterizedNumber(!lodash_1.isNil(params.volume) ? params.volume : 1),
            };
        case bscore_1.CommandType.SetZoneChannelVolume:
        case bscore_1.CommandType.IncrementZoneChannelVolume:
        case bscore_1.CommandType.DecrementZoneChannelVolume:
            return {
                zoneId: !lodash_1.isNil(params.zoneId) ? params.zoneId : bsDmInterfaces_1.BsDmIdNone,
                channel: !lodash_1.isNil(params.channel) ? params.channel : 0,
                volume: bsDmParameterizedNumbers_1.dmResolveDmParameterizedNumber(!lodash_1.isNil(params.volume) ? params.volume : 1),
            };
        case bscore_1.CommandType.SendZoneMessage:
        case bscore_1.CommandType.SendUdp:
        case bscore_1.CommandType.SendUdpBytes:
        case bscore_1.CommandType.SendIRRemote:
        case bscore_1.CommandType.SendProntoIRRemote:
        case bscore_1.CommandType.Synchronize:
        case bscore_1.CommandType.InternalSynchronize: {
            return {
                messageData: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(params.messageData),
            };
        }
        case bscore_1.CommandType.SendPluginMessage:
            return {
                pluginId: !lodash_1.isNil(params.pluginId) ? params.pluginId : bsDmInterfaces_1.BsDmIdNone,
                messageData: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(params.messageData),
            };
        case bscore_1.CommandType.SerialSendString:
        case bscore_1.CommandType.SerialSendByte:
        case bscore_1.CommandType.SerialSendBytes: {
            var data = {
                port: !lodash_1.isNil(params.port) ? params.port : '0',
                messageData: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(params.messageData),
            };
            if (!lodash_1.isNil(params.eol)) {
                data.eol = params.eol;
            }
            return data;
        }
        case bscore_1.CommandType.GpioOn:
        case bscore_1.CommandType.GpioOff:
            return {
                gpioNumber: !lodash_1.isNil(params.gpioNumber) ? params.gpioNumber : 0,
            };
        case bscore_1.CommandType.GpioSetState:
            return {
                gpioState: !lodash_1.isNil(params.gpioState) ? params.gpioState : 0,
            };
        case bscore_1.CommandType.CecSendString:
            return {
                hexString: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(params.hexString),
                substituteSourceAddress: lodash_1.isNil(params.substituteSourceAddress) ? false : params.substituteSourceAddress,
            };
        case bscore_1.CommandType.CecPhilipsSetVolume:
            return {
                volume: bsDmParameterizedNumbers_1.dmResolveDmParameterizedNumber(params.volume),
            };
        case bscore_1.CommandType.BeaconStart:
        case bscore_1.CommandType.BeaconStop:
            return {
                beaconName: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(params.messageData),
            };
        case bscore_1.CommandType.Pause:
            return {
                pauseTime: bsDmParameterizedNumbers_1.dmResolveDmParameterizedNumber(!lodash_1.isNil(params.pauseTime) ? params.pauseTime : 300),
            };
        case bscore_1.CommandType.SetVariable:
            return {
                userVariableId: !lodash_1.isNil(params.userVariableId) ? params.userVariableId : bsDmInterfaces_1.BsDmIdNone,
                userVariableValue: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(lodash_1.isNil(params.userVariableValue) ? '' : params.userVariableValue),
            };
        case bscore_1.CommandType.IncrementVariable:
        case bscore_1.CommandType.DecrementVariable:
        case bscore_1.CommandType.ResetVariable:
            return {
                userVariableId: !lodash_1.isNil(params.userVariableId) ? params.userVariableId : bsDmInterfaces_1.BsDmIdNone,
            };
        case bscore_1.CommandType.ResizeZone:
            return {
                zoneId: !lodash_1.isNil(params.zoneId) ? params.zoneId : bsDmInterfaces_1.BsDmIdNone,
                position: !lodash_1.isNil(params.position) ? params.position : bscore_1.bscCreatePercentageRect(0, 0, 100, 100),
            };
        case bscore_1.CommandType.HideZone:
        case bscore_1.CommandType.ShowZone:
            return {
                zoneId: !lodash_1.isNil(params.zoneId) ? params.zoneId : bsDmInterfaces_1.BsDmIdNone,
            };
        case bscore_1.CommandType.SwitchPresentation:
            return {
                presentationName: lodash_1.isNil(params.presentationName) ? null :
                    bsDmParameterizedStrings_1.dmResolveDmParameterizedString(params.presentationName),
                userVariableId: lodash_1.isNil(params.userVariableId) ? null : params.userVariableId,
            };
        case bscore_1.CommandType.SetAllAudioOutputs: {
            var defaultZoneProperties = bsDmDefaults_1.dmGetDefaultAudioZoneProperties();
            return {
                zoneId: !lodash_1.isNil(params.zoneId) ? params.zoneId : bsDmInterfaces_1.BsDmIdNone,
                audioOutputAssignments: __assign({}, defaultZoneProperties.audioOutputAssignments, params.audioOutputAssignments),
            };
        }
        case bscore_1.CommandType.SetAudioMode: {
            var defaultZoneProperties = bsDmDefaults_1.dmGetDefaultAudioZoneProperties();
            return {
                zoneId: !lodash_1.isNil(params.zoneId) ? params.zoneId : bsDmInterfaces_1.BsDmIdNone,
                mode: !lodash_1.isNil(params.audioMode) ? params.audioMode : defaultZoneProperties.audioMode,
            };
        }
        case bscore_1.CommandType.UpdateDataFeed: {
            return {
                dataFeedId: params.dataFeedId,
            };
        }
    }
    return null;
}
exports.dmCreateCommandData = dmCreateCommandData;
function dmCreateCommand(name, type, params) {
    var operations;
    if (type === bscore_1.CommandType.SetAllAudioOutputs) {
        operations = [
            { type: bscore_1.CommandType.SetAllAudioOutputs, data: dmCreateCommandData(bscore_1.CommandType.SetAllAudioOutputs, params) },
            { type: bscore_1.CommandType.SetAudioMode, data: dmCreateCommandData(bscore_1.CommandType.SetAudioMode, params) },
            { type: bscore_1.CommandType.ConfigureAudioResources, data: null },
        ];
    }
    else {
        operations = [{ type: type, data: dmCreateCommandData(type, params) }];
    }
    return { id: bsDmInterfaces_1.BsDmIdNone, name: name, operations: operations, sequenceId: bsDmInterfaces_1.BsDmIdNone };
}
exports.dmCreateCommand = dmCreateCommand;
function dmCreateTimedCommand(name, type, startTime, params) {
    if (startTime === void 0) { startTime = 0; }
    return __assign({}, dmCreateCommand(name, type, params), { startTime: startTime });
}
exports.dmCreateTimedCommand = dmCreateTimedCommand;
function dmIsTimedCommand(command) {
    return !lodash_1.isNil(command)
        && command.hasOwnProperty('startTime')
        && !lodash_1.isNil(command.startTime);
}
exports.dmIsTimedCommand = dmIsTimedCommand;
function dmIsCommandCompatibleWithPlayerModel(command, playerModel) {
    var isCommandOperationCompatible = function (operation) {
        var opResult = { ok: true };
        switch (operation.type) {
            case bscore_1.CommandType.GpioOff:
            case bscore_1.CommandType.GpioOn:
            case bscore_1.CommandType.GpioSetState:
                opResult.ok = bscore_1.bscPlayerModelHasFeature(playerModel, bscore_1.ModelFeature.Gpio);
                break;
            case bscore_1.CommandType.SendBpOutput:
                opResult.ok = bscore_1.bscPlayerModelHasFeature(playerModel, bscore_1.ModelFeature.Bp);
                break;
            case bscore_1.CommandType.SerialSendString:
            case bscore_1.CommandType.SerialSendByte:
            case bscore_1.CommandType.SerialSendBytes:
                opResult.ok = bscore_1.bscPlayerModelHasFeature(playerModel, bscore_1.ModelFeature.Serial);
                break;
            case bscore_1.CommandType.SendUdp:
            case bscore_1.CommandType.SendUdpBytes:
            case bscore_1.CommandType.Synchronize:
            case bscore_1.CommandType.InternalSynchronize:
            case bscore_1.CommandType.UpdateDataFeed:
                opResult.ok = bscore_1.bscPlayerModelHasFeature(playerModel, bscore_1.ModelFeature.Networking);
                break;
            case bscore_1.CommandType.SendIRRemote:
            case bscore_1.CommandType.SendProntoIRRemote:
                opResult.ok = bscore_1.bscPlayerModelHasFeature(playerModel, bscore_1.ModelFeature.Usb);
                break;
            case bscore_1.CommandType.BeaconStart:
            case bscore_1.CommandType.BeaconStop:
                opResult.ok = bscore_1.bscPlayerModelHasFeature(playerModel, bscore_1.ModelFeature.Bluetooth);
                break;
        }
        return opResult;
    };
    var result = { ok: true };
    command.operations.some(function (operation) {
        result = isCommandOperationCompatible(operation);
        return !result.ok;
    });
    return result;
}
exports.dmIsCommandCompatibleWithPlayerModel = dmIsCommandCompatibleWithPlayerModel;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmClasses_1 = __webpack_require__(10);
var bsDmEvents_1 = __webpack_require__(19);
var bsDmCommands_1 = __webpack_require__(34);
var selectors_1 = __webpack_require__(6);
var bsDmError_1 = __webpack_require__(4);
var utils_1 = __webpack_require__(3);
var lodash_1 = __webpack_require__(0);
function dmIsEventCompatibleWithSignState(dmState, event) {
    var result = bsDmEvents_1.dmIsEventCompatibleWithPlayerModel(event, selectors_1.dmGetSignPlayerModel(dmState));
    if (result.ok) {
        switch (event.type) {
            case bscore_1.EventType.PluginMessage:
                var pluginItems = selectors_1.dmGetScriptPluginIds(dmState);
                result.ok = !lodash_1.isNil(pluginItems) && pluginItems.length > 0;
                if (!result.ok) {
                    result.error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.pluginEventRequiresDefinedPlugins);
                }
                break;
            case bscore_1.EventType.Gpio:
                var gpioList = selectors_1.dmGetSignGpioList(dmState);
                var buttonNumber = event.data.buttonNumber;
                result.ok = !lodash_1.isNil(buttonNumber) && gpioList[buttonNumber] === bscore_1.GpioType.Input;
                if (!result.ok) {
                    result.error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.gpioEventRequiresGpioInput);
                }
                break;
        }
    }
    return result;
}
exports.dmIsEventCompatibleWithSignState = dmIsEventCompatibleWithSignState;
function dmCanAddEventToMediaState(dmState, event, mediaStateId, targetMediaStateId) {
    var result;
    var mediaState = selectors_1.dmGetMediaStateById(dmState, { id: mediaStateId });
    if (!lodash_1.isNil(mediaState)) {
        result = mediaState.canAddEvent(event);
        if (result.ok && utils_1.isValidBsDmId(targetMediaStateId)) {
            var targetMediaStateState = selectors_1.dmGetMediaStateStateById(dmState, { id: targetMediaStateId });
            if (!lodash_1.isNil(targetMediaStateState)) {
                result = bsDmEvents_1.dmIsEventCompatibleWithTargetContentItem(event, targetMediaStateState.contentItem.type);
            }
            else {
                result = { ok: false, error: new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'CanAddEventToMediaState: invalid targetMediaState ID') };
            }
        }
        if (result.ok) {
            result = dmIsEventCompatibleWithSignState(dmState, event);
        }
    }
    else {
        result = { ok: false, error: new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'CanAddEventToMediaState: invalid mediaState ID') };
    }
    return result;
}
exports.dmCanAddEventToMediaState = dmCanAddEventToMediaState;
function dmCanUpdateEventToMediaState(dmState, newEvent, mediaStateId, eventId, targetMediaStateId) {
    var result;
    var mediaState = selectors_1.dmGetMediaStateById(dmState, { id: mediaStateId });
    if (!lodash_1.isNil(mediaState)) {
        result = mediaState.canUpdateEvent(eventId, newEvent);
        if (result.ok && utils_1.isValidBsDmId(targetMediaStateId)) {
            var targetMediaStateState = selectors_1.dmGetMediaStateStateById(dmState, { id: targetMediaStateId });
            if (!lodash_1.isNil(targetMediaStateState)) {
                result = bsDmEvents_1.dmIsEventCompatibleWithTargetContentItem(newEvent, targetMediaStateState.contentItem.type);
            }
            else {
                result = { ok: false, error: new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'CanUpdateEventToMediaState: invalid targetMediaState ID') };
            }
        }
        if (result.ok) {
            result = dmIsEventCompatibleWithSignState(dmState, newEvent);
        }
    }
    else {
        result = { ok: false, error: new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'CanUpdateEventToMediaState: invalid mediaState ID') };
    }
    return result;
}
exports.dmCanUpdateEventToMediaState = dmCanUpdateEventToMediaState;
function dmCanAddGlobalEventToMediaList(dmState, event, mediaListStateId) {
    var result = { ok: true };
    var mediaState = selectors_1.dmGetMediaStateById(dmState, { id: mediaListStateId });
    if (bsDmClasses_1.dmIsDmcMediaListMediaState(mediaState)) {
        result = mediaState.canAddGlobalEvent(event);
        if (result.ok) {
            result = dmIsEventCompatibleWithSignState(dmState, event);
        }
    }
    else {
        result.ok = false;
        result.error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.eventNotCompatibleWithContentType, 'Global events can be added only to MediaList media states');
    }
    return result;
}
exports.dmCanAddGlobalEventToMediaList = dmCanAddGlobalEventToMediaList;
function dmCanUpdateGlobalEventToMediaList(dmState, newEvent, mediaListStateId, eventId) {
    var result = { ok: true };
    var mediaState = selectors_1.dmGetMediaStateById(dmState, { id: mediaListStateId });
    if (bsDmClasses_1.dmIsDmcMediaListMediaState(mediaState)) {
        result = mediaState.canUpdateGlobalEvent(eventId, newEvent);
        if (result.ok) {
            result = dmIsEventCompatibleWithSignState(dmState, newEvent);
        }
    }
    else {
        result.ok = false;
        result.error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.eventNotCompatibleWithContentType, 'Global events can be updated only on MediaList media states');
    }
    return result;
}
exports.dmCanUpdateGlobalEventToMediaList = dmCanUpdateGlobalEventToMediaList;
function dmIsCommandCompatibleWithSignState(dmState, command) {
    var isCommandOperationCompatible = function (operation) {
        var opResult = { ok: true };
        var gpioList = selectors_1.dmGetSignGpioList(dmState);
        switch (operation.type) {
            case bscore_1.CommandType.GpioOff:
            case bscore_1.CommandType.GpioOn:
                var gpioNumber = operation.data.gpioNumber;
                opResult.ok = !lodash_1.isNil(gpioNumber) && gpioList[gpioNumber] === bscore_1.GpioType.Output;
                if (!result.ok) {
                    opResult.error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.gpioCommandRequiresGpioOutput);
                }
                break;
            case bscore_1.CommandType.GpioSetState:
                opResult.ok = dmIsGpioStateCompatibleWithConfiguration(operation.data.gpioState, gpioList);
                if (!result.ok) {
                    opResult.error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.gpioCommandRequiresGpioOutput);
                }
                break;
        }
        return opResult;
    };
    var result = bsDmCommands_1.dmIsCommandCompatibleWithPlayerModel(command, selectors_1.dmGetSignPlayerModel(dmState));
    if (result.ok) {
        command.operations.some(function (operation) {
            result = isCommandOperationCompatible(operation);
            return !result.ok;
        });
    }
    return result;
}
exports.dmIsCommandCompatibleWithSignState = dmIsCommandCompatibleWithSignState;
function dmCanAddOrUpdateCommand(dmState, command) {
    return dmIsCommandCompatibleWithSignState(dmState, command);
}
exports.dmCanAddOrUpdateCommand = dmCanAddOrUpdateCommand;
function dmIsGpioListCompatibleWithEventsAndCommands(dmState, gpioList) {
    var result = { ok: true };
    selectors_1.dmGetEventIdsForSign(dmState).some(function (id) {
        var eventState = selectors_1.dmGetEventStateById(dmState, { id: id });
        result.ok = eventState.type !== bscore_1.EventType.Gpio
            || gpioList[eventState.data.buttonNumber] === bscore_1.GpioType.Input;
        return !result.ok;
    });
    if (result.ok) {
        result.ok = !selectors_1.dmGetCommandIdsForSign(dmState)
            .some(function (id) {
            return !dmIsCommandCompatibleWithGpioList(selectors_1.dmGetCommandStateById(dmState, { id: id }), gpioList);
        });
    }
    if (!result.ok) {
        result.error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.gpioConfigurationChangeCreatesInvalidEventsOrCommands);
    }
    return result;
}
exports.dmIsGpioListCompatibleWithEventsAndCommands = dmIsGpioListCompatibleWithEventsAndCommands;
function dmIsGpioStateCompatibleWithConfiguration(gpioState, gpioList) {
    var isCompatible = true;
    [0, 1, 2, 3, 4, 5, 6, 7].some(function (gpioNumber) {
        if (((gpioState & (1 << gpioNumber)) !== 0) && gpioList[gpioNumber] !== bscore_1.GpioType.Output) {
            isCompatible = false;
        }
        return !isCompatible;
    });
    return isCompatible;
}
function dmIsCommandCompatibleWithGpioList(command, gpioList) {
    var isCompatible = true;
    if (!lodash_1.isNil(command) && !lodash_1.isNil(gpioList)) {
        command.operations.some(function (operation) {
            if (operation.type === bscore_1.CommandType.GpioOn || operation.type === bscore_1.CommandType.GpioOff) {
                isCompatible = gpioList[operation.data.gpioNumber] === bscore_1.GpioType.Output;
            }
            else if (operation.type === bscore_1.CommandType.GpioSetState) {
                isCompatible =
                    dmIsGpioStateCompatibleWithConfiguration(operation.data.gpioState, gpioList);
            }
            return !isCompatible;
        });
    }
    return isCompatible;
}
function dmGetGpioListIncompatibleEventsAndCommands(dmState, gpioList) {
    var getIncompatibleEventIds = function () {
        return selectors_1.dmGetEventIdsForSign(dmState).filter(function (id) {
            var eventState = selectors_1.dmGetEventStateById(dmState, { id: id });
            return eventState.type === bscore_1.EventType.Gpio
                && gpioList[eventState.data.buttonNumber] !== bscore_1.GpioType.Input;
        });
    };
    var getIncompatibleCommandIds = function () {
        return selectors_1.dmGetCommandIdsForSign(dmState)
            .filter(function (id) {
            return !dmIsCommandCompatibleWithGpioList(selectors_1.dmGetCommandStateById(dmState, { id: id }), gpioList);
        });
    };
    return {
        eventIds: getIncompatibleEventIds(),
        commandIds: getIncompatibleCommandIds(),
    };
}
exports.dmGetGpioListIncompatibleEventsAndCommands = dmGetGpioListIncompatibleEventsAndCommands;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmClasses_1 = __webpack_require__(10);
var selectorValidation_1 = __webpack_require__(32);
var bsDmError_1 = __webpack_require__(4);
var lodash_1 = __webpack_require__(0);
function dmGetCommandById(state, props) {
    var commandState = state.commands.commandsById[props.id];
    return lodash_1.isNil(commandState) ? null : new bsDmClasses_1.DmcCommand(commandState);
}
exports.dmGetCommandById = dmGetCommandById;
function dmGetCommandStateById(state, props) {
    var commandState = state.commands.commandsById[props.id];
    return lodash_1.isNil(commandState) ? null : commandState;
}
exports.dmGetCommandStateById = dmGetCommandStateById;
function dmGetCommandSequenceIdForParentAndType(state, props) {
    var sequences = state.commands.sequencesById;
    var sequenceId = lodash_1.find(Object.keys(sequences), function (id) {
        var sequence = sequences[id];
        return sequence.type === props.type && sequence.parentId === props.id;
    });
    return lodash_1.isNil(sequenceId) ? null : sequenceId;
}
exports.dmGetCommandSequenceIdForParentAndType = dmGetCommandSequenceIdForParentAndType;
function dmGetCommandSequenceStateById(state, props) {
    var commandSequence = state.commands.sequencesById[props.id];
    return lodash_1.isNil(commandSequence) ? null : commandSequence;
}
exports.dmGetCommandSequenceStateById = dmGetCommandSequenceStateById;
function dmGetCommandSequenceStateForParentAndType(state, props) {
    var sequences = state.commands.sequencesById;
    var sequenceId = lodash_1.find(Object.keys(sequences), function (id) {
        var testSequence = sequences[id];
        return testSequence.type === props.type && testSequence.parentId === props.id;
    });
    return lodash_1.isNil(sequenceId) ? null : sequences[sequenceId];
}
exports.dmGetCommandSequenceStateForParentAndType = dmGetCommandSequenceStateForParentAndType;
function dmGetEntryCommandIdsForMediaState(state, props) {
    var sequence = dmGetCommandSequenceStateForParentAndType(state, { id: props.id, type: bscore_1.CommandSequenceType.StateEntry });
    return lodash_1.isNil(sequence) ? [] : sequence.sequence;
}
exports.dmGetEntryCommandIdsForMediaState = dmGetEntryCommandIdsForMediaState;
function dmGetExitCommandIdsForMediaState(state, props) {
    var sequence = dmGetCommandSequenceStateForParentAndType(state, { id: props.id, type: bscore_1.CommandSequenceType.StateExit });
    return lodash_1.isNil(sequence) ? [] : sequence.sequence;
}
exports.dmGetExitCommandIdsForMediaState = dmGetExitCommandIdsForMediaState;
function dmGetSequenceItemNextCommandIdsForMediaState(state, props) {
    var sequence = dmGetCommandSequenceStateForParentAndType(state, { id: props.id, type: bscore_1.CommandSequenceType.SequenceItemNext });
    return lodash_1.isNil(sequence) ? [] : sequence.sequence;
}
exports.dmGetSequenceItemNextCommandIdsForMediaState = dmGetSequenceItemNextCommandIdsForMediaState;
function dmGetSequenceItemPreviousCommandIdsForMediaState(state, props) {
    var sequence = dmGetCommandSequenceStateForParentAndType(state, { id: props.id, type: bscore_1.CommandSequenceType.SequenceItemPrevious });
    return lodash_1.isNil(sequence) ? [] : sequence.sequence;
}
exports.dmGetSequenceItemPreviousCommandIdsForMediaState = dmGetSequenceItemPreviousCommandIdsForMediaState;
function dmCommandIdsForEvent(state, props) {
    var sequence = dmGetCommandSequenceStateForParentAndType(state, { id: props.id, type: bscore_1.CommandSequenceType.Event });
    return lodash_1.isNil(sequence) ? [] : sequence.sequence;
}
exports.dmCommandIdsForEvent = dmCommandIdsForEvent;
function dmCommandIdsForTransition(state, props) {
    var sequence = dmGetCommandSequenceStateForParentAndType(state, { id: props.id, type: bscore_1.CommandSequenceType.Transition });
    return lodash_1.isNil(sequence) ? [] : sequence.sequence;
}
exports.dmCommandIdsForTransition = dmCommandIdsForTransition;
function dmValidateCommand(state, props) {
    var entityDetails = { entityType: bsDmInterfaces_1.DmEntityType.Command, entityId: props.id };
    var result = bsDmError_1.dmInitializeValidationResult(bsDmInterfaces_1.DmEntityType.Command, props.id);
    var validateParameterizedString = function (paramString, entityProperty, cannotBeEmpty) {
        if (cannotBeEmpty === void 0) { cannotBeEmpty = true; }
        var error = selectorValidation_1.dmValidateEntityParameterizedString(state, paramString, __assign({}, entityDetails, { entityProperty: entityProperty }), cannotBeEmpty);
        if (!lodash_1.isNil(error)) {
            result.errorList.push(error);
        }
    };
    var validateParameterizedNumber = function (paramNumber, entityProperty) {
        var error = selectorValidation_1.dmValidateEntityParameterizedNumber(state, paramNumber, __assign({}, entityDetails, { entityProperty: entityProperty }));
        if (!lodash_1.isNil(error)) {
            result.errorList.push(error);
        }
    };
    var validateUserVariableId = function (userVariableId, entityProperty) {
        var error = selectorValidation_1.dmValidateUserVariableId(state, userVariableId, __assign({}, entityDetails, { entityProperty: entityProperty }));
        if (!lodash_1.isNil(error)) {
            result.errorList.push(error);
        }
    };
    var validateCecString = function (cecString, entityProperty) {
        var error = selectorValidation_1.dmValidateEntityParameterizedHexString(state, cecString, __assign({}, entityDetails, { entityProperty: entityProperty }));
        if (!lodash_1.isNil(error)) {
            result.errorList.push(error);
        }
    };
    var command = dmGetCommandById(state, props);
    if (!lodash_1.isNil(command)) {
        command.operations.forEach(function (op) {
            switch (op.type) {
                case bscore_1.CommandType.SendZoneMessage:
                case bscore_1.CommandType.SendUdp:
                case bscore_1.CommandType.SendUdpBytes:
                case bscore_1.CommandType.SendIRRemote:
                case bscore_1.CommandType.SendProntoIRRemote:
                case bscore_1.CommandType.Synchronize:
                case bscore_1.CommandType.InternalSynchronize:
                case bscore_1.CommandType.SendPluginMessage:
                case bscore_1.CommandType.SerialSendString:
                case bscore_1.CommandType.SerialSendByte:
                case bscore_1.CommandType.SerialSendBytes: {
                    validateParameterizedString(op.data.messageData, op.type + '.messageData');
                    break;
                }
                case bscore_1.CommandType.SetVariable:
                    validateParameterizedString(op.data.userVariableValue, op.type + '.userVariableValue', true);
                case bscore_1.CommandType.IncrementVariable:
                case bscore_1.CommandType.DecrementVariable:
                case bscore_1.CommandType.ResetVariable: {
                    validateUserVariableId(op.data.userVariableId, op.type + 'userVariableId');
                    break;
                }
                case bscore_1.CommandType.BeaconStart:
                case bscore_1.CommandType.BeaconStop: {
                    validateParameterizedString(op.data.beaconName, op.type + '.beaconName');
                    break;
                }
                case bscore_1.CommandType.SwitchPresentation: {
                    var presentationName = op.data.presentationName;
                    var presentationUvId = op.data.userVariableId;
                    if (!lodash_1.isNil(presentationName)) {
                        validateParameterizedString(presentationName, op.type + '.presentationName');
                    }
                    else if (!lodash_1.isNil(presentationUvId)) {
                        validateUserVariableId(presentationUvId, op.type + 'userVariableId');
                    }
                    else {
                        result.errorList.push(selectorValidation_1.dmGetEntityError(bsDmError_1.DmErrorType.switchPresentationTargetNotSpecified, __assign({}, entityDetails, { entityProperty: op.type })));
                    }
                    break;
                }
                case bscore_1.CommandType.SetConnectorVolume:
                case bscore_1.CommandType.IncrementConnectorVolume:
                case bscore_1.CommandType.DecrementConnectorVolume:
                case bscore_1.CommandType.SetZoneVolume:
                case bscore_1.CommandType.IncrementZoneVolume:
                case bscore_1.CommandType.DecrementZoneVolume:
                case bscore_1.CommandType.SetZoneChannelVolume:
                case bscore_1.CommandType.IncrementZoneChannelVolume:
                case bscore_1.CommandType.DecrementZoneChannelVolume:
                case bscore_1.CommandType.CecPhilipsSetVolume: {
                    validateParameterizedNumber(op.data.volume, op.type + '.volume');
                    break;
                }
                case bscore_1.CommandType.CecSendString: {
                    validateCecString(op.data.hexString, op.type + '.hexString');
                    break;
                }
                case bscore_1.CommandType.Pause: {
                    validateParameterizedNumber(op.data.pauseTime, 'Pause.pauseTime');
                    break;
                }
                case bscore_1.CommandType.SendWss: {
                    var wssParameters = op.data.wssParameters;
                    if (!lodash_1.isNil(wssParameters)) {
                        wssParameters.forEach(function (paramString, index) {
                            validateParameterizedString(paramString, 'SendWss.param[' + index + ']');
                        });
                    }
                    break;
                }
            }
        });
    }
    result.ok = result.errorList.length === 0;
    return result;
}
exports.dmValidateCommand = dmValidateCommand;
function dmGetCommandStatesForMediaState(state, props) {
    var getCommandForId = function (id) {
        return state.commands.commandsById[id];
    };
    var sequences = state.commands.sequencesById;
    var entrySequence = null;
    var exitSequence = null;
    Object.keys(sequences).some(function (id) {
        var testSequence = sequences[id];
        if (testSequence.parentId === props.id) {
            if (testSequence.type === bscore_1.CommandSequenceType.StateEntry) {
                entrySequence = testSequence;
                return exitSequence != null;
            }
            else if (testSequence.type === bscore_1.CommandSequenceType.StateExit) {
                exitSequence = testSequence;
                return entrySequence != null;
            }
        }
        return false;
    });
    return {
        entry: lodash_1.isNil(entrySequence) ? [] : entrySequence.sequence.map(getCommandForId),
        exit: lodash_1.isNil(exitSequence) ? [] : exitSequence.sequence.map(getCommandForId),
    };
}
exports.dmGetCommandStatesForMediaState = dmGetCommandStatesForMediaState;
function dmGetCommandStatesForParentAndType(state, props) {
    var getCommandForId = function (id) {
        return state.commands.commandsById[id];
    };
    var sequences = state.commands.sequencesById;
    var commandSequenceId = lodash_1.find(Object.keys(sequences), function (id) {
        var testSequence = sequences[id];
        return testSequence.type === props.type && testSequence.parentId === props.id;
    });
    return lodash_1.isNil(commandSequenceId) ? [] : sequences[commandSequenceId].sequence.map(getCommandForId);
}
exports.dmGetCommandStatesForParentAndType = dmGetCommandStatesForParentAndType;
function dmGetCommandIdsForSign(state) {
    return Object.keys(state.commands.commandsById);
}
exports.dmGetCommandIdsForSign = dmGetCommandIdsForSign;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bsDmInterfaces_1 = __webpack_require__(2);
var bscore_1 = __webpack_require__(1);
var bsDmParameterizedStrings_1 = __webpack_require__(14);
var bsDmParameterizedNumbers_1 = __webpack_require__(25);
var bsDmClasses_1 = __webpack_require__(10);
var bsDmContentItems_1 = __webpack_require__(13);
var bsDmDataFeed_1 = __webpack_require__(18);
var bsDmLiveText_1 = __webpack_require__(28);
var utils_1 = __webpack_require__(3);
var reselect_1 = __webpack_require__(24);
var lodash_1 = __webpack_require__(0);
function dmGetUserVariableById(state, props) {
    var userVariableState = state.userVariables.variablesById[props.id];
    return lodash_1.isNil(userVariableState) ? null : new bsDmClasses_1.DmcUserVariable(userVariableState);
}
exports.dmGetUserVariableById = dmGetUserVariableById;
function dmGetUserVariableStateById(state, props) {
    var userVariableState = state.userVariables.variablesById[props.id];
    return lodash_1.isNil(userVariableState) ? null : userVariableState;
}
exports.dmGetUserVariableStateById = dmGetUserVariableStateById;
function dmGetUserVariableIdsForSign(state) {
    return state.userVariables.sequence;
}
exports.dmGetUserVariableIdsForSign = dmGetUserVariableIdsForSign;
function dmGetUserVariableIdForName(state, props) {
    var userVariables = state.userVariables.variablesById;
    var uvId = lodash_1.find(Object.keys(userVariables), function (id) { return userVariables[id].name === props.name; });
    return lodash_1.isNil(uvId) ? null : uvId;
}
exports.dmGetUserVariableIdForName = dmGetUserVariableIdForName;
function dmGetUserVariableByName(state, props) {
    var userVariables = state.userVariables.variablesById;
    var uvId = lodash_1.find(Object.keys(userVariables), function (id) { return userVariables[id].name === props.name; });
    return lodash_1.isNil(uvId) ? null : new bsDmClasses_1.DmcUserVariable(userVariables[uvId]);
}
exports.dmGetUserVariableByName = dmGetUserVariableByName;
function dmGetDisplayStringFromParameterizedString(state, props) {
    var userVariables = state.userVariables.variablesById;
    var ps = props.paramString;
    var returnString = '';
    if (typeof ps === 'object' && ps.params && ps.params.length) {
        ps.params.forEach(function (param) {
            if (param.type === bscore_1.StringParameterType.UserVariable) {
                var userVar = userVariables[param.value];
                var userVarName = userVar ? userVar.name : '<undefined>';
                returnString = returnString + bsDmParameterizedStrings_1.dmGetPsUvStartDelimiter() + userVarName + bsDmParameterizedStrings_1.dmGetPsUvEndDelimiter();
            }
            else if (param.type === bscore_1.StringParameterType.UserVariableName) {
                returnString = returnString + bsDmParameterizedStrings_1.dmGetPsUvStartDelimiter() + param.value + bsDmParameterizedStrings_1.dmGetPsUvEndDelimiter();
            }
            else {
                returnString = returnString + param.value;
            }
        });
    }
    return returnString;
}
exports.dmGetDisplayStringFromParameterizedString = dmGetDisplayStringFromParameterizedString;
function dmGetParameterizedStringFromDisplayString(state, props) {
    var displayString = props.value;
    var returnPs = bsDmParameterizedStrings_1.dmGetEmptyParameterizedString();
    var re = new RegExp('(.*?)' + bsDmParameterizedStrings_1.dmGetPsUvStartDelimiter() + '(.*?)' + bsDmParameterizedStrings_1.dmGetPsUvEndDelimiter(), 'g');
    var res;
    var lastIndex = 0;
    while (res = re.exec(displayString)) {
        if (res[1]) {
            bsDmParameterizedStrings_1.dmAppendStringToParameterizedString(returnPs, res[1]);
        }
        if (res[2]) {
            var uvId = dmGetUserVariableIdForName(state, { name: res[2] });
            if (uvId) {
                bsDmParameterizedStrings_1.dmAppendUserVariableToParameterizedString(returnPs, uvId);
            }
            else {
                bsDmParameterizedStrings_1.dmAppendUserVariableNameToParameterizedString(returnPs, res[2]);
            }
        }
        lastIndex = re.lastIndex;
    }
    if (lastIndex < displayString.length) {
        bsDmParameterizedStrings_1.dmAppendStringToParameterizedString(returnPs, displayString.substr(lastIndex));
    }
    return returnPs;
}
exports.dmGetParameterizedStringFromDisplayString = dmGetParameterizedStringFromDisplayString;
function dmGetDisplayStringFromParameterizedNumber(state, props) {
    var userVariables = state.userVariables.variablesById;
    var pn = props.paramNumber;
    var returnString = '';
    if (typeof pn === 'object' && pn.hasOwnProperty('value') && pn.hasOwnProperty('type')) {
        if (pn.type === bscore_1.StringParameterType.UserVariable) {
            var userVar = userVariables[pn.value];
            var userVarName = userVar ? userVar.name : '<undefined>';
            returnString = bsDmParameterizedStrings_1.dmGetPsUvStartDelimiter() + userVarName + bsDmParameterizedStrings_1.dmGetPsUvEndDelimiter();
        }
        else if (pn.type === bscore_1.StringParameterType.UserVariableName) {
            returnString = bsDmParameterizedStrings_1.dmGetPsUvStartDelimiter() + pn.value + bsDmParameterizedStrings_1.dmGetPsUvEndDelimiter();
        }
        else {
            returnString = returnString + pn.value;
        }
    }
    return returnString;
}
exports.dmGetDisplayStringFromParameterizedNumber = dmGetDisplayStringFromParameterizedNumber;
function dmGetParameterizedNumberFromDisplayString(state, props) {
    var displayString = props.value;
    var re = new RegExp(bsDmParameterizedStrings_1.dmGetPsUvStartDelimiter() + '(.*?)' + bsDmParameterizedStrings_1.dmGetPsUvEndDelimiter(), 'g');
    var res = re.exec(displayString);
    if (res && res[1]) {
        var uvId = dmGetUserVariableIdForName(state, { name: res[1] });
        if (uvId) {
            return bsDmParameterizedNumbers_1.dmGetParameterizedNumberFromUserVariable(uvId);
        }
        else {
            return bsDmParameterizedNumbers_1.dmGetParameterizedNumberFromUserVariableName(res[1]);
        }
    }
    var value = parseInt(displayString, 10);
    return bsDmParameterizedNumbers_1.dmGetParameterizedNumberFromNumber(isNaN(value) ? 0 : value);
}
exports.dmGetParameterizedNumberFromDisplayString = dmGetParameterizedNumberFromDisplayString;
function dmGetActiveUserVariableIds(state) {
    var getActiveUserVariableIds = reselect_1.createSelector(function (dmState) { return dmState; }, function (dmState) { return dmState.htmlSites; }, function (dmState) { return dmState.dataFeeds.sourcesById; }, function (dmState) { return dmState.mediaStates.mediaStatesById; }, function (dmState) { return dmState.events; }, function (dmState) { return dmState.transitions.transitionsById; }, function (dmState) { return dmState.commands.commandsById; }, function (dmState) { return dmState.liveText.itemsById; }, function (dmState) { return dmState.userVariables.variablesById; }, function (dmState, htmlSites, dataFeedSources, mediaStates, events, transitions, commands, liveTextItems, userVariables) {
        var result = new Set();
        var addDirectUserVariableId = function (userVariableId) {
            if (utils_1.isValidGuidBsDmId(userVariableId)) {
                result.add(userVariableId);
            }
        };
        var addUserVariableIdsFromParameterizedString = function (paramString) {
            if (!lodash_1.isNil(paramString)) {
                var dmps = dmResolveParameterizedStringUserVariables(dmState, { paramString: paramString });
                dmps.params.forEach(function (comp) {
                    if (comp.type === bscore_1.StringParameterType.UserVariable) {
                        result.add(comp.value);
                    }
                });
            }
        };
        var addUserVariableIdsFromParameterizedNumber = function (paramNumber) {
            if (!lodash_1.isNil(paramNumber)) {
                var dmpn = dmResolveParameterizedNumberUserVariables(dmState, { paramNumber: paramNumber });
                if (dmpn.type === bscore_1.NumberParameterType.UserVariable) {
                    result.add(dmpn.value);
                }
            }
        };
        Object.keys(htmlSites).forEach(function (htmlSiteId) {
            var htmlSiteState = htmlSites[htmlSiteId];
            if (htmlSiteState.type === bscore_1.HtmlSiteType.Remote) {
                addUserVariableIdsFromParameterizedString(htmlSiteState.url);
            }
            addUserVariableIdsFromParameterizedString(htmlSiteState.queryString);
        });
        Object.keys(dataFeedSources).forEach(function (feedSourceId) {
            var dataFeedSource = dataFeedSources[feedSourceId];
            if (bsDmDataFeed_1.dmIsDataFeedSourceRemoteDataFeed(dataFeedSource)) {
                addUserVariableIdsFromParameterizedString(dataFeedSource.url);
            }
        });
        Object.keys(mediaStates).forEach(function (mediaStateId) {
            var mediaState = mediaStates[mediaStateId];
            if (bsDmContentItems_1.dmContentItemIsStreamContentItem(mediaState.contentItem)) {
                addUserVariableIdsFromParameterizedString(mediaState.contentItem.url);
            }
        });
        Object.keys(events).forEach(function (eventId) {
            var event = events[eventId];
            if (event.type === bscore_1.EventType.Udp || event.type === bscore_1.EventType.PluginMessage || event.type === bscore_1.EventType.Serial) {
                addDirectUserVariableId(event.data.userVariableToAssignInput);
                addDirectUserVariableId(event.data.userVariableToAssignWildcard);
            }
            else if (event.type === bscore_1.EventType.TimeClock
                && event.data.type === bsDmInterfaces_1.DmTimeClockEventType.ByUserVariable) {
                addDirectUserVariableId(event.data.userVariableId);
            }
            else if (event.type === bscore_1.EventType.WssEvent) {
                var wssEventData = event.data;
                if (!lodash_1.isNil(wssEventData.wssEventSpec)) {
                    wssEventData.wssEventSpec.eventProperties.forEach(function (spec) {
                        if (bsDmParameterizedStrings_1.dmIsValidParameterizedString(spec.parameterValue)) {
                            addUserVariableIdsFromParameterizedString(spec.parameterValue);
                        }
                    });
                }
            }
        });
        Object.keys(transitions).forEach(function (transitionId) {
            var transition = transitions[transitionId];
            if (!lodash_1.isNil(transition.condition)) {
                addDirectUserVariableId(transition.condition.userVariableId);
                addUserVariableIdsFromParameterizedString(transition.condition.compareValue1);
                addUserVariableIdsFromParameterizedString(transition.condition.compareValue2);
            }
        });
        Object.keys(commands).forEach(function (commandId) {
            var command = commands[commandId];
            command.operations.forEach(function (op) {
                switch (op.type) {
                    case bscore_1.CommandType.SendZoneMessage:
                    case bscore_1.CommandType.SendUdp:
                    case bscore_1.CommandType.SendUdpBytes:
                    case bscore_1.CommandType.SendIRRemote:
                    case bscore_1.CommandType.SendProntoIRRemote:
                    case bscore_1.CommandType.CecSendString:
                    case bscore_1.CommandType.Synchronize:
                    case bscore_1.CommandType.InternalSynchronize:
                    case bscore_1.CommandType.SendPluginMessage:
                    case bscore_1.CommandType.SerialSendString:
                    case bscore_1.CommandType.SerialSendByte:
                    case bscore_1.CommandType.SerialSendBytes: {
                        addUserVariableIdsFromParameterizedString(op.data.messageData);
                        break;
                    }
                    case bscore_1.CommandType.SetVariable:
                        addUserVariableIdsFromParameterizedString(op.data.userVariableValue);
                    case bscore_1.CommandType.IncrementVariable:
                    case bscore_1.CommandType.DecrementVariable:
                    case bscore_1.CommandType.ResetVariable: {
                        addDirectUserVariableId(op.data.userVariableId);
                        break;
                    }
                    case bscore_1.CommandType.BeaconStart:
                    case bscore_1.CommandType.BeaconStop: {
                        addUserVariableIdsFromParameterizedString(op.data.beaconName);
                        break;
                    }
                    case bscore_1.CommandType.SwitchPresentation: {
                        addUserVariableIdsFromParameterizedString(op.data.presentationName);
                        addDirectUserVariableId(op.data.userVariableId);
                        break;
                    }
                    case bscore_1.CommandType.SetConnectorVolume:
                    case bscore_1.CommandType.IncrementConnectorVolume:
                    case bscore_1.CommandType.DecrementConnectorVolume:
                    case bscore_1.CommandType.SetZoneVolume:
                    case bscore_1.CommandType.IncrementZoneVolume:
                    case bscore_1.CommandType.DecrementZoneVolume:
                    case bscore_1.CommandType.SetZoneChannelVolume:
                    case bscore_1.CommandType.IncrementZoneChannelVolume:
                    case bscore_1.CommandType.DecrementZoneChannelVolume:
                    case bscore_1.CommandType.CecPhilipsSetVolume: {
                        addUserVariableIdsFromParameterizedNumber(op.data.volume);
                        break;
                    }
                    case bscore_1.CommandType.Pause: {
                        addUserVariableIdsFromParameterizedNumber(op.data.pauseTime);
                        break;
                    }
                    case bscore_1.CommandType.SendWss: {
                        var wssParameters = op.data.wssParameters;
                        if (!lodash_1.isNil(wssParameters)) {
                            wssParameters.forEach(addUserVariableIdsFromParameterizedString);
                        }
                        break;
                    }
                }
            });
        });
        Object.keys(liveTextItems).forEach(function (itemId) {
            var liveTextItem = liveTextItems[itemId];
            if (bsDmLiveText_1.dmIsLiveTextDataUserVariable(liveTextItem)) {
                addDirectUserVariableId(liveTextItem.userVariableIdOrName);
            }
            else if (bsDmLiveText_1.dmIsLiveTextDataTitledDataFeed(liveTextItem)) {
                addUserVariableIdsFromParameterizedString(liveTextItem.title);
            }
            else if (bsDmLiveText_1.dmIsLiveTextDataIndexedDataFeed(liveTextItem)) {
                addUserVariableIdsFromParameterizedNumber(liveTextItem.index);
            }
        });
        Object.keys(userVariables).forEach(function (uvId) {
            var userVariable = userVariables[uvId];
            addUserVariableIdsFromParameterizedString(userVariable.defaultValue);
        });
        return Array.from(result);
    });
    return getActiveUserVariableIds(state);
}
exports.dmGetActiveUserVariableIds = dmGetActiveUserVariableIds;
function dmResolveParameterizedStringUserVariables(state, props) {
    var ps = props.paramString;
    if (lodash_1.isNil(ps)) {
        return bsDmParameterizedStrings_1.dmGetEmptyParameterizedString();
    }
    if (bsDmParameterizedStrings_1.dmAreParameterizedStringUserVariablesResolved(ps).ok) {
        return ps;
    }
    var returnPs = bsDmParameterizedStrings_1.dmGetEmptyParameterizedString();
    ps.params.forEach(function (param) {
        if (param.type === bscore_1.StringParameterType.UserVariable) {
            bsDmParameterizedStrings_1.dmAppendUserVariableToParameterizedString(returnPs, param.value);
        }
        else if (param.type === bscore_1.StringParameterType.UserVariableName) {
            var uvId = dmGetUserVariableIdForName(state, { name: param.value });
            if (!lodash_1.isNil(uvId)) {
                bsDmParameterizedStrings_1.dmAppendUserVariableToParameterizedString(returnPs, uvId);
            }
            else {
                bsDmParameterizedStrings_1.dmAppendUserVariableNameToParameterizedString(returnPs, param.value);
            }
        }
        else {
            bsDmParameterizedStrings_1.dmAppendStringToParameterizedString(returnPs, param.value);
        }
    });
    return returnPs;
}
exports.dmResolveParameterizedStringUserVariables = dmResolveParameterizedStringUserVariables;
function dmAreParameterizedStringUserVariablesValid(state, props) {
    var ps = props.paramString;
    if (!lodash_1.isNil(ps)) {
        var isValid_1 = true;
        ps.params.some(function (param) {
            if (param.type === bscore_1.StringParameterType.UserVariableName) {
                var uvId = dmGetUserVariableIdForName(state, { name: param.value });
                if (lodash_1.isNil(uvId)) {
                    isValid_1 = false;
                    return true;
                }
            }
            return false;
        });
        return isValid_1;
    }
    return false;
}
exports.dmAreParameterizedStringUserVariablesValid = dmAreParameterizedStringUserVariablesValid;
function dmResolveParameterizedNumberUserVariables(state, props) {
    var pn = props.paramNumber;
    if (lodash_1.isNil(pn)) {
        return bsDmParameterizedNumbers_1.dmGetParameterizedNumberFromNumber(0);
    }
    if (bsDmParameterizedNumbers_1.dmIsParameterizedNumberUserVariableResolved(pn).ok) {
        return pn;
    }
    var uvId = dmGetUserVariableIdForName(state, { name: pn.value });
    if (!lodash_1.isNil(uvId)) {
        return bsDmParameterizedNumbers_1.dmGetParameterizedNumberFromUserVariable(uvId);
    }
    return pn;
}
exports.dmResolveParameterizedNumberUserVariables = dmResolveParameterizedNumberUserVariables;
function dmIsParameterizedNumberUserVariableValid(state, props) {
    var pn = props.paramNumber;
    if (!lodash_1.isNil(pn)) {
        var isValid = true;
        if (pn.type === bscore_1.NumberParameterType.UserVariableName) {
            var uvId = dmGetUserVariableIdForName(state, { name: pn.value });
            isValid = !lodash_1.isNil(uvId);
        }
        return isValid;
    }
    return false;
}
exports.dmIsParameterizedNumberUserVariableValid = dmIsParameterizedNumberUserVariableValid;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var lodash_1 = __webpack_require__(0);
function dmHtmlSiteIsHostedHtmlSite(htmlSite) {
    return !lodash_1.isNil(htmlSite) && htmlSite.type === bscore_1.HtmlSiteType.Hosted;
}
exports.dmHtmlSiteIsHostedHtmlSite = dmHtmlSiteIsHostedHtmlSite;
function dmHtmlSiteIsRemoteHtmlSite(htmlSite) {
    return !lodash_1.isNil(htmlSite) && htmlSite.type === bscore_1.HtmlSiteType.Remote;
}
exports.dmHtmlSiteIsRemoteHtmlSite = dmHtmlSiteIsRemoteHtmlSite;


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmState_1 = __webpack_require__(5);
var bsDmError_1 = __webpack_require__(4);
var selectors_1 = __webpack_require__(6);
var utils_1 = __webpack_require__(3);
var lodash_1 = __webpack_require__(0);
function dmCheckScriptPluginValidity(state, pluginId) {
    var dmState = bsDmState_1.dmFilterDmState(state);
    var plugin = selectors_1.dmGetScriptPluginStateById(dmState, { id: pluginId });
    var error = checkBasicScriptPluginData(dmState, plugin);
    if (lodash_1.isNull(error)) {
        var assetItem = selectors_1.dmGetAssetItemById(dmState, { id: plugin.assetId });
        error = dmCheckNewScriptPluginFileValidity(dmState, assetItem, plugin.assetId);
    }
    return error;
}
exports.dmCheckScriptPluginValidity = dmCheckScriptPluginValidity;
function dmCheckParserPluginValidity(state, pluginId) {
    var dmState = bsDmState_1.dmFilterDmState(state);
    var plugin = selectors_1.dmGetParserPluginStateById(dmState, { id: pluginId });
    var error = checkBasicScriptPluginData(dmState, plugin);
    if (!error) {
        if (!(plugin.parseFeedFunctionName || plugin.parseUVFunctionName || plugin.parseUVFunctionName)) {
            error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'At least one function must be defined in parser plugin');
        }
    }
    if (!error) {
        var assetItem = selectors_1.dmGetAssetItemById(dmState, { id: plugin.assetId });
        error = dmCheckNewScriptPluginFileValidity(dmState, assetItem, plugin.assetId);
    }
    if (!error) {
        error = dmCheckNewParserPluginFunctionValidity(dmState, plugin.parseFeedFunctionName, plugin.parseUVFunctionName, plugin.userAgentFunctionName, pluginId);
    }
    return error;
}
exports.dmCheckParserPluginValidity = dmCheckParserPluginValidity;
function checkBasicScriptPluginData(dmState, plugin) {
    if (lodash_1.isNil(plugin)) {
        return new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'The plugin does not exist');
    }
    if (!plugin.name || typeof plugin.name !== 'string') {
        return new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'The plugin name is invalid');
    }
    if (!utils_1.isValidBsDmId(plugin.assetId)) {
        return new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'The plugin asset ID is invalid');
    }
    var assetItem = selectors_1.dmGetAssetItemById(dmState, { id: plugin.assetId });
    if (!assetItem) {
        return new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.unexpectedError, 'The asset ID was not found in the asset map');
    }
    return null;
}
function dmCheckNewScriptPluginFileValidity(state, newPluginAssetItem, ignoreId) {
    var error = null;
    if (!lodash_1.isNil(newPluginAssetItem)) {
        if (newPluginAssetItem.assetType !== bscore_1.AssetType.BrightScript) {
            error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'CheckNewScriptPluginFileValidity: A BrightScript file asset must be specified');
        }
        else {
            var dmState_1 = bsDmState_1.dmFilterDmState(state);
            var scriptPluginAssetIds = selectors_1.dmGetScriptPluginAssetIds(dmState_1);
            var parserPluginAssetIds = selectors_1.dmGetParserPluginAssetIds(dmState_1);
            var pluginAssetIds = scriptPluginAssetIds.concat(parserPluginAssetIds);
            pluginAssetIds.some(function (id) {
                if (!(ignoreId && id === ignoreId)) {
                    var assetItem = selectors_1.dmGetAssetItemById(dmState_1, { id: id });
                    if (assetItem && assetItem.name.toUpperCase() === newPluginAssetItem.name.toUpperCase()) {
                        error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.pluginNameInUse, newPluginAssetItem.name);
                        return true;
                    }
                }
                return false;
            });
        }
    }
    else {
        error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'CheckNewScriptPluginFileValidity: Plugin assetItem is not valid');
    }
    return error;
}
exports.dmCheckNewScriptPluginFileValidity = dmCheckNewScriptPluginFileValidity;
function dmCheckNewParserPluginFunctionValidity(state, parseFeedFunctionName, parseUVFunctionName, userAgentFunctionName, ignoreParserPluginId) {
    if (parseFeedFunctionName === void 0) { parseFeedFunctionName = null; }
    if (parseUVFunctionName === void 0) { parseUVFunctionName = null; }
    if (userAgentFunctionName === void 0) { userAgentFunctionName = null; }
    var error = null;
    var dmState = bsDmState_1.dmFilterDmState(state);
    var functionNames = [];
    var parserPluginIds = selectors_1.dmGetParserPluginIds(dmState);
    parserPluginIds.forEach(function (id) {
        if (!(ignoreParserPluginId && id === ignoreParserPluginId)) {
            var plugin = selectors_1.dmGetParserPluginStateById(dmState, { id: id });
            if (!lodash_1.isNil(plugin)) {
                if (plugin.parseFeedFunctionName) {
                    functionNames.push(plugin.parseFeedFunctionName.toUpperCase());
                }
                if (plugin.parseUVFunctionName) {
                    functionNames.push(plugin.parseUVFunctionName.toUpperCase());
                }
                if (plugin.userAgentFunctionName) {
                    functionNames.push(plugin.userAgentFunctionName.toUpperCase());
                }
            }
        }
    });
    if (parseFeedFunctionName && functionNames.indexOf(parseFeedFunctionName.toUpperCase()) >= 0) {
        error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.parserPluginFunctionNameInUse, parseFeedFunctionName);
    }
    else if (parseUVFunctionName && functionNames.indexOf(parseUVFunctionName.toUpperCase()) >= 0) {
        error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.parserPluginFunctionNameInUse, parseUVFunctionName);
    }
    else if (userAgentFunctionName && functionNames.indexOf(userAgentFunctionName.toUpperCase()) >= 0) {
        error = new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.parserPluginFunctionNameInUse, userAgentFunctionName);
    }
    return error;
}
exports.dmCheckNewParserPluginFunctionValidity = dmCheckNewParserPluginFunctionValidity;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmState_1 = __webpack_require__(5);
var actionBase_1 = __webpack_require__(8);
var actionAssetHelper_1 = __webpack_require__(11);
var actionAssetMap_1 = __webpack_require__(9);
var bsDmInterfaces_1 = __webpack_require__(2);
var utils_1 = __webpack_require__(3);
var bsDmError_1 = __webpack_require__(4);
var selectors_1 = __webpack_require__(6);
var lodash_1 = __webpack_require__(0);
exports.PUT_AUX_FILE = 'DM_PUT_AUX_FILE';
exports.UPDATE_AUX_FILE = 'DM_UPDATE_AUX_FILE';
exports.REMOVE_AUX_FILES = 'DM_REMOVE_AUX_FILES';
function dmPutAuxiliaryFile(name, assetItem, validate) {
    if (validate === void 0) { validate = true; }
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.PUT_AUX_FILE,
            payload: {
                id: utils_1.newBsDmId(),
                name: name != null ? name : '',
                assetId: bsDmInterfaces_1.BsDmIdNone,
            },
        };
        if (validate) {
            if (!name) {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'File component name cannot be empty');
            }
        }
        var batchedActions = [];
        if (bscore_1.bscIsAssetItem(assetItem)) {
            var dmState = bsDmState_1.dmFilterDmState(getState());
            var preparedAssetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, assetItem, mainAction);
            var assetAction = actionAssetMap_1.dmPutAssetItem(preparedAssetItem);
            batchedActions.push(assetAction);
            mainAction.payload.assetId = preparedAssetItem.id;
        }
        else if (validate) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'File AssetItem is not valid');
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmPutAuxiliaryFile = dmPutAuxiliaryFile;
function dmPutAuxiliaryFileWithoutValidation(name, assetItem) {
    return dmPutAuxiliaryFile(name, assetItem, false);
}
exports.dmPutAuxiliaryFileWithoutValidation = dmPutAuxiliaryFileWithoutValidation;
function dmUpdateAuxiliaryFile(params, validate) {
    if (validate === void 0) { validate = true; }
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.UPDATE_AUX_FILE,
            payload: { id: params.id },
        };
        if (params.name) {
            mainAction.payload.name = params.name;
        }
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var existingFile = selectors_1.dmGetAuxiliaryFileStateById(dmState, { id: params.id });
        var existingAssetItem = lodash_1.isNil(existingFile) ? null : selectors_1.dmGetAssetItemById(dmState, { id: existingFile.assetId });
        if (params.assetItem && (lodash_1.isNil(existingAssetItem) || params.assetItem.locator !== existingAssetItem.locator)) {
            if (!lodash_1.isNil(existingFile)) {
                batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(existingFile.assetId));
            }
            var preparedAssetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, params.assetItem, mainAction);
            batchedActions.push(actionAssetMap_1.dmPutAssetItem(preparedAssetItem));
            mainAction.payload.assetId = preparedAssetItem.id;
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmUpdateAuxiliaryFile = dmUpdateAuxiliaryFile;
function dmUpdateAuxiliaryFileWithoutValidation(params) {
    return dmUpdateAuxiliaryFile(params, false);
}
exports.dmUpdateAuxiliaryFileWithoutValidation = dmUpdateAuxiliaryFileWithoutValidation;
function dmRemoveAuxiliaryFiles(id) {
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.REMOVE_AUX_FILES,
            payload: { id: id },
        };
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var file = dmState.auxiliaryFiles[id];
        if (utils_1.isValidBsDmId(file.assetId)) {
            batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(file.assetId));
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmRemoveAuxiliaryFiles = dmRemoveAuxiliaryFiles;


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmState_1 = __webpack_require__(5);
var utils_1 = __webpack_require__(3);
var actionBase_1 = __webpack_require__(8);
var actionAssetHelper_1 = __webpack_require__(11);
var actionAssetMap_1 = __webpack_require__(9);
var selectors_1 = __webpack_require__(6);
var bsDmError_1 = __webpack_require__(4);
exports.SET_CUSTOM_AUTORUN = 'DM_SET_CUSTOM_AUTORUN';
function dmSetCustomAutorun(assetItem) {
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.SET_CUSTOM_AUTORUN,
            payload: bscore_1.BsAssetIdNone,
        };
        if (!(bscore_1.bscIsAssetItem(assetItem) && assetItem.assetType === bscore_1.AssetType.BrightScript)) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Custom Autorun file must be a BrightScript file.');
        }
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var customAutorunId = selectors_1.dmGetCustomAutorunId(dmState);
        if (utils_1.isValidBsDmId(customAutorunId)) {
            batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(customAutorunId));
        }
        var preparedAssetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, assetItem, mainAction);
        batchedActions.push(actionAssetMap_1.dmPutAssetItem(preparedAssetItem));
        mainAction.payload = preparedAssetItem.id;
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmSetCustomAutorun = dmSetCustomAutorun;
function dmResetCustomAutorun() {
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.SET_CUSTOM_AUTORUN,
            payload: bscore_1.BsAssetIdNone,
        };
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var customAutorunId = selectors_1.dmGetCustomAutorunId(dmState);
        if (utils_1.isValidBsDmId(customAutorunId)) {
            batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(customAutorunId));
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmResetCustomAutorun = dmResetCustomAutorun;
function dmSetEmptyCustomAutorun() {
    return {
        type: exports.SET_CUSTOM_AUTORUN,
        payload: '',
    };
}
exports.dmSetEmptyCustomAutorun = dmSetEmptyCustomAutorun;


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(3);
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmState_1 = __webpack_require__(5);
var actionBase_1 = __webpack_require__(8);
var actionAssetHelper_1 = __webpack_require__(11);
var actionAssetMap_1 = __webpack_require__(9);
var actionSign_1 = __webpack_require__(7);
var selectors_1 = __webpack_require__(6);
var bsDmError_1 = __webpack_require__(4);
var lodash_1 = __webpack_require__(0);
exports.ADD_DEVICE_WEB_PAGE = 'DM_ADD_DEVICE_WEB_PAGE';
exports.SET_PRESENTATION_WEB_PAGE = 'DM_SET_PRESENTATION_WEB_PAGE';
exports.UPDATE_DEVICE_WEB_PAGE = 'DM_UPDATE_DEVICE_WEB_PAGE';
exports.DELETE_DEVICE_WEB_PAGE = 'DM_DELETE_DEVICE_WEB_PAGE';
exports.DefaultPresentationWebPagePort = 8008;
function dmSetPresentationWebPage(mode, customIndexAssetItem, customName) {
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.SET_PRESENTATION_WEB_PAGE,
            payload: {
                mode: mode,
                customPageId: bsDmInterfaces_1.BsDmIdNone,
            },
        };
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var batchedActions = [];
        var existingCustomPage = selectors_1.dmGetDeviceWebPageForPort(dmState, { port: 0 });
        if (!lodash_1.isNil(existingCustomPage)) {
            if (mode !== bscore_1.DeviceWebPageDisplay.Custom || !lodash_1.isNil(customIndexAssetItem)) {
                var deleteActions = dmGetDeleteDeviceWebPageActions(dmState, existingCustomPage.id);
                batchedActions.push.apply(batchedActions, deleteActions.actions);
            }
        }
        if (mode === bscore_1.DeviceWebPageDisplay.Custom) {
            if (!lodash_1.isNil(customIndexAssetItem)) {
                if (lodash_1.isNil(customName)) {
                    customName = selectors_1.dmGetSignName(dmState) + '-WebPage';
                }
                mainAction.payload.customName = customName;
                var assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, customIndexAssetItem, mainAction);
                mainAction.payload.customIndexAssetId = assetItem.id;
                var assetAction = actionAssetMap_1.dmPutAssetItem(assetItem);
                batchedActions.push(assetAction);
                var deviceWebPageAction = dmPutDeviceWebPage(customName, assetItem.id);
                mainAction.payload.customPageId = deviceWebPageAction.payload.id;
                batchedActions.push(deviceWebPageAction);
            }
        }
        batchedActions.push(actionSign_1.dmUpdateSignProperties({ id: bsDmInterfaces_1.BsDmIdNone, deviceWebPageDisplay: mode }));
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmSetPresentationWebPage = dmSetPresentationWebPage;
function dmAddDeviceWebPage(name, indexAssetItem, port) {
    if (port === void 0) { port = 0; }
    return function (dispatch, getState) {
        if (port === exports.DefaultPresentationWebPagePort) {
            port = 0;
        }
        if (!indexAssetItem) {
            indexAssetItem = bscore_1.bscGetNullAssetItem(bscore_1.AssetType.DeviceHtmlSite);
        }
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var existingWebPage = selectors_1.dmGetDeviceWebPageForPort(dmState, { port: port });
        if (existingWebPage) {
            return doUpdateDeviceWebPage({ id: existingWebPage.id, name: name, indexAssetItem: indexAssetItem, port: port }, dispatch, getState);
        }
        var batchedActions = [];
        var mainAction = dmPutDeviceWebPage(name, bscore_1.BsAssetIdNone, port);
        var assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, indexAssetItem, mainAction);
        var assetAction = actionAssetMap_1.dmPutAssetItem(assetItem);
        batchedActions.push(assetAction);
        mainAction.payload.indexAssetId = assetItem.id;
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmAddDeviceWebPage = dmAddDeviceWebPage;
function dmPutDeviceWebPage(name, indexAssetId, port) {
    if (port === void 0) { port = 0; }
    return {
        type: exports.ADD_DEVICE_WEB_PAGE,
        payload: {
            id: utils_1.newBsDmId(),
            name: name,
            indexAssetId: indexAssetId,
            port: port,
        },
    };
}
exports.dmPutDeviceWebPage = dmPutDeviceWebPage;
function dmUpdateDeviceWebPage(params) {
    return function (dispatch, getState) {
        return doUpdateDeviceWebPage(params, dispatch, getState);
    };
}
exports.dmUpdateDeviceWebPage = dmUpdateDeviceWebPage;
function doUpdateDeviceWebPage(params, dispatch, getState) {
    if (lodash_1.isNil(params.port) || params.port === exports.DefaultPresentationWebPagePort) {
        params.port = 0;
    }
    var mainAction = {
        type: exports.UPDATE_DEVICE_WEB_PAGE,
        payload: lodash_1.pick(params, ['id', 'name', 'port']),
    };
    var dmState = bsDmState_1.dmFilterDmState(getState());
    if (mainAction.payload.hasOwnProperty('port')) {
        var deviceWebpageToUpdate = selectors_1.dmGetDeviceWebPageById(dmState, { id: params.id });
        if (deviceWebpageToUpdate && deviceWebpageToUpdate.port !== mainAction.payload.port) {
            var existingDeviceWebPage = selectors_1.dmGetDeviceWebPageForPort(dmState, { port: mainAction.payload.port });
            if (existingDeviceWebPage) {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, ' Cannot change port to one already in use');
            }
        }
    }
    var batchedActions = [];
    if (!lodash_1.isUndefined(params.indexAssetItem)) {
        var assetItem = lodash_1.isNull(params.indexAssetItem) ? bscore_1.bscGetNullAssetItem(bscore_1.AssetType.DeviceHtmlSite) : params.indexAssetItem;
        var currentDeviceWebPage = dmState.deviceWebPages[params.id];
        if (currentDeviceWebPage.indexAssetId) {
            batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(currentDeviceWebPage.indexAssetId));
        }
        assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, assetItem, mainAction);
        var assetAction = actionAssetMap_1.dmPutAssetItem(assetItem);
        batchedActions.push(assetAction);
        mainAction.payload.indexAssetId = assetItem.id;
    }
    batchedActions.push(mainAction);
    dispatch(actionBase_1.dmBatchActions(batchedActions));
    return mainAction;
}
exports.doUpdateDeviceWebPage = doUpdateDeviceWebPage;
function dmDeleteDeviceWebPage(id) {
    return function (dispatch, getState) {
        var deleteActions = dmGetDeleteDeviceWebPageActions(bsDmState_1.dmFilterDmState(getState()), id);
        dispatch(actionBase_1.dmBatchActions(deleteActions.actions));
        return deleteActions.mainAction;
    };
}
exports.dmDeleteDeviceWebPage = dmDeleteDeviceWebPage;
function dmGetDeleteDeviceWebPageActions(dmState, id) {
    var mainAction = {
        type: exports.DELETE_DEVICE_WEB_PAGE,
        payload: { id: id },
    };
    var actions = [];
    var deviceWebPage = dmState.deviceWebPages[id];
    if (deviceWebPage) {
        actions.push(actionAssetMap_1.dmRemoveAssetItems(deviceWebPage.indexAssetId));
    }
    actions.push(mainAction);
    return { actions: actions, mainAction: mainAction };
}
exports.dmGetDeleteDeviceWebPageActions = dmGetDeleteDeviceWebPageActions;


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmState_1 = __webpack_require__(5);
var bsDmContentItems_1 = __webpack_require__(13);
var bsDmEvents_1 = __webpack_require__(19);
var bsDmAssetItems_1 = __webpack_require__(33);
var bsDmError_1 = __webpack_require__(4);
var actionBase_1 = __webpack_require__(8);
var actionMediaState_1 = __webpack_require__(12);
var actionEvent_1 = __webpack_require__(17);
var actionAssetMap_1 = __webpack_require__(9);
var actionAssetHelper_1 = __webpack_require__(11);
var selectors_1 = __webpack_require__(6);
var lodash_1 = __webpack_require__(0);
exports.MEDIASEQUENCE_ADD_ITEM_RANGE_AT_INDEX = 'DM_MEDIASEQUENCE_ADD_ITEM_RANGE_AT_INDEX';
exports.MEDIASEQUENCE_MOVE_ITEM_INDICES = 'DM_MEDIASEQUENCE_MOVE_ITEM_INDICES';
exports.MEDIASEQUENCE_DELETE_ITEMS = 'DM_MEDIASEQUENCE_DELETE_ITEMS';
function dmMediaSequenceAddItemRange(index, container, assetItems, contentData) {
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.MEDIASEQUENCE_ADD_ITEM_RANGE_AT_INDEX,
            payload: {
                index: index,
                container: container,
                id: [],
                contentItems: [],
            },
        };
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var mediaSequenceState = selectors_1.dmGetMediaStateStateById(dmState, { id: container.id });
        if (!bsDmContentItems_1.dmContainerIsMediaSequenceContainer(container)
            || lodash_1.isNil(mediaSequenceState)
            || !bsDmContentItems_1.dmContentItemIsMediaSequenceContentItem(mediaSequenceState.contentItem)) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'MediaSequenceAddItemRange: container must be a MediaList or PlayFile state', { action: mainAction });
        }
        if (!assetItems || assetItems.length === 0) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'MediaSequenceAddItemRange: no assetItems provided', { action: mainAction });
        }
        var zoneType = selectors_1.dmGetZoneTypeForMediaStateId(dmState, { id: mediaSequenceState.id });
        assetItems.forEach(function (item) {
            if (!bscore_1.bscIsAssetItemPlayableContent(item)) {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Invalid assetItem for MediaSequence: asset must be a media file', { action: mainAction });
            }
            else if (!bsDmAssetItems_1.dmIsValidAssetItemForZone(item, zoneType)) {
                var reason = 'MediaSequenceAddItemRange: Invalid assetItem for MediaSequence: '
                    + item.mediaType + ' cannot be used in ' + zoneType + ' zone.';
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, reason, { action: mainAction });
            }
        });
        var itemSequenceObject = selectors_1.dmGetMediaStateSequenceForContainer(dmState, { id: mediaSequenceState.id });
        var itemSequence = itemSequenceObject ? itemSequenceObject.sequence : null;
        var itemCount = itemSequence ? itemSequence.length : 0;
        if (index === undefined || index > itemCount || index < 0) {
            index = itemCount;
        }
        var batchedActions = [];
        var addedAssets = new Map();
        var mediaSequenceContentItem = mediaSequenceState.contentItem;
        if (bsDmContentItems_1.dmContentItemIsMediaListContentItem(mediaSequenceContentItem) && mediaSequenceContentItem.autoTransitions) {
            var autoAdvanceEventSpec = bsDmEvents_1.dmCreateDefaultEventSpecificationForEventType(bscore_1.EventType.MediaEndOrTimer, null, bscore_1.ContentItemType.Image, bscore_1.EventIntrinsicAction.SequenceForward);
            batchedActions.push(actionEvent_1.dmAddEventFromSpecification(mediaSequenceState.name + '_auto_evf', container.id, autoAdvanceEventSpec));
        }
        assetItems.forEach(function (item, itemIndex) {
            if (bscore_1.bscIsAssetItemPlayableContent(item)) {
                var assetItem = __assign({}, item);
                assetItem = actionAssetHelper_1.dmSetAssetId(dmState, assetItem);
                var addedAssetItemId = addedAssets.get(assetItem.locator);
                if (!lodash_1.isNil(addedAssetItemId)) {
                    assetItem.id = addedAssetItemId;
                }
                else {
                    addedAssets.set(assetItem.locator, assetItem.id);
                }
                batchedActions.push(actionAssetMap_1.dmPutAssetItem(assetItem));
                var contentItem = bsDmContentItems_1.dmCreateMediaContentItem(assetItem.name, assetItem.id, assetItem.mediaType);
                if (mediaSequenceState.contentItem.type === bscore_1.ContentItemType.PlayFile) {
                    contentItem = bsDmContentItems_1.dmCreatePlayFileItemFromMediaContentItem(contentItem);
                }
                if (!lodash_1.isNil(contentItem)) {
                    if (!lodash_1.isNil(contentData) && !lodash_1.isNil(contentData[itemIndex])) {
                        var contentItemData = void 0;
                        if (container.type === bsDmInterfaces_1.MediaStateContainerType.PlayFile) {
                            contentItemData = bsDmContentItems_1.dmFilterPlayFileItemContentItemData(contentItem.type, contentData[itemIndex]);
                        }
                        else {
                            contentItemData =
                                bsDmContentItems_1.dmFilterContentItemData(contentItem.type, contentData[itemIndex]);
                        }
                        if (contentItemData) {
                            contentItem = Object.assign({}, contentItem, contentItemData);
                        }
                    }
                    mainAction.payload.contentItems.push(contentItem);
                    var addMediaStateAction = actionMediaState_1.dmAddMediaStateWithContentItem(assetItem.name, container, contentItem, index + itemIndex);
                    mainAction.payload.id.push(addMediaStateAction.payload.id);
                    batchedActions.push(addMediaStateAction);
                }
            }
        });
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmMediaSequenceAddItemRange = dmMediaSequenceAddItemRange;
function dmMediaSequenceUpdateItem(params) {
    return function (dispatch, getState) {
        var mainAction = {
            type: actionMediaState_1.UPDATE_MEDIA_STATE,
            payload: { id: params.id },
        };
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var currentItemState = selectors_1.dmGetMediaStateStateById(dmState, { id: params.id });
        if (!lodash_1.isNil(currentItemState)) {
            var sequenceContainerState = selectors_1.dmGetMediaStateStateById(dmState, { id: currentItemState.container.id });
            if (!lodash_1.isNil(sequenceContainerState)) {
                var zoneType = selectors_1.dmGetZoneTypeForMediaStateId(dmState, { id: sequenceContainerState.id });
                var existingContentItem = currentItemState.contentItem;
                var contentItem = void 0;
                if (!lodash_1.isNil(params.assetItem)) {
                    if (bscore_1.bscIsAssetItemPlayableContent(params.assetItem)) {
                        if (!bsDmAssetItems_1.dmIsValidAssetItemForZone(params.assetItem, zoneType)) {
                            var reason = 'UpdateMediaSequenceItem: Invalid assetItem for MediaSequence: '
                                + params.assetItem.mediaType + ' cannot be used in ' + zoneType + ' zone.';
                            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, reason, { action: mainAction });
                        }
                        var assetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, params.assetItem, mainAction);
                        batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(existingContentItem.assetId));
                        batchedActions.push(actionAssetMap_1.dmPutAssetItem(assetItem));
                        mainAction.payload.name = assetItem.name;
                        contentItem = bsDmContentItems_1.dmCreateMediaContentItem(assetItem.name, assetItem.id, assetItem.mediaType);
                        if (currentItemState.container.type === bsDmInterfaces_1.MediaStateContainerType.PlayFile) {
                            var _a = existingContentItem, key = _a.key, exportKey = _a.exportKey;
                            contentItem = __assign({}, contentItem, { key: key, exportKey: exportKey });
                        }
                    }
                    else {
                        throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateMediaSequenceItem: only Media AssetItems can be used in a MediaSequence', { action: mainAction });
                    }
                }
                else {
                    contentItem = existingContentItem;
                }
                if (!lodash_1.isNil(contentItem)) {
                    if (params.contentData) {
                        var contentItemData = void 0;
                        if (currentItemState.container.type === bsDmInterfaces_1.MediaStateContainerType.PlayFile) {
                            contentItemData = bsDmContentItems_1.dmFilterPlayFileItemContentItemData(contentItem.type, params.contentData);
                        }
                        else {
                            contentItemData =
                                bsDmContentItems_1.dmFilterContentItemData(contentItem.type, params.contentData);
                        }
                        if (!lodash_1.isNil(contentItemData)) {
                            contentItem = __assign({}, contentItem, contentItemData);
                        }
                    }
                    mainAction.payload.contentItem = contentItem;
                }
                batchedActions.push(mainAction);
                dispatch(actionBase_1.dmBatchActions(batchedActions));
                return mainAction;
            }
            else {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateMediaSequenceItem: invalid mediaSequence container (mediaState) ID');
            }
        }
        else {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateMediaSequenceItem: invalid item (mediaState) ID');
        }
    };
}
exports.dmMediaSequenceUpdateItem = dmMediaSequenceUpdateItem;
function dmMediaSequenceMoveItemsAtIndices(container, indices, targetIndex) {
    return function (dispatch, getState) {
        if (typeof indices === 'number') {
            indices = [indices];
        }
        var mainAction = {
            type: exports.MEDIASEQUENCE_MOVE_ITEM_INDICES,
            payload: { container: container, indices: indices, targetIndex: targetIndex },
        };
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var mediaListState = selectors_1.dmGetMediaStateStateById(dmState, { id: container.id });
        if (!bsDmContentItems_1.dmContainerIsMediaSequenceContainer(container)
            || lodash_1.isNil(mediaListState)
            || !bsDmContentItems_1.dmContentItemIsMediaSequenceContentItem(mediaListState.contentItem)) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'MediaSequenceMoveItems: container must be a MediaList or PlayFile state', { action: mainAction });
        }
        var mediaSequenceCount = selectors_1.dmGetMediaSequenceItemCount(dmState, { id: container.id });
        if (targetIndex < 0 || targetIndex >= mediaSequenceCount) {
            mainAction.payload.targetIndex = mediaSequenceCount - 1;
        }
        mainAction.payload.indices = indices.filter(function (index) { return index >= 0 && index < mediaSequenceCount; });
        dispatch(mainAction);
        return mainAction;
    };
}
exports.dmMediaSequenceMoveItemsAtIndices = dmMediaSequenceMoveItemsAtIndices;
function dmMediaSequenceDeleteItemRange(container, startingIndex, count) {
    return function (dispatch, getState) {
        if (count === undefined) {
            count = 1;
        }
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var itemSequenceObject = selectors_1.dmGetMediaStateSequenceForContainer(dmState, { id: container.id });
        var itemSequence = itemSequenceObject ? itemSequenceObject.sequence : [];
        if (startingIndex >= itemSequence.length
            || count === 0
            || startingIndex + count > itemSequence.length) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'MediaListDeleteItemRange: Invalid index/count for MediaSequence item deletion range');
        }
        var endingIndex = startingIndex + count;
        var mediaStateIdsToDelete = itemSequence.slice(startingIndex, endingIndex);
        var mainAction = dmGetMediaSequenceDeleteAction(dmState, container, mediaStateIdsToDelete);
        dispatch(actionMediaState_1.dmDeleteMediaStateWithParams(mainAction.payload.deleteParams));
        return mainAction;
    };
}
exports.dmMediaSequenceDeleteItemRange = dmMediaSequenceDeleteItemRange;
function dmMediaSequenceDeleteItemsAtIndices(container, indices) {
    return function (dispatch, getState) {
        if (!Array.isArray(indices) || indices.length === 0) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'MediaListDeleteItemsAtIndices: no media item indices were specified');
        }
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var itemSequenceObject = selectors_1.dmGetMediaStateSequenceForContainer(dmState, { id: container.id });
        var itemSequence = itemSequenceObject ? itemSequenceObject.sequence : [];
        var mediaStateIdsToDelete = indices.map(function (index) { return itemSequence[index]; });
        var mainAction = dmGetMediaSequenceDeleteAction(dmState, container, mediaStateIdsToDelete);
        dispatch(actionMediaState_1.dmDeleteMediaStateWithParams(mainAction.payload.deleteParams));
        return mainAction;
    };
}
exports.dmMediaSequenceDeleteItemsAtIndices = dmMediaSequenceDeleteItemsAtIndices;
function dmGetMediaSequenceDeleteAction(dmState, container, mediaStateItemIds) {
    var mainAction = {
        type: exports.MEDIASEQUENCE_DELETE_ITEMS,
        payload: {
            containerId: container.id,
            deleteParams: {
                mediaStateIds: [],
                dataFeedIds: [],
                dataFeedSourceIds: [],
                assetIds: [],
                eventIds: [],
                transitionIds: [],
                commandIds: [],
                liveTextCanvasIds: [],
                liveTextItemIds: [],
                liveTextGroupIds: [],
            },
        },
    };
    var mediaListState = selectors_1.dmGetMediaStateStateById(dmState, { id: container.id });
    if (!bsDmContentItems_1.dmContainerIsMediaSequenceContainer(container)
        || lodash_1.isNil(mediaListState)
        || !bsDmContentItems_1.dmContentItemIsMediaSequenceContentItem(mediaListState.contentItem)) {
        throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'MediaListDeleteItems: container must be a MediaList or PlayFile state', { action: mainAction });
    }
    mainAction.payload.deleteParams = actionMediaState_1.dmGetMediaStateDeleteParams(dmState, mediaStateItemIds);
    return mainAction;
}
exports.dmGetMediaSequenceDeleteAction = dmGetMediaSequenceDeleteAction;
function dmMediaListAddGlobalEvent(name, container, eventSpec, sequenceBackward) {
    if (sequenceBackward === void 0) { sequenceBackward = false; }
    return function (dispatch, getState) {
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var mediaListState = selectors_1.dmGetMediaStateStateById(dmState, { id: container.id });
        if (container.type !== bsDmInterfaces_1.MediaStateContainerType.MediaList
            || lodash_1.isNil(mediaListState)
            || mediaListState.contentItem.type !== bscore_1.ContentItemType.MediaList) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'MediaListAddGlobalEvent: container must be a MediaList');
        }
        var finalEventSpec = __assign({}, eventSpec, { action: sequenceBackward ? bscore_1.EventIntrinsicAction.SequenceBackward : bscore_1.EventIntrinsicAction.SequenceForward });
        return dispatch(actionEvent_1.dmAddEventFromSpecification(name, container.id, finalEventSpec));
    };
}
exports.dmMediaListAddGlobalEvent = dmMediaListAddGlobalEvent;


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmState_1 = __webpack_require__(5);
var bsDmPlugins_1 = __webpack_require__(39);
var bsDmError_1 = __webpack_require__(4);
var actionBase_1 = __webpack_require__(8);
var actionAssetHelper_1 = __webpack_require__(11);
var actionAssetMap_1 = __webpack_require__(9);
var selectors_1 = __webpack_require__(6);
var utils_1 = __webpack_require__(3);
var lodash_1 = __webpack_require__(0);
exports.ADD_PARSER_PLUGIN = 'DM_ADD_PARSER_PLUGIN';
exports.UPDATE_PARSER_PLUGIN = 'DM_UPDATE_PARSER_PLUGIN';
exports.REMOVE_PARSER_PLUGIN = 'DM_REMOVE_PARSER_PLUGIN';
function dmAddParserBrightScriptPlugin(name, assetItem, parseFeedFunctionName, parseUVFunctionName, userAgentFunctionName, validate) {
    if (parseFeedFunctionName === void 0) { parseFeedFunctionName = ''; }
    if (parseUVFunctionName === void 0) { parseUVFunctionName = ''; }
    if (userAgentFunctionName === void 0) { userAgentFunctionName = ''; }
    if (validate === void 0) { validate = true; }
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.ADD_PARSER_PLUGIN,
            payload: {
                id: utils_1.newBsDmId(),
                name: lodash_1.isNil(name) ? '' : name,
                assetId: bsDmInterfaces_1.BsDmIdNone,
                parseFeedFunctionName: parseFeedFunctionName != null ? parseFeedFunctionName : '',
                parseUVFunctionName: parseUVFunctionName != null ? parseUVFunctionName : '',
                userAgentFunctionName: userAgentFunctionName != null ? userAgentFunctionName : '',
            },
        };
        var dmState = bsDmState_1.dmFilterDmState(getState());
        if (validate) {
            if (lodash_1.isNil(name) || name.length === 0) {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Plugin name cannot be empty');
            }
            var validityError = bsDmPlugins_1.dmCheckNewScriptPluginFileValidity(dmState, assetItem);
            if (!validityError) {
                validityError = bsDmPlugins_1.dmCheckNewParserPluginFunctionValidity(dmState, parseFeedFunctionName, parseUVFunctionName, userAgentFunctionName);
            }
            if (validityError) {
                validityError.attachAction(mainAction);
                throw validityError;
            }
        }
        var batchedActions = [];
        if (bscore_1.bscIsAssetItem(assetItem)) {
            var preparedAssetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, assetItem, mainAction);
            var assetAction = actionAssetMap_1.dmPutAssetItem(preparedAssetItem);
            batchedActions.push(assetAction);
            mainAction.payload.assetId = preparedAssetItem.id;
        }
        else if (validate) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Plugin AssetItem is not valid');
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmAddParserBrightScriptPlugin = dmAddParserBrightScriptPlugin;
function dmAddParserBrightScriptPluginWithoutValidation(name, assetItem, parseFeedFunctionName, parseUVFunctionName, userAgentFunctionName) {
    if (parseFeedFunctionName === void 0) { parseFeedFunctionName = ''; }
    if (parseUVFunctionName === void 0) { parseUVFunctionName = ''; }
    if (userAgentFunctionName === void 0) { userAgentFunctionName = ''; }
    return dmAddParserBrightScriptPlugin(name, assetItem, parseFeedFunctionName, parseUVFunctionName, userAgentFunctionName, false);
}
exports.dmAddParserBrightScriptPluginWithoutValidation = dmAddParserBrightScriptPluginWithoutValidation;
function dmUpdateParserBrightScriptPlugin(params, validate) {
    if (validate === void 0) { validate = true; }
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.UPDATE_PARSER_PLUGIN,
            payload: { id: params.id },
        };
        if (!lodash_1.isNil(params.name)) {
            mainAction.payload.name = params.name;
        }
        if (params.parseFeedFunctionName != null) {
            mainAction.payload.parseFeedFunctionName = params.parseFeedFunctionName;
        }
        if (params.parseUVFunctionName != null) {
            mainAction.payload.parseUVFunctionName = params.parseUVFunctionName;
        }
        if (params.userAgentFunctionName != null) {
            mainAction.payload.userAgentFunctionName = params.userAgentFunctionName;
        }
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        if (validate) {
            var functionValidityError = bsDmPlugins_1.dmCheckNewParserPluginFunctionValidity(dmState, params.parseFeedFunctionName, params.parseUVFunctionName, params.userAgentFunctionName, params.id);
            if (functionValidityError) {
                functionValidityError.attachAction(mainAction);
                throw functionValidityError;
            }
        }
        var existingPlugin = selectors_1.dmGetParserPluginStateById(dmState, { id: params.id });
        if (!lodash_1.isNil(existingPlugin)) {
            var existingAssetItem = selectors_1.dmGetAssetItemById(dmState, { id: existingPlugin.assetId });
            if (params.assetItem && (!existingAssetItem || params.assetItem.locator !== existingAssetItem.locator)) {
                if (validate) {
                    var fileValidityError = bsDmPlugins_1.dmCheckNewScriptPluginFileValidity(dmState, params.assetItem, existingPlugin.assetId);
                    if (fileValidityError) {
                        fileValidityError.attachAction(mainAction);
                        throw fileValidityError;
                    }
                }
                if (existingAssetItem) {
                    batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(existingPlugin.assetId));
                }
                var preparedAssetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, params.assetItem, mainAction);
                batchedActions.push(actionAssetMap_1.dmPutAssetItem(preparedAssetItem));
                mainAction.payload.assetId = preparedAssetItem.id;
            }
            batchedActions.push(mainAction);
            dispatch(actionBase_1.dmBatchActions(batchedActions));
            return mainAction;
        }
        else {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateParserBrightScriptPlugin - plugin ID is invalid');
        }
    };
}
exports.dmUpdateParserBrightScriptPlugin = dmUpdateParserBrightScriptPlugin;
function dmUpdateParserBrightScriptPluginWithoutValidation(params) {
    return dmUpdateParserBrightScriptPlugin(params, false);
}
exports.dmUpdateParserBrightScriptPluginWithoutValidation = dmUpdateParserBrightScriptPluginWithoutValidation;
function dmRemoveParserBrightScriptPlugin(id) {
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.REMOVE_PARSER_PLUGIN,
            payload: { id: id },
        };
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var plugin = dmState.parserPlugins[id];
        if (utils_1.isValidBsDmId(plugin.assetId)) {
            batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(plugin.assetId));
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmRemoveParserBrightScriptPlugin = dmRemoveParserBrightScriptPlugin;


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(3);
exports.ADD_PARTNER_PRODUCT = 'DM_ADD_PARTNER_PRODUCT';
exports.UPDATE_PARTNER_PRODUCT = 'DM_UPDATE_PARTNER_PRODUCT';
exports.DELETE_PARTNER_PRODUCT = 'DM_DELETE_PARTNER_PRODUCT';
function dmAddPartnerProduct(port, productName, wssCommunicationSpecFileName) {
    return {
        type: exports.ADD_PARTNER_PRODUCT,
        payload: {
            id: utils_1.newBsDmId(),
            port: port,
            productName: productName,
            wssCommunicationSpecFileName: wssCommunicationSpecFileName,
        },
    };
}
exports.dmAddPartnerProduct = dmAddPartnerProduct;
function dmUpdatePartnerProduct(params) {
    return {
        type: exports.UPDATE_PARTNER_PRODUCT,
        payload: params,
    };
}
exports.dmUpdatePartnerProduct = dmUpdatePartnerProduct;
function dmDeletePartnerProduct(id) {
    var ids = Array.isArray(id) ? id : [id];
    return {
        type: exports.DELETE_PARTNER_PRODUCT,
        payload: { ids: ids },
    };
}
exports.dmDeletePartnerProduct = dmDeletePartnerProduct;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmState_1 = __webpack_require__(5);
var bsDmPlugins_1 = __webpack_require__(39);
var bsDmError_1 = __webpack_require__(4);
var actionBase_1 = __webpack_require__(8);
var actionAssetHelper_1 = __webpack_require__(11);
var actionAssetMap_1 = __webpack_require__(9);
var selectors_1 = __webpack_require__(6);
var utils_1 = __webpack_require__(3);
var lodash_1 = __webpack_require__(0);
exports.ADD_SCRIPT_PLUGIN = 'DM_ADD_SCRIPT_PLUGIN';
exports.UPDATE_SCRIPT_PLUGIN = 'DM_UPDATE_SCRIPT_PLUGIN';
exports.REMOVE_SCRIPT_PLUGIN = 'DM_REMOVE_SCRIPT_PLUGIN';
function dmAddBrightScriptPlugin(name, assetItem, validate) {
    if (validate === void 0) { validate = true; }
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.ADD_SCRIPT_PLUGIN,
            payload: {
                id: utils_1.newBsDmId(),
                name: lodash_1.isNil(name) ? '' : name,
                assetId: bsDmInterfaces_1.BsDmIdNone,
            },
        };
        if (validate) {
            if (lodash_1.isNil(name) || name.length === 0) {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Plugin name cannot be empty');
            }
            var validityError = bsDmPlugins_1.dmCheckNewScriptPluginFileValidity(getState(), assetItem);
            if (validityError) {
                validityError.attachAction(mainAction);
                throw validityError;
            }
        }
        var batchedActions = [];
        if (bscore_1.bscIsAssetItem(assetItem)) {
            var dmState = bsDmState_1.dmFilterDmState(getState());
            var preparedAssetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, assetItem, mainAction);
            var assetAction = actionAssetMap_1.dmPutAssetItem(preparedAssetItem);
            batchedActions.push(assetAction);
            mainAction.payload.assetId = preparedAssetItem.id;
        }
        else if (validate) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Plugin AssetItem is not valid');
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmAddBrightScriptPlugin = dmAddBrightScriptPlugin;
function dmAddBrightScriptPluginWithoutValidation(name, assetItem) {
    return dmAddBrightScriptPlugin(name, assetItem, false);
}
exports.dmAddBrightScriptPluginWithoutValidation = dmAddBrightScriptPluginWithoutValidation;
function dmUpdateBrightScriptPlugin(params, validate) {
    if (validate === void 0) { validate = true; }
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.UPDATE_SCRIPT_PLUGIN,
            payload: { id: params.id },
        };
        if (!lodash_1.isNil(params.name)) {
            mainAction.payload.name = params.name;
        }
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var existingPlugin = selectors_1.dmGetScriptPluginStateById(dmState, { id: params.id });
        if (!lodash_1.isNil(existingPlugin)) {
            var existingAssetItem = selectors_1.dmGetAssetItemById(dmState, { id: existingPlugin.assetId });
            if (params.assetItem && (lodash_1.isNil(existingAssetItem) || params.assetItem.locator !== existingAssetItem.locator)) {
                if (validate) {
                    var validityError = bsDmPlugins_1.dmCheckNewScriptPluginFileValidity(getState(), params.assetItem, existingPlugin.assetId);
                    if (validityError) {
                        validityError.attachAction(mainAction);
                        throw validityError;
                    }
                }
                if (existingAssetItem) {
                    batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(existingPlugin.assetId));
                }
                var preparedAssetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, params.assetItem, mainAction);
                batchedActions.push(actionAssetMap_1.dmPutAssetItem(preparedAssetItem));
                mainAction.payload.assetId = preparedAssetItem.id;
            }
            batchedActions.push(mainAction);
            dispatch(actionBase_1.dmBatchActions(batchedActions));
            return mainAction;
        }
        else {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateBrightScriptPlugin - plugin ID is invalid');
        }
    };
}
exports.dmUpdateBrightScriptPlugin = dmUpdateBrightScriptPlugin;
function dmUpdateBrightScriptPluginWithoutValidation(params) {
    return dmUpdateBrightScriptPlugin(params, false);
}
exports.dmUpdateBrightScriptPluginWithoutValidation = dmUpdateBrightScriptPluginWithoutValidation;
function dmRemoveBrightScriptPlugin(id) {
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.REMOVE_SCRIPT_PLUGIN,
            payload: { id: id },
        };
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var plugin = dmState.scriptPlugins[id];
        if (utils_1.isValidBsDmId(plugin.assetId)) {
            batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(plugin.assetId));
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmRemoveBrightScriptPlugin = dmRemoveBrightScriptPlugin;


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bsDmError_1 = __webpack_require__(4);
var base64 = __webpack_require__(60);
var lodash_1 = __webpack_require__(0);
exports.SET_THUMBNAIL = 'DM_SET_THUMBNAIL';
function dmSetThumbnail(assetThumbnail) {
    if (!(assetThumbnail.data && assetThumbnail.type)) {
        throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'SetThumbnail - thumbnail data and type must be specified');
    }
    var action = {
        type: exports.SET_THUMBNAIL,
        payload: {
            type: assetThumbnail.type,
            data: base64.fromByteArray(assetThumbnail.data),
            size: assetThumbnail.size ? assetThumbnail.size : { width: 0, height: 0 },
        },
    };
    if (!lodash_1.isNil(assetThumbnail.hash)) {
        action.payload.hash = assetThumbnail.hash.toLowerCase();
    }
    return action;
}
exports.dmSetThumbnail = dmSetThumbnail;
function dmDeleteThumbnail() {
    return {
        type: exports.SET_THUMBNAIL,
        payload: null,
    };
}
exports.dmDeleteThumbnail = dmDeleteThumbnail;


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.version = '0.11.16';


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmClasses_1 = __webpack_require__(10);
function dmGetSignState(state) {
    return state;
}
exports.dmGetSignState = dmGetSignState;
function dmGetSignMetaData(state) {
    return new bsDmClasses_1.DmcSignMetadata(state.sign);
}
exports.dmGetSignMetaData = dmGetSignMetaData;
function dmGetSignId(state) {
    return state.sign.properties.id;
}
exports.dmGetSignId = dmGetSignId;
function dmGetSignName(state) {
    return state.sign.properties.name;
}
exports.dmGetSignName = dmGetSignName;
function dmGetSignVideoMode(state) {
    return state.sign.properties.videoMode;
}
exports.dmGetSignVideoMode = dmGetSignVideoMode;
function dmGetSignPlayerModel(state) {
    return state.sign.properties.model;
}
exports.dmGetSignPlayerModel = dmGetSignPlayerModel;
function dmGetSignPresentationWebPageDisplayMode(state) {
    return state.sign.properties.deviceWebPageDisplay;
}
exports.dmGetSignPresentationWebPageDisplayMode = dmGetSignPresentationWebPageDisplayMode;
function dmIsDolbyVisionEnabled(state) {
    return state.sign.properties.dolbyVisionEnabled
        && bscore_1.bscPlayerModelHasFeature(state.sign.properties.model, bscore_1.ModelFeature.DolbyVision);
}
exports.dmIsDolbyVisionEnabled = dmIsDolbyVisionEnabled;
function dmGetSignSerialPortConfigurations(state) {
    return state.sign.serialPortConfigurations;
}
exports.dmGetSignSerialPortConfigurations = dmGetSignSerialPortConfigurations;
function dmGetSignGpioList(state) {
    return state.sign.gpio;
}
exports.dmGetSignGpioList = dmGetSignGpioList;
function dmGetSignButtonPanelMap(state) {
    return state.sign.buttonPanels;
}
exports.dmGetSignButtonPanelMap = dmGetSignButtonPanelMap;
function dmGetSignAudioPropertyMap(state) {
    return state.sign.audioSignPropertyMap;
}
exports.dmGetSignAudioPropertyMap = dmGetSignAudioPropertyMap;
function dmGetSignLastModifiedTime(state) {
    return state.sign.lastModifiedTime !== undefined ? state.sign.lastModifiedTime : new Date(2017, 0, 1);
}
exports.dmGetSignLastModifiedTime = dmGetSignLastModifiedTime;


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmClasses_1 = __webpack_require__(10);
var selectorCommand_1 = __webpack_require__(36);
var selectorValidation_1 = __webpack_require__(32);
var bsDmError_1 = __webpack_require__(4);
var utils_1 = __webpack_require__(3);
var lodash_1 = __webpack_require__(0);
function dmGetTransitionStateById(state, props) {
    var transitionState = state.transitions.transitionsById[props.id];
    return transitionState ? transitionState : null;
}
exports.dmGetTransitionStateById = dmGetTransitionStateById;
function dmGetTransitionById(state, props) {
    var transitionState = state.transitions.transitionsById[props.id];
    if (transitionState) {
        var commands = selectorCommand_1.dmGetCommandStatesForParentAndType(state, { id: props.id, type: bscore_1.CommandSequenceType.Transition });
        return new bsDmClasses_1.DmcTransition(transitionState, commands);
    }
    return null;
}
exports.dmGetTransitionById = dmGetTransitionById;
function dmGetTransitionIdsForEvent(state, props) {
    var transitions = state.transitions.transitionsById;
    return Object.keys(transitions).filter(function (id) { return transitions[id].eventId === props.id; });
}
exports.dmGetTransitionIdsForEvent = dmGetTransitionIdsForEvent;
function dmGetIncomingTransitionIdsForMediaState(state, props) {
    var transitions = state.transitions.transitionsById;
    return Object.keys(transitions).filter(function (id) { return transitions[id].targetMediaStateId === props.id; });
}
exports.dmGetIncomingTransitionIdsForMediaState = dmGetIncomingTransitionIdsForMediaState;
function dmGetConditionalTransitionIdsForEvent(state, props) {
    var sequence = state.transitions.sequencesByEventId[props.id];
    if (sequence) {
        var transitions_1 = state.transitions.transitionsById;
        var transitionSequence = sequence.sequence;
        return transitionSequence.filter(function (id) { return !lodash_1.isNil(transitions_1[id].condition); });
    }
    return [];
}
exports.dmGetConditionalTransitionIdsForEvent = dmGetConditionalTransitionIdsForEvent;
function dmGetConditionalTransitionCountForEvent(state, props) {
    var ids = dmGetConditionalTransitionIdsForEvent(state, props);
    return ids.length;
}
exports.dmGetConditionalTransitionCountForEvent = dmGetConditionalTransitionCountForEvent;
function dmValidateTransition(state, props) {
    var entityDetails = { entityType: bsDmInterfaces_1.DmEntityType.Transition, entityId: props.id };
    var result = bsDmError_1.dmInitializeValidationResult(bsDmInterfaces_1.DmEntityType.Transition, props.id);
    var validateParameterizedString = function (paramString, entityProperty) {
        var error = selectorValidation_1.dmValidateEntityParameterizedString(state, paramString, __assign({}, entityDetails, { entityProperty: entityProperty }));
        if (!lodash_1.isNil(error)) {
            result.errorList.push(error);
        }
    };
    var validateUserVariableId = function (userVariableId, entityProperty) {
        var error = selectorValidation_1.dmValidateUserVariableId(state, userVariableId, __assign({}, entityDetails, { entityProperty: entityProperty }));
        if (!lodash_1.isNil(error)) {
            result.errorList.push(error);
        }
    };
    var validateUserVariableName = function (userVariableName, entityProperty) {
        var error = selectorValidation_1.dmValidateUserVariableName(state, userVariableName, __assign({}, entityDetails, { entityProperty: entityProperty }));
        if (!lodash_1.isNil(error)) {
            result.errorList.push(error);
        }
    };
    var transition = dmGetTransitionStateById(state, props);
    if (!lodash_1.isNil(transition) && !lodash_1.isNil(transition.condition)) {
        if (utils_1.isValidBsDmId(transition.condition.userVariableId)) {
            validateUserVariableId(transition.condition.userVariableId, 'condition.userVariableId');
        }
        else if (transition.condition.userVariableName) {
            validateUserVariableName(transition.condition.userVariableName, 'condition.userVariableName');
        }
        else {
            result.errorList.push(selectorValidation_1.dmGetEntityError(bsDmError_1.DmErrorType.userVariableNotSpecified, __assign({}, entityDetails, { entityProperty: 'condition.userVariable' })));
        }
        validateParameterizedString(transition.condition.compareValue1, 'condition.compareValue1');
        if (transition.condition.compareOperator === bscore_1.CompareOperator.BTW) {
            validateParameterizedString(transition.condition.compareValue2, 'condition.compareValue2');
        }
        var commandIds = selectorCommand_1.dmCommandIdsForTransition(state, props);
        var commandErrors = commandIds.reduce(function (acc, commandId) {
            var cmdResult = selectorCommand_1.dmValidateCommand(state, { id: commandId });
            if (!cmdResult.ok) {
                acc.push(cmdResult);
            }
            return acc;
        }, []);
        if (commandErrors.length) {
            result.componentErrors = commandErrors;
            result.ok = false;
        }
    }
    result.ok = result.ok && result.errorList.length === 0;
    return result;
}
exports.dmValidateTransition = dmValidateTransition;
exports.dmGetNonConditionalTransitionsForEventId = function (state, props) {
    var transitionsById = state.transitions.transitionsById;
    return Object.keys(transitionsById).filter(function (id) {
        var transition = transitionsById[id];
        return transition.eventId === props.id && lodash_1.isNil(transition.condition);
    });
};
exports.dmGetSortedTransitionStatesForEventId = function (state, props) {
    var transitionsById = state.transitions.transitionsById;
    var defaultTransitionId = exports.dmGetNonConditionalTransitionsForEventId(state, props).slice(0, 1);
    var transitionIds = dmGetConditionalTransitionIdsForEvent(state, props).concat(defaultTransitionId);
    if (transitionIds.length > 0) {
        return transitionIds.map(function (id) { return transitionsById[id]; });
    }
    return null;
};
function dmGetTransitionIdsForSign(state) {
    return Object.keys(state.transitions.transitionsById);
}
exports.dmGetTransitionIdsForSign = dmGetTransitionIdsForSign;


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmState_1 = __webpack_require__(5);
var actionBase_1 = __webpack_require__(8);
var actionAssetHelper_1 = __webpack_require__(11);
var actionAssetMap_1 = __webpack_require__(9);
var bsDmInterfaces_1 = __webpack_require__(2);
var utils_1 = __webpack_require__(3);
var bsDmError_1 = __webpack_require__(4);
var selectors_1 = __webpack_require__(6);
var lodash_1 = __webpack_require__(0);
exports.PUT_LINKED_PRESENTATION = 'DM_PUT_LINKED_PRESENTATION';
exports.UPDATE_LINKED_PRESENTATION = 'DM_UPDATE_LINKED_PRESENTATION';
exports.REMOVE_LINKED_PRESENTATION = 'DM_REMOVE_LINKED_PRESENTATION';
function dmPutLinkedPresentation(name, assetItem, validate) {
    if (validate === void 0) { validate = true; }
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.PUT_LINKED_PRESENTATION,
            payload: {
                id: utils_1.newBsDmId(),
                name: name != null ? name : '',
                assetId: bsDmInterfaces_1.BsDmIdNone,
            },
        };
        if (validate) {
            if (!name) {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Presentation name cannot be empty');
            }
        }
        var batchedActions = [];
        if (bscore_1.bscIsAssetItem(assetItem) && assetItem.assetType === bscore_1.AssetType.Project) {
            var dmState = bsDmState_1.dmFilterDmState(getState());
            var preparedAssetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, assetItem, mainAction);
            var assetAction = actionAssetMap_1.dmPutAssetItem(preparedAssetItem);
            batchedActions.push(assetAction);
            mainAction.payload.assetId = preparedAssetItem.id;
        }
        else if (validate) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Presentation AssetItem is not valid');
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmPutLinkedPresentation = dmPutLinkedPresentation;
function dmPutLinkedPresentationWithoutValidation(name, assetItem) {
    return dmPutLinkedPresentation(name, assetItem, false);
}
exports.dmPutLinkedPresentationWithoutValidation = dmPutLinkedPresentationWithoutValidation;
function dmUpdateLinkedPresentation(params, validate) {
    if (validate === void 0) { validate = true; }
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.UPDATE_LINKED_PRESENTATION,
            payload: { id: params.id },
        };
        if (params.name) {
            mainAction.payload.name = params.name;
        }
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var existingFile = selectors_1.dmGetLinkedPresentationStateById(dmState, { id: params.id });
        var existingAssetItem = lodash_1.isNil(existingFile) ? null : selectors_1.dmGetAssetItemById(dmState, { id: existingFile.assetId });
        if (params.assetItem && (lodash_1.isNil(existingAssetItem) || params.assetItem.locator !== existingAssetItem.locator)) {
            if (!lodash_1.isNil(existingFile)) {
                batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(existingFile.assetId));
            }
            var preparedAssetItem = actionAssetHelper_1.dmPrepareAssetItem(dmState, params.assetItem, mainAction);
            batchedActions.push(actionAssetMap_1.dmPutAssetItem(preparedAssetItem));
            mainAction.payload.assetId = preparedAssetItem.id;
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmUpdateLinkedPresentation = dmUpdateLinkedPresentation;
function dmUpdateLinkedPresentationWithoutValidation(params) {
    return dmUpdateLinkedPresentation(params, false);
}
exports.dmUpdateLinkedPresentationWithoutValidation = dmUpdateLinkedPresentationWithoutValidation;
function dmRemoveLinkedPresentation(id) {
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.REMOVE_LINKED_PRESENTATION,
            payload: { id: id },
        };
        var batchedActions = [];
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var presentation = dmState.linkedPresentations[id];
        if (utils_1.isValidBsDmId(presentation.assetId)) {
            batchedActions.push(actionAssetMap_1.dmRemoveAssetItems(presentation.assetId));
        }
        batchedActions.push(mainAction);
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmRemoveLinkedPresentation = dmRemoveLinkedPresentation;


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmState_1 = __webpack_require__(5);
var bsDmDataFeed_1 = __webpack_require__(18);
var actionDataFeed_1 = __webpack_require__(20);
var actionHtmlSite_1 = __webpack_require__(26);
var actionMediaState_1 = __webpack_require__(12);
var actionCommand_1 = __webpack_require__(29);
var selectors_1 = __webpack_require__(6);
var actionBase_1 = __webpack_require__(8);
var bsDmParameterizedStrings_1 = __webpack_require__(14);
var bsDmParameterizedNumbers_1 = __webpack_require__(25);
var bsDmError_1 = __webpack_require__(4);
var actionAssetMap_1 = __webpack_require__(9);
var actionAuxiliaryFile_1 = __webpack_require__(40);
var actionCustomAutorun_1 = __webpack_require__(41);
var actionDataFeed_2 = __webpack_require__(20);
var actionDeviceWebPage_1 = __webpack_require__(42);
var actionEvent_1 = __webpack_require__(17);
var actionHtmlSite_2 = __webpack_require__(26);
var actionMediaState_2 = __webpack_require__(12);
var actionMediaSequence_1 = __webpack_require__(43);
var actionPartnerProduct_1 = __webpack_require__(45);
var actionParserPlugin_1 = __webpack_require__(44);
var actionScriptPlugin_1 = __webpack_require__(46);
var actionSign_1 = __webpack_require__(7);
var actionTransition_1 = __webpack_require__(22);
var actionCommand_2 = __webpack_require__(29);
var actionUserVariable_1 = __webpack_require__(30);
var actionLiveText_1 = __webpack_require__(27);
var actionZone_1 = __webpack_require__(15);
var actionThumbnail_1 = __webpack_require__(47);
var lodash_1 = __webpack_require__(0);
exports.VALIDATE_SIGN_CONSISTENCY = 'DM_VALIDATE_SIGN_CONSISTENCY';
function dmValidateSignConsistency() {
    return function (dispatch, getState) {
        var report = { errors: [], undefinedUserVariableNames: [] };
        var addError = function (type, elementId, elementName, userVariableNames, message) {
            var _a;
            if (userVariableNames === void 0) { userVariableNames = []; }
            if (message === void 0) { message = ''; }
            report.errors.push({ type: type, elementId: elementId, elementName: elementName, message: message });
            (_a = report.undefinedUserVariableNames).push.apply(_a, userVariableNames);
        };
        var mainAction = { type: exports.VALIDATE_SIGN_CONSISTENCY, payload: null };
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var batchedActions = [];
        var dmps;
        var dmpn;
        var rpt;
        var htmlSiteIds = selectors_1.dmGetHtmlSiteIdsForSign(dmState);
        htmlSiteIds.forEach(function (htmlSiteId) {
            var htmlSiteState = dmState.htmlSites[htmlSiteId];
            var updateParams = {};
            if (htmlSiteState.type === bscore_1.HtmlSiteType.Remote) {
                dmps = selectors_1.dmResolveParameterizedStringUserVariables(dmState, { paramString: htmlSiteState.url });
                rpt = bsDmParameterizedStrings_1.dmAreParameterizedStringUserVariablesResolved(dmps);
                if (!rpt.ok) {
                    addError(bsDmError_1.DmErrorType.userVariableNameNotFound, htmlSiteId, htmlSiteState.name, rpt.undefinedUserVariableNames, 'Invalid user variable name in HTML Site URL');
                }
                else if (!bsDmParameterizedStrings_1.dmIsEqualParameterizedString(dmps, htmlSiteState.url)) {
                    updateParams.url = dmps;
                }
            }
            dmps = selectors_1.dmResolveParameterizedStringUserVariables(dmState, { paramString: htmlSiteState.queryString });
            rpt = bsDmParameterizedStrings_1.dmAreParameterizedStringUserVariablesResolved(dmps);
            if (!rpt.ok) {
                addError(bsDmError_1.DmErrorType.userVariableNameNotFound, htmlSiteId, htmlSiteState.name, rpt.undefinedUserVariableNames, 'Invalid user variable name in HTML Site query string');
            }
            else if (!bsDmParameterizedStrings_1.dmIsEqualParameterizedString(dmps, htmlSiteState.queryString)) {
                updateParams.queryString = dmps;
            }
            if (Object.keys(updateParams).length > 0) {
                updateParams.id = htmlSiteId;
                batchedActions.push(actionHtmlSite_1.dmUpdateHtmlSiteWithoutAssetProcessing(updateParams));
            }
        });
        var dataFeedSourceIds = selectors_1.dmGetDataFeedSourceIdsForSign(dmState);
        dataFeedSourceIds.forEach(function (feedSourceId) {
            var feedSource = dmState.dataFeeds.sourcesById[feedSourceId];
            if (bsDmDataFeed_1.dmIsDataFeedSourceRemoteDataFeed(feedSource)) {
                dmps = selectors_1.dmResolveParameterizedStringUserVariables(dmState, { paramString: feedSource.url });
                rpt = bsDmParameterizedStrings_1.dmAreParameterizedStringUserVariablesResolved(dmps);
                if (!rpt.ok) {
                    addError(bsDmError_1.DmErrorType.userVariableNameNotFound, feedSourceId, '', rpt.undefinedUserVariableNames, 'Invalid user variable name in Data Feed Source URL');
                }
                else if (!bsDmParameterizedStrings_1.dmIsEqualParameterizedString(dmps, feedSource.url)) {
                    batchedActions.push(actionDataFeed_1.dmUpdateDataFeedSource({ id: feedSourceId, url: dmps }));
                }
            }
        });
        var mediaStateIds = selectors_1.dmGetMediaStateIdsForSign(dmState);
        mediaStateIds.forEach(function (mediaStateId) {
            var mediaState = dmState.mediaStates.mediaStatesById[mediaStateId];
            if (mediaState.contentItem.type === bscore_1.ContentItemType.VideoStream
                || mediaState.contentItem.type === bscore_1.ContentItemType.AudioStream
                || mediaState.contentItem.type === bscore_1.ContentItemType.MjpegStream) {
                var streamContentItem = mediaState.contentItem;
                dmps = selectors_1.dmResolveParameterizedStringUserVariables(dmState, { paramString: streamContentItem.url });
                rpt = bsDmParameterizedStrings_1.dmAreParameterizedStringUserVariablesResolved(dmps);
                if (!rpt.ok) {
                    addError(bsDmError_1.DmErrorType.userVariableNameNotFound, mediaStateId, mediaState.name, rpt.undefinedUserVariableNames, 'Invalid user variable name in URL for Stream content');
                }
                else if (!bsDmParameterizedStrings_1.dmIsEqualParameterizedString(dmps, streamContentItem.url)) {
                    var contentItem = Object.assign({}, streamContentItem, { url: dmps });
                    batchedActions.push(actionMediaState_1.dmUpdateMediaStateContentItem(mediaStateId, contentItem));
                }
            }
        });
        var commandIds = selectors_1.dmGetCommandIdsForSign(dmState);
        commandIds.forEach(function (commandId) {
            var command = dmState.commands.commandsById[commandId];
            var updateParams = { id: commandId, operations: lodash_1.cloneDeep(command.operations) };
            var updateCommand = false;
            updateParams.operations.forEach(function (commandOperation) {
                if (!lodash_1.isNil(commandOperation.data)) {
                    var operationData_1 = commandOperation.data;
                    bsDmInterfaces_1.DmParameterizedStringCommandPropertyNames.forEach(function (propName) {
                        if (operationData_1.hasOwnProperty(propName)) {
                            dmps = selectors_1.dmResolveParameterizedStringUserVariables(dmState, { paramString: operationData_1[propName] });
                            rpt = bsDmParameterizedStrings_1.dmAreParameterizedStringUserVariablesResolved(dmps);
                            if (!rpt.ok) {
                                addError(bsDmError_1.DmErrorType.userVariableNameNotFound, commandId, command.name + '[' + propName + ']', rpt.undefinedUserVariableNames, 'Invalid user variable name in command data');
                            }
                            else if (!bsDmParameterizedStrings_1.dmIsEqualParameterizedString(dmps, operationData_1[propName])) {
                                operationData_1[propName] = dmps;
                                updateCommand = true;
                            }
                        }
                    });
                    bsDmInterfaces_1.DmParameterizedNumberCommandPropertyNames.forEach(function (propName) {
                        if (operationData_1.hasOwnProperty(propName)) {
                            dmpn = selectors_1.dmResolveParameterizedNumberUserVariables(dmState, { paramNumber: operationData_1[propName] });
                            rpt = bsDmParameterizedNumbers_1.dmIsParameterizedNumberUserVariableResolved(dmpn);
                            if (!rpt.ok) {
                                addError(bsDmError_1.DmErrorType.userVariableNameNotFound, commandId, command.name + '[' + propName + ']', rpt.undefinedUserVariableNames, 'Invalid user variable name in command data');
                            }
                            else if (!bsDmParameterizedNumbers_1.dmIsEqualParameterizedNumber(dmpn, operationData_1[propName])) {
                                operationData_1[propName] = dmpn;
                                updateCommand = true;
                            }
                        }
                    });
                }
            });
            if (updateCommand) {
                batchedActions.push(actionCommand_1.dmUpdateCommandAction(updateParams));
            }
        });
        if (report.errors.length > 0) {
            mainAction.error = true;
            report.undefinedUserVariableNames = lodash_1.uniq(report.undefinedUserVariableNames);
            mainAction.meta = { report: report };
        }
        else if (batchedActions.length > 0) {
            dispatch(actionBase_1.dmBatchActions(batchedActions));
        }
        return mainAction;
    };
}
exports.dmValidateSignConsistency = dmValidateSignConsistency;
exports.modifyingActionTypesArray = [
    actionAssetMap_1.PUT_ASSET_ITEM, actionAssetMap_1.REMOVE_ASSET_ITEMS, actionAssetMap_1.UPDATE_ASSET_LOCATION,
    actionAuxiliaryFile_1.PUT_AUX_FILE, actionAuxiliaryFile_1.UPDATE_AUX_FILE, actionAuxiliaryFile_1.REMOVE_AUX_FILES,
    actionCustomAutorun_1.SET_CUSTOM_AUTORUN,
    actionDataFeed_2.ADD_DATA_FEED, actionDataFeed_2.UPDATE_DATA_FEED, actionDataFeed_2.DELETE_DATA_FEED,
    actionDataFeed_2.PUT_DATA_FEED_SOURCE, actionDataFeed_2.UPDATE_DATA_FEED_SOURCE, actionDataFeed_2.REMOVE_DATA_FEED_SOURCE,
    actionDeviceWebPage_1.ADD_DEVICE_WEB_PAGE, actionDeviceWebPage_1.UPDATE_DEVICE_WEB_PAGE, actionDeviceWebPage_1.DELETE_DEVICE_WEB_PAGE,
    actionEvent_1.ADD_EVENT, actionEvent_1.ADD_MULTIPLE_EVENTS, actionEvent_1.UPDATE_EVENT, actionEvent_1.DELETE_EVENT,
    actionHtmlSite_2.ADD_HTML_SITE, actionHtmlSite_2.UPDATE_HTML_SITE, actionHtmlSite_2.DELETE_HTML_SITE,
    actionLiveText_1.ADD_LIVE_TEXT_CANVAS, actionLiveText_1.UPDATE_LIVE_TEXT_CANVAS, actionLiveText_1.DELETE_LIVE_TEXT_CANVAS,
    actionLiveText_1.ADD_LIVE_TEXT_ITEM, actionLiveText_1.UPDATE_LIVE_TEXT_ITEM, actionLiveText_1.DELETE_LIVE_TEXT_ITEM,
    actionLiveText_1.ADD_LIVE_TEXT_DATA_FEED_GROUP, actionLiveText_1.UPDATE_LIVE_TEXT_DATA_FEED_GROUP,
    actionLiveText_1.ADD_LIVE_TEXT_DATA_FEED, actionLiveText_1.MOVE_LIVE_TEXT_DATA_FEED, actionLiveText_1.DELETE_LIVE_TEXT_DATA_FEED,
    actionMediaState_2.ADD_MEDIA_STATE, actionMediaState_2.ADD_SEQUENCED_MEDIA_STATE, actionMediaState_2.UPDATE_MEDIA_STATE, actionMediaState_2.DELETE_MEDIA_STATE,
    actionMediaSequence_1.MEDIASEQUENCE_MOVE_ITEM_INDICES,
    actionPartnerProduct_1.ADD_PARTNER_PRODUCT, actionPartnerProduct_1.UPDATE_PARTNER_PRODUCT, actionPartnerProduct_1.DELETE_PARTNER_PRODUCT,
    actionParserPlugin_1.ADD_PARSER_PLUGIN, actionParserPlugin_1.UPDATE_PARSER_PLUGIN, actionParserPlugin_1.REMOVE_PARSER_PLUGIN,
    actionScriptPlugin_1.ADD_SCRIPT_PLUGIN, actionScriptPlugin_1.UPDATE_SCRIPT_PLUGIN, actionScriptPlugin_1.REMOVE_SCRIPT_PLUGIN,
    actionTransition_1.ADD_TRANSITION, actionTransition_1.ADD_CONDITIONAL_TRANSITION, actionTransition_1.UPDATE_TRANSITION,
    actionTransition_1.UPDATE_TRANSITION_CONDITION, actionTransition_1.MOVE_TRANSITION_CONDITION, actionTransition_1.DELETE_TRANSITION,
    actionCommand_2.ADD_COMMAND, actionCommand_2.UPDATE_COMMAND, actionCommand_2.MOVE_COMMAND, actionCommand_2.DELETE_COMMAND,
    actionUserVariable_1.ADD_USER_VARIABLE, actionUserVariable_1.UPDATE_USER_VARIABLE, actionUserVariable_1.MOVE_USER_VARIABLES, actionUserVariable_1.DELETE_USER_VARIABLE,
    exports.VALIDATE_SIGN_CONSISTENCY,
    actionZone_1.ADD_ZONE, actionZone_1.UPDATE_ZONE, actionZone_1.UPDATE_ZONE_PROPS, actionZone_1.DELETE_ZONE,
    actionSign_1.NEW_SIGN, actionSign_1.UPDATE_SIGN_PROPS, actionSign_1.UPDATE_SIGN_SERIAL_PORTS,
    actionSign_1.UPDATE_SIGN_GPIO, actionSign_1.UPDATE_SIGN_BPMAP, actionSign_1.UPDATE_SIGN_AUDIO_CONFIG,
    actionThumbnail_1.SET_THUMBNAIL,
];
exports.modifyingActionTypesSet = new Set(exports.modifyingActionTypesArray);
function dmActionModifiesDmState(action) {
    return exports.modifyingActionTypesSet.has(action.type);
}
exports.dmActionModifiesDmState = dmActionModifiesDmState;


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bsDmDefaults_1 = __webpack_require__(16);
var bsDmVersion_1 = __webpack_require__(48);
exports.createDefaultSignState = function (id, name, videoMode, model) {
    return ({
        properties: exports.createDefaultSignProperties(id, name, videoMode, model),
        serialPortConfigurations: bsDmDefaults_1.dmGetDefaultSerialPortList(),
        gpio: bsDmDefaults_1.dmGetDefaultGpioList(),
        buttonPanels: bsDmDefaults_1.dmGetDefaultButtonPanelMap(),
        audioSignPropertyMap: bsDmDefaults_1.dmGetDefaultAudioSignPropertyMap(),
        lastModifiedTime: new Date(),
    });
};
exports.createDefaultSignProperties = function (id, name, videoMode, model) {
    var optionals = videoMode !== undefined ? { videoMode: videoMode } : {};
    if (model !== undefined) {
        Object.assign(optionals, { model: model });
    }
    return Object.assign({ id: id, version: bsDmVersion_1.version, name: name }, bsDmDefaults_1.dmGetDefaultSignPropertyData(), optionals);
};


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bsDmInterfaces_1 = __webpack_require__(2);
var bscore_1 = __webpack_require__(1);
var bsDmClasses_1 = __webpack_require__(10);
var selectorAssetMap_1 = __webpack_require__(23);
var lodash_1 = __webpack_require__(0);
function dmCreateDmcDeviceWebPage(state, props) {
    var deviceWebPageState = state.deviceWebPages[props.id];
    if (!lodash_1.isNil(deviceWebPageState)) {
        return new bsDmClasses_1.DmcDeviceWebPage(deviceWebPageState, selectorAssetMap_1.dmGetAssetItemById(state, { id: deviceWebPageState.indexAssetId }));
    }
    return null;
}
function dmGetDeviceWebPageById(state, props) {
    return dmCreateDmcDeviceWebPage(state, props);
}
exports.dmGetDeviceWebPageById = dmGetDeviceWebPageById;
function dmGetDeviceWebPageIds(state) {
    return Object.keys(state.deviceWebPages);
}
exports.dmGetDeviceWebPageIds = dmGetDeviceWebPageIds;
function dmGetDeviceWebPageByName(state, props) {
    var deviceWebPageState = state.deviceWebPages;
    var id = lodash_1.find(Object.keys(deviceWebPageState), function (siteId) { return deviceWebPageState[siteId].name === props.name; });
    return id ? dmCreateDmcDeviceWebPage(state, { id: id }) : null;
}
exports.dmGetDeviceWebPageByName = dmGetDeviceWebPageByName;
function dmGetDeviceWebPageForPort(state, props) {
    var deviceWebPageState = state.deviceWebPages;
    var id = lodash_1.find(Object.keys(deviceWebPageState), function (siteId) { return deviceWebPageState[siteId].port === props.port; });
    return id ? dmCreateDmcDeviceWebPage(state, { id: id }) : null;
}
exports.dmGetDeviceWebPageForPort = dmGetDeviceWebPageForPort;
function dmGetDeviceWebPageIdByAssetId(state, props) {
    var deviceWebPageState = state.deviceWebPages;
    var deviceWebPageId = lodash_1.find(Object.keys(deviceWebPageState), function (id) { return deviceWebPageState[id].indexAssetId === props.id; });
    return lodash_1.isNil(deviceWebPageId) ? bsDmInterfaces_1.BsDmIdNone : deviceWebPageId;
}
exports.dmGetDeviceWebPageIdByAssetId = dmGetDeviceWebPageIdByAssetId;
function dmGetPresentationWebPage(state) {
    var mode = state.sign.properties.deviceWebPageDisplay;
    if (mode === bscore_1.DeviceWebPageDisplay.Custom) {
        var deviceWebPageState_1 = state.deviceWebPages;
        var id = lodash_1.find(Object.keys(deviceWebPageState_1), function (siteId) { return deviceWebPageState_1[siteId].port === 0; });
        if (id) {
            var deviceWebPageItem = deviceWebPageState_1[id];
            var assetItem = selectorAssetMap_1.dmGetAssetItemById(state, { id: deviceWebPageItem.indexAssetId });
            return new bsDmClasses_1.DmcPresentationWebPage(mode, deviceWebPageItem, assetItem);
        }
        mode = bscore_1.DeviceWebPageDisplay.None;
    }
    return new bsDmClasses_1.DmcPresentationWebPage(mode);
}
exports.dmGetPresentationWebPage = dmGetPresentationWebPage;


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmClasses_1 = __webpack_require__(10);
var selectorAssetMap_1 = __webpack_require__(23);
var lodash_1 = __webpack_require__(0);
function dmCreateDmcHtmlSite(state, props) {
    var htmlSiteState = state.htmlSites[props.id];
    if (!lodash_1.isNil(htmlSiteState)) {
        return new bsDmClasses_1.DmcHtmlSite(htmlSiteState, selectorAssetMap_1.dmGetAssetItemById(state, { id: htmlSiteState.indexAssetId }));
    }
    return null;
}
function dmGetHtmlSiteById(state, props) {
    return dmCreateDmcHtmlSite(state, props);
}
exports.dmGetHtmlSiteById = dmGetHtmlSiteById;
function dmGetHtmlSiteStateById(state, props) {
    var htmlSiteState = state.htmlSites[props.id];
    return lodash_1.isNil(htmlSiteState) ? null : htmlSiteState;
}
exports.dmGetHtmlSiteStateById = dmGetHtmlSiteStateById;
function dmGetHtmlSiteIdsForSign(state) {
    return Object.keys(state.htmlSites);
}
exports.dmGetHtmlSiteIdsForSign = dmGetHtmlSiteIdsForSign;
function dmGetHtmlSiteByName(state, props) {
    var htmlSites = state.htmlSites;
    var id = lodash_1.find(Object.keys(htmlSites), function (siteId) { return htmlSites[siteId].name === props.name; });
    return lodash_1.isNil(id) ? null : dmCreateDmcHtmlSite(state, { id: id });
}
exports.dmGetHtmlSiteByName = dmGetHtmlSiteByName;
function dmGetHtmlSiteIdByAssetId(state, props) {
    var htmlSites = state.htmlSites;
    var htmlSiteId = lodash_1.find(Object.keys(htmlSites), function (id) { return htmlSites[id].type === 'Hosted' && htmlSites[id].indexAssetId === props.id; });
    return lodash_1.isNil(htmlSiteId) ? bsDmInterfaces_1.BsDmIdNone : htmlSiteId;
}
exports.dmGetHtmlSiteIdByAssetId = dmGetHtmlSiteIdByAssetId;


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var bsDmInterfaces_1 = __webpack_require__(2);
var bscore_1 = __webpack_require__(1);
var bsDmLiveText_1 = __webpack_require__(28);
var selectorAssetMap_1 = __webpack_require__(23);
var selectorUserVariable_1 = __webpack_require__(37);
var selectorDataFeed_1 = __webpack_require__(31);
var selectorValidation_1 = __webpack_require__(32);
var bsDmError_1 = __webpack_require__(4);
var utils_1 = __webpack_require__(3);
var lodash_1 = __webpack_require__(0);
var reselect_1 = __webpack_require__(24);
function dmCreateDmcLiveTextItem(state, itemId, itemIndex) {
    var liveTextItem = dmGetLiveTextItemStateById(state, { id: itemId });
    if (!lodash_1.isNil(liveTextItem)) {
        switch (liveTextItem.type) {
            case bsDmInterfaces_1.LiveTextItemType.StaticText: {
                return new bsDmLiveText_1.DmcStaticLiveTextItem(liveTextItem, itemIndex);
            }
            case bsDmInterfaces_1.LiveTextItemType.SystemVariable: {
                return new bsDmLiveText_1.DmcSystemVariableLiveTextItem(liveTextItem, itemIndex);
            }
            case bsDmInterfaces_1.LiveTextItemType.MediaCounter: {
                var assetId = liveTextItem.assetId;
                var assetItem = lodash_1.isNil(assetId) ? null : selectorAssetMap_1.dmGetAssetItemById(state, { id: assetId });
                return new bsDmLiveText_1.DmcMediaCounterLiveTextItem(liveTextItem, itemIndex, assetItem);
            }
            case bsDmInterfaces_1.LiveTextItemType.UserVariable: {
                var uvIdOrName = liveTextItem.userVariableIdOrName;
                var userVariable = null;
                if (utils_1.isValidBsDmId(uvIdOrName)) {
                    userVariable = selectorUserVariable_1.dmGetUserVariableById(state, { id: uvIdOrName });
                }
                return new bsDmLiveText_1.DmcUserVariableLiveTextItem(liveTextItem, itemIndex, userVariable);
            }
            case bsDmInterfaces_1.LiveTextItemType.Image: {
                var assetId = liveTextItem.assetId;
                var assetItem = lodash_1.isNil(assetId) ? null : selectorAssetMap_1.dmGetAssetItemById(state, { id: assetId });
                return new bsDmLiveText_1.DmcImageLiveTextItem(liveTextItem, itemIndex, assetItem);
            }
            case bsDmInterfaces_1.LiveTextItemType.TitledDataFeed:
            case bsDmInterfaces_1.LiveTextItemType.IndexedDataFeed: {
                var dataFeedObjects = selectorDataFeed_1.dmGetDataFeedStateEntitiesByFeedId(state, { id: liveTextItem.dataFeedId });
                if (liveTextItem.type === bsDmInterfaces_1.LiveTextItemType.TitledDataFeed) {
                    return new bsDmLiveText_1.DmcTitledDataFeedTextItem(liveTextItem, itemIndex, dataFeedObjects);
                }
                else {
                    return new bsDmLiveText_1.DmcIndexedDataFeedTextItem(liveTextItem, itemIndex, dataFeedObjects);
                }
            }
            case bsDmInterfaces_1.LiveTextItemType.SimpleRss: {
                var dataFeedGroup = dmGetLiveTextDataFeedGroupByGroupId(state, { id: liveTextItem.groupId });
                var displayTime = lodash_1.isNil(dataFeedGroup) ? 5 : dataFeedGroup.displayTime;
                return new bsDmLiveText_1.DmcSimpleRssTextItem(liveTextItem, itemIndex, displayTime);
            }
            case bsDmInterfaces_1.LiveTextItemType.MediaRssText: {
                return new bsDmLiveText_1.DmcMediaRssTextItem(liveTextItem, itemIndex);
            }
            case bsDmInterfaces_1.LiveTextItemType.MediaRssMedia: {
                return new bsDmLiveText_1.DmcMediaRssMediaItem(liveTextItem, itemIndex);
            }
        }
    }
    return null;
}
function dmGetLiveTextCanvasStateById(state, props) {
    var liveTextCanvasState = state.liveText.canvasesById[props.id];
    return lodash_1.isNil(liveTextCanvasState) ? null : liveTextCanvasState;
}
exports.dmGetLiveTextCanvasStateById = dmGetLiveTextCanvasStateById;
function dmGetLiveTextCanvasById(state, props) {
    var getLiveTextCanvas = reselect_1.createSelector(dmGetLiveTextCanvasStateById, dmGetLiveTextLayerSequenceForCanvas, dmGetLiveTextLayerActiveIndexArrayForCanvas, dmGetLiveTextItemGroupDataFeedMapForCanvas, function (dmState) { return dmState.assetMap; }, function (canvas, sequence, layerIndexArray, dataFeedMap, assetMap) {
        if (!lodash_1.isNil(canvas)) {
            var itemIdList = lodash_1.isNil(sequence) ? [] : sequence;
            var itemMap_1 = lodash_1.isNil(sequence) ? {} :
                sequence.reduce(function (map, itemId, index) {
                    var item = dmGetLiveTextItemStateById(state, { id: itemId });
                    if (!lodash_1.isNil(item)) {
                        var itemIndex = lodash_1.isNil(layerIndexArray) ? index :
                            layerIndexArray[index] >= 0 ? layerIndexArray[index] + 1 : -1;
                        map[itemId] = dmCreateDmcLiveTextItem(state, itemId, itemIndex);
                    }
                    return map;
                }, {});
            var groupedTextItemMap_1 = itemIdList.reduce(function (map, itemId) {
                var item = itemMap_1[itemId];
                if (bsDmLiveText_1.dmIsDmcLiveTextItemGroupedDataFeedItem(item) && item.type !== bsDmInterfaces_1.LiveTextItemType.MediaRssMedia) {
                    if (lodash_1.isNil(map[item.groupId])) {
                        map[item.groupId] = [item];
                    }
                    else {
                        map[item.groupId].push(item);
                    }
                }
                return map;
            }, {});
            var groupedMediaItemMap_1 = itemIdList.reduce(function (map, itemId) {
                var item = itemMap_1[itemId];
                if (bsDmLiveText_1.dmIsDmcLiveTextItemMediaRssMediaItem(item)) {
                    map[item.groupId] = item;
                }
                return map;
            }, {});
            itemIdList.forEach(function (itemId) {
                var item = itemMap_1[itemId];
                if (bsDmLiveText_1.dmIsDmcLiveTextItemGroupedDataFeedItem(item)) {
                    var groupId = item.groupId;
                    var groupIds = groupedTextItemMap_1[groupId];
                    if (bsDmLiveText_1.dmIsDmcLiveTextItemSimpleRssItem(item)) {
                        item.groupTextItems = lodash_1.without(groupIds, item);
                    }
                    else if (bsDmLiveText_1.dmIsDmcLiveTextItemMediaRssTextItem(item)) {
                        item.groupTextItems = lodash_1.without(groupIds, item);
                        item.mediaItem = groupedMediaItemMap_1[groupId];
                    }
                    else if (bsDmLiveText_1.dmIsDmcLiveTextItemMediaRssMediaItem(item)) {
                        item.groupTextItems = groupIds;
                    }
                    item.dataFeeds = dataFeedMap[groupId];
                }
            });
            var backgroundImageAsset = utils_1.isValidBsDmId(canvas.backgroundImageId) ? assetMap[canvas.backgroundImageId] : null;
            return new bsDmLiveText_1.DmcLiveTextCanvas(canvas, itemMap_1, groupedTextItemMap_1, groupedMediaItemMap_1, dataFeedMap, backgroundImageAsset);
        }
        return null;
    });
    return getLiveTextCanvas(state, props);
}
exports.dmGetLiveTextCanvasById = dmGetLiveTextCanvasById;
function dmGetLiveTextCanvasIdsForSign(state) {
    return Object.keys(state.liveText.canvasesById);
}
exports.dmGetLiveTextCanvasIdsForSign = dmGetLiveTextCanvasIdsForSign;
function dmGetLiveTextLayerSequenceForCanvas(state, props) {
    var layerSequence = state.liveText.layersByCanvasId[props.id];
    return lodash_1.isNil(layerSequence) ? null : layerSequence;
}
exports.dmGetLiveTextLayerSequenceForCanvas = dmGetLiveTextLayerSequenceForCanvas;
function dmGetLiveTextLayerActiveIndexArrayForCanvas(state, props) {
    var layerSequence = state.liveText.layersByCanvasId[props.id];
    var layerIndex = 0;
    return lodash_1.isNil(layerSequence) ? null :
        layerSequence.map(function (id) {
            var item = state.liveText.itemsById[id];
            var itemIndex = -1;
            if (!lodash_1.isNil(item)) {
                var itemEnabled = bsDmLiveText_1.dmIsLiveTextDataGroupedDataFeedItem(item) ? item.enabled : true;
                if (itemEnabled) {
                    itemIndex = layerIndex;
                    layerIndex += 1;
                }
                return itemIndex;
            }
        });
}
exports.dmGetLiveTextLayerActiveIndexArrayForCanvas = dmGetLiveTextLayerActiveIndexArrayForCanvas;
function dmGetLiveTextItemStateById(state, props) {
    var liveTextItemState = state.liveText.itemsById[props.id];
    return lodash_1.isNil(liveTextItemState) ? null : liveTextItemState;
}
exports.dmGetLiveTextItemStateById = dmGetLiveTextItemStateById;
function dmGetAllLiveTextItemIdsForCanvas(state, props) {
    var items = state.liveText.itemsById;
    return Object.keys(items)
        .filter(function (id) { return items[id].canvasId === props.id; });
}
exports.dmGetAllLiveTextItemIdsForCanvas = dmGetAllLiveTextItemIdsForCanvas;
function dmGetAllLiveTextGroupIdsForCanvas(state, props) {
    var dataFeedSequences = state.liveText.dataFeedsByGroupId;
    return Object.keys(dataFeedSequences)
        .filter(function (id) { return dataFeedSequences[id].canvasId === props.id; });
}
exports.dmGetAllLiveTextGroupIdsForCanvas = dmGetAllLiveTextGroupIdsForCanvas;
function dmGetCanvasMediaRssGroupIds(state, props) {
    var dataFeedSequences = state.liveText.dataFeedsByGroupId;
    return Object.keys(dataFeedSequences)
        .filter(function (id) { return dataFeedSequences[id].canvasId === props.id
        && dataFeedSequences[id].usage === bscore_1.DataFeedUsageType.Mrss; });
}
exports.dmGetCanvasMediaRssGroupIds = dmGetCanvasMediaRssGroupIds;
function dmGetAllLiveTextItemIdsForGroup(state, props) {
    var items = state.liveText.itemsById;
    return Object.keys(items)
        .filter(function (id) {
        var item = items[id];
        return bsDmLiveText_1.dmIsLiveTextDataGroupedDataFeedItem(item) && item.groupId === props.id;
    });
}
exports.dmGetAllLiveTextItemIdsForGroup = dmGetAllLiveTextItemIdsForGroup;
function dmGetLiveTextItemGroupDataFeedMapForCanvas(state, props) {
    var dataFeedSequences = state.liveText.dataFeedsByGroupId;
    return Object.keys(dataFeedSequences).reduce(function (map, groupId) {
        var sequenceObject = dataFeedSequences[groupId];
        if (sequenceObject.canvasId === props.id) {
            map[groupId] = sequenceObject.dataFeedIds.map(function (id) { return selectorDataFeed_1.dmGetDataFeedById(state, { id: id }); });
        }
        return map;
    }, {});
}
exports.dmGetLiveTextItemGroupDataFeedMapForCanvas = dmGetLiveTextItemGroupDataFeedMapForCanvas;
function dmGetLiveTextDataFeedGroupByGroupId(state, props) {
    var dataFeedSequence = state.liveText.dataFeedsByGroupId[props.id];
    return lodash_1.isNil(dataFeedSequence) ? null : dataFeedSequence;
}
exports.dmGetLiveTextDataFeedGroupByGroupId = dmGetLiveTextDataFeedGroupByGroupId;
function dmValidateLiveTextCanvas(state, props) {
    var entityDetails = { entityType: bsDmInterfaces_1.DmEntityType.LiveText, entityId: props.id };
    var result = bsDmError_1.dmInitializeValidationResult(bsDmInterfaces_1.DmEntityType.LiveText, props.id);
    var validateAssetId = function (assetId, entityProperty) {
        var error = selectorValidation_1.dmValidateAssetId(state, assetId, __assign({}, entityDetails, { entityProperty: entityProperty }));
        if (!lodash_1.isNil(error)) {
            result.errorList.push(error);
        }
    };
    var validateDataFeed = function (dataFeedId, entityProperty) {
        var error = selectorValidation_1.dmValidateEntityDataFeed(state, dataFeedId, __assign({}, entityDetails, { entityProperty: entityProperty }));
        if (!lodash_1.isNil(error)) {
            result.errorList.push(error);
        }
    };
    var liveTextItemIds = dmGetAllLiveTextItemIdsForCanvas(state, props);
    liveTextItemIds.forEach(function (itemId) {
        entityDetails.entityId = itemId;
        var itemState = dmGetLiveTextItemStateById(state, { id: itemId });
        switch (itemState.type) {
            case bsDmInterfaces_1.LiveTextItemType.MediaCounter:
                validateAssetId(itemState.assetId, 'asset');
                break;
            case bsDmInterfaces_1.LiveTextItemType.TitledDataFeed:
            case bsDmInterfaces_1.LiveTextItemType.IndexedDataFeed:
                validateDataFeed(itemState.dataFeedId, 'dataFeed');
                break;
            case bsDmInterfaces_1.LiveTextItemType.SimpleRss:
            case bsDmInterfaces_1.LiveTextItemType.MediaRssText:
            case bsDmInterfaces_1.LiveTextItemType.MediaRssMedia: {
                var dataFeedSequence = dmGetLiveTextDataFeedGroupByGroupId(state, { id: itemState.groupId });
                if (!lodash_1.isNil(dataFeedSequence)) {
                    dataFeedSequence.dataFeedIds.forEach(function (dataFeedId, index) {
                        validateDataFeed(dataFeedId, 'dataFeed.' + (index + 1));
                    });
                }
                break;
            }
        }
    });
    result.ok = result.ok && result.errorList.length === 0;
    return result;
}
exports.dmValidateLiveTextCanvas = dmValidateLiveTextCanvas;


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmContentItems_1 = __webpack_require__(13);
var selectorDataFeed_1 = __webpack_require__(31);
var selectorAssetMap_1 = __webpack_require__(23);
var lodash_1 = __webpack_require__(0);
function dmGetMediaSequenceItemListIds(state, props) {
    var mediaStateSequence = state.mediaStates.sequencesByParentId[props.id];
    if (mediaStateSequence
        && (mediaStateSequence.parentType === bsDmInterfaces_1.MediaStateContainerType.MediaList
            || mediaStateSequence.parentType === bsDmInterfaces_1.MediaStateContainerType.PlayFile)) {
        return mediaStateSequence.sequence;
    }
    return [];
}
exports.dmGetMediaSequenceItemListIds = dmGetMediaSequenceItemListIds;
function dmGetMediaSequenceItemCount(state, props) {
    var mediaStateSequence = state.mediaStates.sequencesByParentId[props.id];
    if (mediaStateSequence
        && (mediaStateSequence.parentType === bsDmInterfaces_1.MediaStateContainerType.MediaList
            || mediaStateSequence.parentType === bsDmInterfaces_1.MediaStateContainerType.PlayFile)) {
        return mediaStateSequence.sequence.length;
    }
    return 0;
}
exports.dmGetMediaSequenceItemCount = dmGetMediaSequenceItemCount;
function dmGetMediaSequenceSourceDataFeed(state, props) {
    var mediaStateState = state.mediaStates.mediaStatesById[props.id];
    if (!lodash_1.isNil(mediaStateState)
        && bsDmContentItems_1.dmContentItemIsMediaListOrPlayFileContentItem(mediaStateState.contentItem)
        && mediaStateState.contentItem.useDataFeed) {
        return selectorDataFeed_1.dmGetDataFeedStateById(state, { id: mediaStateState.contentItem.dataFeedId });
    }
    return null;
}
exports.dmGetMediaSequenceSourceDataFeed = dmGetMediaSequenceSourceDataFeed;
function dmGetPlayFileDefaultMediaAssetItem(state, props) {
    var mediaStateState = state.mediaStates.mediaStatesById[props.id];
    if (mediaStateState && mediaStateState.contentItem.type === bscore_1.ContentItemType.PlayFile) {
        var defaultAssetId = mediaStateState.contentItem.defaultMediaId;
        if (!lodash_1.isNil(defaultAssetId)) {
            return selectorAssetMap_1.dmGetAssetItemById(state, { id: defaultAssetId });
        }
    }
    return null;
}
exports.dmGetPlayFileDefaultMediaAssetItem = dmGetPlayFileDefaultMediaAssetItem;
function dmGetMediaSequenceItemIdByIndex(state, props) {
    var mediaStateSequence = state.mediaStates.sequencesByParentId[props.id];
    var index = props.index;
    if (mediaStateSequence
        && (mediaStateSequence.parentType === bsDmInterfaces_1.MediaStateContainerType.MediaList
            || mediaStateSequence.parentType === bsDmInterfaces_1.MediaStateContainerType.PlayFile)
        && index >= 0 && index < mediaStateSequence.sequence.length) {
        return mediaStateSequence.sequence[index];
    }
    return null;
}
exports.dmGetMediaSequenceItemIdByIndex = dmGetMediaSequenceItemIdByIndex;


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmClasses_1 = __webpack_require__(10);
var bsDmEvents_1 = __webpack_require__(19);
var bsDmContentItems_1 = __webpack_require__(13);
var selectorTransition_1 = __webpack_require__(50);
var selectorCommand_1 = __webpack_require__(36);
var selectorMediaSequence_1 = __webpack_require__(57);
var selectorDataFeed_1 = __webpack_require__(31);
var selectorLiveText_1 = __webpack_require__(56);
var selectorValidation_1 = __webpack_require__(32);
var bsDmError_1 = __webpack_require__(4);
var lodash_1 = __webpack_require__(0);
function dmGetMediaStateStateById(state, props) {
    var mediaState = state.mediaStates.mediaStatesById[props.id];
    return mediaState ? mediaState : null;
}
exports.dmGetMediaStateStateById = dmGetMediaStateStateById;
function dmCreateDmcMediaState(state, props) {
    var mediaStateState = dmGetMediaStateStateById(state, props);
    if (!lodash_1.isNil(mediaStateState)) {
        var components = dmGetMediaStateComponents(state, props);
        if (bsDmContentItems_1.dmContentItemIsMediaListContentItem(mediaStateState.contentItem)) {
            return new bsDmClasses_1.DmcMediaListMediaState(mediaStateState, components, dmGetMediaListComponents(state, props));
        }
        else if (bsDmContentItems_1.dmContentItemIsPlayFileContentItem(mediaStateState.contentItem)) {
            return new bsDmClasses_1.DmcPlayFileMediaState(mediaStateState, components, dmGetPlayFileComponents(state, props));
        }
        else if (bsDmContentItems_1.dmContentItemIsLiveTextContentItem(mediaStateState.contentItem)) {
            return new bsDmClasses_1.DmcLiveTextMediaState(mediaStateState, components, selectorLiveText_1.dmGetLiveTextCanvasById(state, { id: mediaStateState.contentItem.canvasId }));
        }
        return new bsDmClasses_1.DmcMediaState(mediaStateState, components);
    }
    return null;
}
function dmGetMediaStateById(state, props) {
    return dmCreateDmcMediaState(state, props);
}
exports.dmGetMediaStateById = dmGetMediaStateById;
function dmGetMediaStateStateByName(state, props) {
    var mediaStates = state.mediaStates.mediaStatesById;
    var mediaStateId = lodash_1.find(Object.keys(mediaStates), function (id) { return mediaStates[id].name === props.name; });
    return mediaStateId ? mediaStates[mediaStateId] : null;
}
exports.dmGetMediaStateStateByName = dmGetMediaStateStateByName;
function dmGetMediaStateIdsForProps(state, props) {
    var ignoreName = lodash_1.isNil(props.name);
    var ignoreContainerType = lodash_1.isNil(props.containerType);
    var ignoreContentItemType = lodash_1.isNil(props.contentItemType);
    var doSearch = function (containerIds) {
        var ignoreContainerIds = containerIds.length === 0;
        var containerIdSet = new Set(containerIds);
        return Object.keys(state.mediaStates.mediaStatesById).filter(function (id) {
            var mediaState = state.mediaStates.mediaStatesById[id];
            return (ignoreName || props.name === mediaState.name)
                && (ignoreContainerIds || containerIdSet.has(mediaState.container.id))
                && (ignoreContainerType || props.containerType === mediaState.container.type)
                && (ignoreContentItemType || props.contentItemType === mediaState.contentItem.type);
        });
    };
    var getContainedSuperStateIds = function (containerIds) {
        var containerIdSet = new Set(containerIds);
        var containedSuperStateIds = Object.keys(state.mediaStates.mediaStatesById)
            .filter(function (id) {
            var mediaState = state.mediaStates.mediaStatesById[id];
            return containerIdSet.has(mediaState.container.id)
                && mediaState.contentItem.type === bscore_1.ContentItemType.SuperState;
        });
        if (containedSuperStateIds.length > 0) {
            return containedSuperStateIds.concat(getContainedSuperStateIds(containedSuperStateIds));
        }
        return [];
    };
    if (!lodash_1.isNil(props.searchContainedSuperStates)
        && props.searchContainedSuperStates
        && !lodash_1.isNil(props.containerId)) {
        var searchContainerIds = getContainedSuperStateIds([props.containerId]);
        searchContainerIds.unshift(props.containerId);
        return doSearch(searchContainerIds);
    }
    return doSearch(lodash_1.isNil(props.containerId) ? [] : [props.containerId]);
}
exports.dmGetMediaStateIdsForProps = dmGetMediaStateIdsForProps;
function dmGetMediaStateByName(state, props) {
    var mediaStates = state.mediaStates.mediaStatesById;
    var mediaStateId = lodash_1.find(Object.keys(mediaStates), function (id) { return mediaStates[id].name === props.name; });
    return lodash_1.isNil(mediaStateId) ? null : dmCreateDmcMediaState(state, { id: mediaStateId });
}
exports.dmGetMediaStateByName = dmGetMediaStateByName;
function dmGetMediaStateContainerById(state, props) {
    var mediaState = state.mediaStates.mediaStatesById[props.id];
    return lodash_1.isNil(mediaState) ? null : new bsDmClasses_1.DmcMediaStateContainer(mediaState.container.id, mediaState.container.type);
}
exports.dmGetMediaStateContainerById = dmGetMediaStateContainerById;
function dmGetMediaStateIdsForSign(state) {
    return Object.keys(state.mediaStates.mediaStatesById);
}
exports.dmGetMediaStateIdsForSign = dmGetMediaStateIdsForSign;
function dmGetContainedMediaStateIdsForMediaState(state, props) {
    var mediaStates = state.mediaStates.mediaStatesById;
    return Object.keys(mediaStates).filter(function (id) {
        var mediaState = mediaStates[id];
        return mediaState.container.type !== bsDmInterfaces_1.MediaStateContainerType.Zone && mediaState.container.id === props.id;
    });
}
exports.dmGetContainedMediaStateIdsForMediaState = dmGetContainedMediaStateIdsForMediaState;
var containerContentItemTypes = [bscore_1.ContentItemType.MediaList, bscore_1.ContentItemType.PlayFile, bscore_1.ContentItemType.SuperState];
function dmIsMediaStateContainer(state, props) {
    var mediaState = state.mediaStates.mediaStatesById[props.id];
    return mediaState ? containerContentItemTypes.indexOf(mediaState.contentItem.type) >= 0 : false;
}
exports.dmIsMediaStateContainer = dmIsMediaStateContainer;
function dmGetContentItemTypeForMediaStateId(state, props) {
    var mediaState = state.mediaStates.mediaStatesById[props.id];
    return mediaState ? mediaState.contentItem.type : null;
}
exports.dmGetContentItemTypeForMediaStateId = dmGetContentItemTypeForMediaStateId;
function dmGetEventStatesForMediaStateId(state, props) {
    var events = state.events;
    return Object.keys(events)
        .filter(function (id) { return events[id].mediaStateId === props.id
        && !dmIsMediaListGlobalIntrinsicEvent(state, props.id, events[id]); })
        .map(function (id) { return events[id]; });
}
exports.dmGetEventStatesForMediaStateId = dmGetEventStatesForMediaStateId;
function dmGetEventIdsForMediaState(state, props) {
    var events = state.events;
    return Object.keys(events)
        .filter(function (id) { return events[id].mediaStateId === props.id
        && !dmIsMediaListGlobalIntrinsicEvent(state, props.id, events[id]); });
}
exports.dmGetEventIdsForMediaState = dmGetEventIdsForMediaState;
function dmGetAllEventIdsForMediaState(state, props) {
    var events = state.events;
    return Object.keys(events)
        .filter(function (id) { return events[id].mediaStateId === props.id; });
}
exports.dmGetAllEventIdsForMediaState = dmGetAllEventIdsForMediaState;
function dmGetMediaAssetItemForMediaStateId(state, props) {
    var mediaState = state.mediaStates.mediaStatesById[props.id];
    if (mediaState && bsDmContentItems_1.dmContentItemIsMediaContentItem(mediaState.contentItem)) {
        return state.assetMap[mediaState.contentItem.assetId];
    }
    return null;
}
exports.dmGetMediaAssetItemForMediaStateId = dmGetMediaAssetItemForMediaStateId;
function dmGetInitialMediaStateIdForZone(state, props) {
    var zone = state.zones.zonesById[props.id];
    return zone ? zone.initialMediaStateId : null;
}
exports.dmGetInitialMediaStateIdForZone = dmGetInitialMediaStateIdForZone;
function dmGetInitialMediaStateForZone(state, props) {
    var zone = state.zones.zonesById[props.id];
    return zone ? dmCreateDmcMediaState(state, { id: zone.initialMediaStateId }) : null;
}
exports.dmGetInitialMediaStateForZone = dmGetInitialMediaStateForZone;
function dmGetMediaStateSequenceForContainer(state, props) {
    var sequence = state.mediaStates.sequencesByParentId[props.id];
    return sequence ? sequence : null;
}
exports.dmGetMediaStateSequenceForContainer = dmGetMediaStateSequenceForContainer;
function dmGetMediaStateComponents(dmState, props) {
    return {
        deNormEvents: dmGetDeNormalizedEventsForMediaState(dmState, props),
        commands: selectorCommand_1.dmGetCommandStatesForMediaState(dmState, props),
        mediaAssetItem: dmGetMediaAssetItemForMediaStateId(dmState, props),
    };
}
exports.dmGetMediaStateComponents = dmGetMediaStateComponents;
function dmGetDeNormalizedEventsForMediaState(state, props) {
    var eventIds = dmGetEventIdsForMediaState(state, props);
    return eventIds.map(function (eventId) {
        var deNormEvent = { eventState: state.events[eventId] };
        var transitionStates = selectorTransition_1.dmGetSortedTransitionStatesForEventId(state, { id: eventId });
        if (transitionStates) {
            deNormEvent.transitionStates = transitionStates;
        }
        return deNormEvent;
    });
}
exports.dmGetDeNormalizedEventsForMediaState = dmGetDeNormalizedEventsForMediaState;
function dmGetMediaListItemById(state, props) {
    var mediaStateState = state.mediaStates.mediaStatesById[props.id];
    return mediaStateState && mediaStateState.container.type === bsDmInterfaces_1.MediaStateContainerType.MediaList ?
        new bsDmClasses_1.DmcMediaListItem(mediaStateState, dmGetMediaStateComponents(state, props)) : null;
}
exports.dmGetMediaListItemById = dmGetMediaListItemById;
function dmGetMediaListItemByIndex(state, props) {
    var mediaStateSequence = state.mediaStates.sequencesByParentId[props.id];
    if (mediaStateSequence && mediaStateSequence.parentType === bsDmInterfaces_1.MediaStateContainerType.MediaList) {
        var index = props.index;
        if (index >= 0 && index < mediaStateSequence.sequence.length) {
            var mediaStateState = state.mediaStates.mediaStatesById[mediaStateSequence.sequence[index]];
            if (mediaStateState) {
                return new bsDmClasses_1.DmcMediaListItem(mediaStateState, dmGetMediaStateComponents(state, { id: mediaStateState.id }));
            }
        }
    }
    return null;
}
exports.dmGetMediaListItemByIndex = dmGetMediaListItemByIndex;
function dmGetMediaListGlobalEventIds(state, props) {
    var events = state.events;
    if (dmGetContentItemTypeForMediaStateId(state, props) === bscore_1.ContentItemType.MediaList) {
        return Object.keys(events)
            .filter(function (id) {
            return events[id].mediaStateId === props.id
                && !dmIsMediaListGlobalIntrinsicEvent(state, props.id, events[id]);
        });
    }
    return [];
}
exports.dmGetMediaListGlobalEventIds = dmGetMediaListGlobalEventIds;
function dmGetMediaListComponents(dmState, props) {
    var sourceDataFeed = selectorMediaSequence_1.dmGetMediaSequenceSourceDataFeed(dmState, props);
    return {
        forwardEvents: dmGetMediaListGlobalSequenceForwardEvents(dmState, props),
        backwardEvents: dmGetMediaListGlobalSequenceBackwardEvents(dmState, props),
        playNextCommands: selectorCommand_1.dmGetCommandStatesForParentAndType(dmState, { id: props.id, type: bscore_1.CommandSequenceType.SequenceItemNext }),
        playPreviousCommands: selectorCommand_1.dmGetCommandStatesForParentAndType(dmState, { id: props.id, type: bscore_1.CommandSequenceType.SequenceItemPrevious }),
        sourceDataFeed: lodash_1.isNil(sourceDataFeed) ? null :
            selectorDataFeed_1.dmGetDataFeedStateEntitiesByFeedId(dmState, { id: sourceDataFeed.id }),
    };
}
exports.dmGetMediaListComponents = dmGetMediaListComponents;
function dmGetMediaListGlobalSequenceForwardEvents(state, props) {
    var contentItemType = dmGetContentItemTypeForMediaStateId(state, props);
    if (contentItemType === bscore_1.ContentItemType.MediaList) {
        var events_1 = state.events;
        return Object.keys(events_1)
            .filter(function (id) { return events_1[id].mediaStateId === props.id
            && events_1[id].action === bscore_1.EventIntrinsicAction.SequenceForward; })
            .map(function (id) { return events_1[id]; });
    }
    return [];
}
exports.dmGetMediaListGlobalSequenceForwardEvents = dmGetMediaListGlobalSequenceForwardEvents;
function dmGetMediaListGlobalSequenceBackwardEvents(state, props) {
    var contentItemType = dmGetContentItemTypeForMediaStateId(state, props);
    if (contentItemType === bscore_1.ContentItemType.MediaList) {
        var events_2 = state.events;
        return Object.keys(events_2)
            .filter(function (id) { return events_2[id].mediaStateId === props.id
            && events_2[id].action === bscore_1.EventIntrinsicAction.SequenceBackward; })
            .map(function (id) { return events_2[id]; });
    }
    return [];
}
exports.dmGetMediaListGlobalSequenceBackwardEvents = dmGetMediaListGlobalSequenceBackwardEvents;
function dmIsMediaListGlobalIntrinsicEvent(state, mediaStateId, eventSpec) {
    var contentItemType = dmGetContentItemTypeForMediaStateId(state, { id: mediaStateId });
    return contentItemType === bscore_1.ContentItemType.MediaList && bsDmEvents_1.dmIsMediaListIntrinsicEvent(eventSpec);
}
exports.dmIsMediaListGlobalIntrinsicEvent = dmIsMediaListGlobalIntrinsicEvent;
function dmGetPlayFileItemById(state, props) {
    var mediaStateState = state.mediaStates.mediaStatesById[props.id];
    return mediaStateState && mediaStateState.container.type === bsDmInterfaces_1.MediaStateContainerType.PlayFile ?
        new bsDmClasses_1.DmcPlayFileItem(mediaStateState, dmGetMediaStateComponents(state, props)) : null;
}
exports.dmGetPlayFileItemById = dmGetPlayFileItemById;
function dmGetPlayFileItemByIndex(state, props) {
    var mediaStateSequence = state.mediaStates.sequencesByParentId[props.id];
    if (mediaStateSequence && mediaStateSequence.parentType === bsDmInterfaces_1.MediaStateContainerType.PlayFile) {
        var index = props.index;
        if (index >= 0 && index < mediaStateSequence.sequence.length) {
            var mediaStateState = state.mediaStates.mediaStatesById[mediaStateSequence.sequence[index]];
            if (mediaStateState) {
                return new bsDmClasses_1.DmcPlayFileItem(mediaStateState, dmGetMediaStateComponents(state, { id: mediaStateState.id }));
            }
        }
    }
    return null;
}
exports.dmGetPlayFileItemByIndex = dmGetPlayFileItemByIndex;
function dmGetPlayFileComponents(state, props) {
    var sourceDataFeed = selectorMediaSequence_1.dmGetMediaSequenceSourceDataFeed(state, props);
    return {
        defaultMediaAssetItem: selectorMediaSequence_1.dmGetPlayFileDefaultMediaAssetItem(state, props),
        sourceDataFeed: lodash_1.isNil(sourceDataFeed) ? null :
            selectorDataFeed_1.dmGetDataFeedStateEntitiesByFeedId(state, { id: sourceDataFeed.id }),
    };
}
exports.dmGetPlayFileComponents = dmGetPlayFileComponents;
function dmBpEventAvailabilityForMediaStateEvents(state, props) {
    var events = state.events;
    var eventList = Object.keys(events).reduce(function (list, eventId) {
        var event = events[eventId];
        if (event.mediaStateId === props.id) {
            list.push(event);
        }
        return list;
    }, []);
    return bsDmEvents_1.dmGetBpAvailabilityForEventList(eventList);
}
exports.dmBpEventAvailabilityForMediaStateEvents = dmBpEventAvailabilityForMediaStateEvents;
function dmValidateMediaState(state, props) {
    var entityDetails = { entityType: bsDmInterfaces_1.DmEntityType.MediaState, entityId: props.id };
    var result = bsDmError_1.dmInitializeValidationResult(bsDmInterfaces_1.DmEntityType.MediaState, props.id);
    var validateParameterizedString = function (paramString, entityProperty, cannotBeEmpty) {
        var error = selectorValidation_1.dmValidateEntityParameterizedString(state, paramString, __assign({}, entityDetails, { entityProperty: entityProperty }), cannotBeEmpty);
        if (!lodash_1.isNil(error)) {
            result.errorList.push(error);
        }
    };
    var validateDataFeed = function (dataFeedId, entityProperty) {
        var error = selectorValidation_1.dmValidateEntityDataFeed(state, dataFeedId, __assign({}, entityDetails, { entityProperty: entityProperty }));
        if (!lodash_1.isNil(error)) {
            result.errorList.push(error);
        }
    };
    var validateHtmlSite = function (htmlSiteId, entityProperty) {
        var _a;
        var errorList = selectorValidation_1.dmValidateEntityHtmlSite(state, htmlSiteId, __assign({}, entityDetails, { entityProperty: entityProperty }));
        if (!lodash_1.isNil(errorList)) {
            (_a = result.errorList).push.apply(_a, errorList);
        }
    };
    var mediaState = dmGetMediaStateStateById(state, props);
    if (!lodash_1.isNil(mediaState)) {
        if (!lodash_1.isString(mediaState.name) || mediaState.name.length === 0) {
            result.errorList.push(selectorValidation_1.dmGetEntityError(bsDmError_1.DmErrorType.nameNotSpecified, __assign({}, entityDetails, { entityProperty: 'name' })));
        }
        if (bsDmContentItems_1.dmContentItemIsStreamContentItem(mediaState.contentItem)) {
            validateParameterizedString(mediaState.contentItem.url, 'contentItem.url', true);
        }
        else if (bsDmContentItems_1.dmContentItemIsHtmlContentItem(mediaState.contentItem)) {
            validateHtmlSite(mediaState.contentItem.siteId, 'contentItem.htmlSite');
        }
        else if (bsDmContentItems_1.dmContentItemIsAnyDataFeedContentItem(mediaState.contentItem)) {
            validateDataFeed(mediaState.contentItem.dataFeedId, 'contentItem.dataFeed');
        }
        else if (bsDmContentItems_1.dmContentItemIsMediaListOrPlayFileContentItem(mediaState.contentItem)) {
            if (mediaState.contentItem.useDataFeed) {
                validateDataFeed(mediaState.contentItem.dataFeedId, 'contentItem.dataFeed');
            }
        }
        var componentErrors_1 = [];
        var commandIds = selectorCommand_1.dmGetEntryCommandIdsForMediaState(state, props);
        commandIds.push.apply(commandIds, selectorCommand_1.dmGetExitCommandIdsForMediaState(state, props));
        if (bsDmContentItems_1.dmContentItemIsMediaListContentItem(mediaState.contentItem)) {
            commandIds.push.apply(commandIds, selectorCommand_1.dmGetSequenceItemNextCommandIdsForMediaState(state, props));
            commandIds.push.apply(commandIds, selectorCommand_1.dmGetSequenceItemPreviousCommandIdsForMediaState(state, props));
        }
        componentErrors_1 = commandIds.reduce(function (acc, commandId) {
            var cmdResult = selectorCommand_1.dmValidateCommand(state, { id: commandId });
            if (!cmdResult.ok) {
                acc.push(cmdResult);
            }
            return acc;
        }, componentErrors_1);
        if (bsDmContentItems_1.dmContentItemIsLiveTextContentItem(mediaState.contentItem)) {
            var liveTextErrors = selectorLiveText_1.dmValidateLiveTextCanvas(state, { id: mediaState.contentItem.canvasId });
            if (!liveTextErrors.ok) {
                componentErrors_1.push(liveTextErrors);
            }
        }
        if (bsDmContentItems_1.dmContentItemIsSuperStateContentItem(mediaState.contentItem)) {
            var containedMediaStateIds = dmGetContainedMediaStateIdsForMediaState(state, props);
            containedMediaStateIds.forEach(function (containedStateId) {
                var containedStateErrors = dmValidateMediaState(state, { id: containedStateId });
                if (!containedStateErrors.ok) {
                    componentErrors_1.push(containedStateErrors);
                }
            });
        }
        if (componentErrors_1.length) {
            result.componentErrors = componentErrors_1;
            result.ok = false;
        }
    }
    result.ok = result.ok && result.errorList.length === 0;
    return result;
}
exports.dmValidateMediaState = dmValidateMediaState;


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmContentItems_1 = __webpack_require__(13);
var reselect_1 = __webpack_require__(24);
var lodash_1 = __webpack_require__(0);
var getOrderedMediaStateIdsForPlaylistInZone = function (zoneId, zoneType, initialMediaStateId, mediaStates, events, transitions) {
    var mediaStateIds = Object.keys(mediaStates).filter(function (id) { return mediaStates[id].container.id === zoneId; });
    var sortedMediaStateIds = [];
    var nextMediaStateId = initialMediaStateId;
    if (nextMediaStateId !== bsDmInterfaces_1.BsDmIdNone && mediaStateIds.length > 0) {
        var _loop_1 = function () {
            var index = mediaStateIds.indexOf(nextMediaStateId);
            if (index > -1) {
                mediaStateIds.splice(index, 1);
            }
            var mediaStateState = mediaStates[nextMediaStateId];
            if (!mediaStateState || !bsDmContentItems_1.dmIsValidContentItemForPlaylist(mediaStateState.contentItem, zoneType)) {
                return { value: null };
            }
            var eventListIds = Object.keys(events).filter(function (id) { return events[id].mediaStateId === nextMediaStateId; });
            if (!eventListIds || eventListIds.length !== 1) {
                return { value: null };
            }
            var transitionIds = Object.keys(transitions).filter(function (id) { return transitions[id].eventId === eventListIds[0]; });
            if (!transitionIds || transitionIds.length !== 1) {
                return { value: null };
            }
            var transitionState = transitions[transitionIds[0]];
            if (nextMediaStateId === transitionState.targetMediaStateId
                && (nextMediaStateId !== initialMediaStateId || mediaStateIds.length > 0)) {
                return { value: null };
            }
            sortedMediaStateIds.push(nextMediaStateId);
            nextMediaStateId = transitionState.targetMediaStateId;
            if (nextMediaStateId === initialMediaStateId) {
                if (mediaStateIds.length > 0) {
                    return { value: null };
                }
                return "break";
            }
        };
        while (true) {
            var state_1 = _loop_1();
            if (typeof state_1 === "object")
                return state_1.value;
            if (state_1 === "break")
                break;
        }
    }
    return sortedMediaStateIds;
};
function dmGetZoneSimplePlaylist(state, props) {
    var getZoneSimplePlaylist = reselect_1.createSelector(function (dmState, innerProps) { return dmState.zones.zonesById[innerProps.id]; }, function (dmState) { return dmState.mediaStates.mediaStatesById; }, function (dmState) { return dmState.events; }, function (dmState) { return dmState.transitions.transitionsById; }, function (zone, mediaStates, events, transitions) {
        return lodash_1.isNil(zone) ? null :
            getOrderedMediaStateIdsForPlaylistInZone(zone.id, zone.type, zone.initialMediaStateId, mediaStates, events, transitions);
    });
    return getZoneSimplePlaylist(state, props);
}
exports.dmGetZoneSimplePlaylist = dmGetZoneSimplePlaylist;


/***/ }),
/* 60 */
/***/ (function(module, exports) {

module.exports = __webpack_require__(58);

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var actionSign_1 = __webpack_require__(7);
exports.dmNewSign = actionSign_1.dmNewSign;
exports.dmOpenSign = actionSign_1.dmOpenSign;
exports.dmVerifyAndOpenSign = actionSign_1.dmVerifyAndOpenSign;
exports.dmUpdateSignProperties = actionSign_1.dmUpdateSignProperties;
exports.dmUpdateSignSerialPorts = actionSign_1.dmUpdateSignSerialPorts;
exports.dmUpdateSignGpio = actionSign_1.dmUpdateSignGpio;
exports.dmUpdateSignButtonPanelMap = actionSign_1.dmUpdateSignButtonPanelMap;
exports.dmUpdateSignAudioPropertyMap = actionSign_1.dmUpdateSignAudioPropertyMap;
var actionZone_1 = __webpack_require__(15);
exports.dmAddZone = actionZone_1.dmAddZone;
exports.dmAddDefaultZone = actionZone_1.dmAddDefaultZone;
exports.dmUpdateZone = actionZone_1.dmUpdateZone;
exports.dmUpdateZoneProperties = actionZone_1.dmUpdateZoneProperties;
exports.dmDeleteZone = actionZone_1.dmDeleteZone;
exports.dmClearZone = actionZone_1.dmClearZone;
var actionMediaState_1 = __webpack_require__(12);
exports.dmAddMediaStateWithContentItem = actionMediaState_1.dmAddMediaStateWithContentItem;
exports.dmAddMediaState = actionMediaState_1.dmAddMediaState;
exports.dmAddLiveTextMediaState = actionMediaState_1.dmAddLiveTextMediaState;
exports.dmUpdateMediaState = actionMediaState_1.dmUpdateMediaState;
exports.dmDeleteMediaState = actionMediaState_1.dmDeleteMediaState;
var actionEvent_1 = __webpack_require__(17);
exports.dmAddEvent = actionEvent_1.dmAddEvent;
exports.dmAddEventFromSpecification = actionEvent_1.dmAddEventFromSpecification;
exports.dmAddMultipleEvents = actionEvent_1.dmAddMultipleEvents;
exports.dmUpdateEvent = actionEvent_1.dmUpdateEvent;
exports.dmUpdateEventType = actionEvent_1.dmUpdateEventType;
exports.dmDeleteEvent = actionEvent_1.dmDeleteEvent;
var actionTransition_1 = __webpack_require__(22);
exports.dmAddDefaultTransition = actionTransition_1.dmAddDefaultTransition;
exports.dmAddConditionalTransition = actionTransition_1.dmAddConditionalTransition;
exports.dmUpdateTransition = actionTransition_1.dmUpdateTransition;
exports.dmUpdateTransitionCondition = actionTransition_1.dmUpdateTransitionCondition;
exports.dmMoveTransitionConditionsAtIndices = actionTransition_1.dmMoveTransitionConditionsAtIndices;
exports.dmDeleteTransition = actionTransition_1.dmDeleteTransition;
var actionCommand_1 = __webpack_require__(29);
exports.dmAddCommand = actionCommand_1.dmAddCommand;
exports.dmUpdateCommand = actionCommand_1.dmUpdateCommand;
exports.dmMoveCommandsAtIndices = actionCommand_1.dmMoveCommandsAtIndices;
exports.dmDeleteCommand = actionCommand_1.dmDeleteCommand;
var actionPlaylist_1 = __webpack_require__(69);
exports.dmPlaylistAddMediaState = actionPlaylist_1.dmPlaylistAddMediaState;
exports.dmPlaylistAppendMediaState = actionPlaylist_1.dmPlaylistAppendMediaState;
exports.dmPlaylistAddMediaStateRange = actionPlaylist_1.dmPlaylistAddMediaStateRange;
exports.dmPlaylistUpdateMediaState = actionPlaylist_1.dmPlaylistUpdateMediaState;
exports.dmPlaylistDeleteMediaStateRange = actionPlaylist_1.dmPlaylistDeleteMediaStateRange;
exports.dmPlaylistDeleteMediaStatesAtIndices = actionPlaylist_1.dmPlaylistDeleteMediaStatesAtIndices;
exports.dmPlaylistMoveMediaStateRange = actionPlaylist_1.dmPlaylistMoveMediaStateRange;
exports.dmPlaylistMoveMediaStatesAtIndices = actionPlaylist_1.dmPlaylistMoveMediaStatesAtIndices;
var actionInteractive_1 = __webpack_require__(68);
exports.dmInteractiveAddTransitionForEventType = actionInteractive_1.dmInteractiveAddTransitionForEventType;
exports.dmInteractiveAddTransitionForEventSpecification = actionInteractive_1.dmInteractiveAddTransitionForEventSpecification;
exports.dmUpdateEventAndDefaultTransition = actionInteractive_1.dmUpdateEventAndDefaultTransition;
var actionMediaSequence_1 = __webpack_require__(43);
exports.dmMediaSequenceAddItemRange = actionMediaSequence_1.dmMediaSequenceAddItemRange;
exports.dmMediaSequenceUpdateItem = actionMediaSequence_1.dmMediaSequenceUpdateItem;
exports.dmMediaSequenceMoveItemsAtIndices = actionMediaSequence_1.dmMediaSequenceMoveItemsAtIndices;
exports.dmMediaSequenceDeleteItemRange = actionMediaSequence_1.dmMediaSequenceDeleteItemRange;
exports.dmMediaSequenceDeleteItemsAtIndices = actionMediaSequence_1.dmMediaSequenceDeleteItemsAtIndices;
exports.dmMediaListAddGlobalEvent = actionMediaSequence_1.dmMediaListAddGlobalEvent;
var actionLiveText_1 = __webpack_require__(27);
exports.dmAddLiveTextCanvas = actionLiveText_1.dmAddLiveTextCanvas;
exports.dmUpdateLiveTextCanvas = actionLiveText_1.dmUpdateLiveTextCanvas;
exports.dmDeleteLiveTextCanvas = actionLiveText_1.dmDeleteLiveTextCanvas;
exports.dmAddLiveTextItem = actionLiveText_1.dmAddLiveTextItem;
exports.dmUpdateLiveTextItem = actionLiveText_1.dmUpdateLiveTextItem;
exports.dmDeleteLiveTextItem = actionLiveText_1.dmDeleteLiveTextItem;
exports.dmAddDataFeedToLiveTextGroup = actionLiveText_1.dmAddDataFeedToLiveTextGroup;
exports.dmUpdateDataFeedLiveTextGroup = actionLiveText_1.dmUpdateDataFeedLiveTextGroup;
exports.dmMoveLiveTextDataFeedsInGroup = actionLiveText_1.dmMoveLiveTextDataFeedsInGroup;
exports.dmDeleteDataFeedsFromLiveTextGroup = actionLiveText_1.dmDeleteDataFeedsFromLiveTextGroup;
exports.dmSetEnableForLiveTextGroupedItem = actionLiveText_1.dmSetEnableForLiveTextGroupedItem;
var actionDataFeed_1 = __webpack_require__(20);
exports.dmAddDataFeed = actionDataFeed_1.dmAddDataFeed;
exports.dmUpdateDataFeed = actionDataFeed_1.dmUpdateDataFeed;
exports.dmUpdateDataFeedSourceProperties = actionDataFeed_1.dmUpdateDataFeedSourceProperties;
exports.dmDeleteDataFeed = actionDataFeed_1.dmDeleteDataFeed;
var actionHtmlSite_1 = __webpack_require__(26);
exports.dmAddHostedHtmlSite = actionHtmlSite_1.dmAddHostedHtmlSite;
exports.dmAddRemoteHtmlSite = actionHtmlSite_1.dmAddRemoteHtmlSite;
exports.dmUpdateHtmlSite = actionHtmlSite_1.dmUpdateHtmlSite;
exports.dmDeleteHtmlSite = actionHtmlSite_1.dmDeleteHtmlSite;
var actionUserVariable_1 = __webpack_require__(30);
exports.dmAddUserVariable = actionUserVariable_1.dmAddUserVariable;
exports.dmUpdateUserVariable = actionUserVariable_1.dmUpdateUserVariable;
exports.dmMoveUserVariablesAtIndices = actionUserVariable_1.dmMoveUserVariablesAtIndices;
exports.dmDeleteUserVariable = actionUserVariable_1.dmDeleteUserVariable;
var actionScriptPlugin_1 = __webpack_require__(46);
exports.dmAddBrightScriptPlugin = actionScriptPlugin_1.dmAddBrightScriptPlugin;
exports.dmAddBrightScriptPluginWithoutValidation = actionScriptPlugin_1.dmAddBrightScriptPluginWithoutValidation;
exports.dmUpdateBrightScriptPlugin = actionScriptPlugin_1.dmUpdateBrightScriptPlugin;
exports.dmUpdateBrightScriptPluginWithoutValidation = actionScriptPlugin_1.dmUpdateBrightScriptPluginWithoutValidation;
exports.dmRemoveBrightScriptPlugin = actionScriptPlugin_1.dmRemoveBrightScriptPlugin;
var actionParserPlugin_1 = __webpack_require__(44);
exports.dmAddParserBrightScriptPlugin = actionParserPlugin_1.dmAddParserBrightScriptPlugin;
exports.dmAddParserBrightScriptPluginWithoutValidation = actionParserPlugin_1.dmAddParserBrightScriptPluginWithoutValidation;
exports.dmUpdateParserBrightScriptPlugin = actionParserPlugin_1.dmUpdateParserBrightScriptPlugin;
exports.dmUpdateParserBrightScriptPluginWithoutValidation = actionParserPlugin_1.dmUpdateParserBrightScriptPluginWithoutValidation;
exports.dmRemoveParserBrightScriptPlugin = actionParserPlugin_1.dmRemoveParserBrightScriptPlugin;
var actionAuxiliaryFile_1 = __webpack_require__(40);
exports.dmPutAuxiliaryFile = actionAuxiliaryFile_1.dmPutAuxiliaryFile;
exports.dmPutAuxiliaryFileWithoutValidation = actionAuxiliaryFile_1.dmPutAuxiliaryFileWithoutValidation;
exports.dmUpdateAuxiliaryFile = actionAuxiliaryFile_1.dmUpdateAuxiliaryFile;
exports.dmUpdateAuxiliaryFileWithoutValidation = actionAuxiliaryFile_1.dmUpdateAuxiliaryFileWithoutValidation;
exports.dmRemoveAuxiliaryFiles = actionAuxiliaryFile_1.dmRemoveAuxiliaryFiles;
var actionLinkedPresentation_1 = __webpack_require__(51);
exports.dmPutLinkedPresentation = actionLinkedPresentation_1.dmPutLinkedPresentation;
exports.dmPutLinkedPresentationWithoutValidation = actionLinkedPresentation_1.dmPutLinkedPresentationWithoutValidation;
exports.dmUpdateLinkedPresentation = actionLinkedPresentation_1.dmUpdateLinkedPresentation;
exports.dmUpdateLinkedPresentationWithoutValidation = actionLinkedPresentation_1.dmUpdateLinkedPresentationWithoutValidation;
exports.dmRemoveLinkedPresentation = actionLinkedPresentation_1.dmRemoveLinkedPresentation;
var actionPartnerProduct_1 = __webpack_require__(45);
exports.dmAddPartnerProduct = actionPartnerProduct_1.dmAddPartnerProduct;
exports.dmUpdatePartnerProduct = actionPartnerProduct_1.dmUpdatePartnerProduct;
exports.dmDeletePartnerProduct = actionPartnerProduct_1.dmDeletePartnerProduct;
var actionDeviceWebPage_1 = __webpack_require__(42);
exports.dmSetPresentationWebPage = actionDeviceWebPage_1.dmSetPresentationWebPage;
exports.dmAddDeviceWebPage = actionDeviceWebPage_1.dmAddDeviceWebPage;
exports.dmUpdateDeviceWebPage = actionDeviceWebPage_1.dmUpdateDeviceWebPage;
exports.dmDeleteDeviceWebPage = actionDeviceWebPage_1.dmDeleteDeviceWebPage;
var actionCustomAutorun_1 = __webpack_require__(41);
exports.dmSetCustomAutorun = actionCustomAutorun_1.dmSetCustomAutorun;
exports.dmResetCustomAutorun = actionCustomAutorun_1.dmResetCustomAutorun;
exports.dmSetEmptyCustomAutorun = actionCustomAutorun_1.dmSetEmptyCustomAutorun;
var actionAssetMap_1 = __webpack_require__(9);
exports.dmUpdateAssetLocation = actionAssetMap_1.dmUpdateAssetLocation;
var actionThumbnail_1 = __webpack_require__(47);
exports.dmSetThumbnail = actionThumbnail_1.dmSetThumbnail;
exports.dmDeleteThumbnail = actionThumbnail_1.dmDeleteThumbnail;
var actionValidate_1 = __webpack_require__(52);
exports.dmValidateSignConsistency = actionValidate_1.dmValidateSignConsistency;


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmParameterizedStrings_1 = __webpack_require__(14);
function dmCreateTransitionCondition(userVariableName, compareOperator, compareValue1, compareValue2) {
    var condition = {
        userVariableId: bsDmInterfaces_1.BsDmIdNone,
        userVariableName: userVariableName,
        compareOperator: compareOperator,
        compareValue1: bsDmParameterizedStrings_1.dmResolveDmParameterizedString(compareValue1),
    };
    if (compareValue2) {
        condition.compareValue2 = bsDmParameterizedStrings_1.dmResolveDmParameterizedString(compareValue2);
    }
    return condition;
}
exports.dmCreateTransitionCondition = dmCreateTransitionCondition;


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var redux_1 = __webpack_require__(21);
var reducerSign_1 = __webpack_require__(85);
var reducerZone_1 = __webpack_require__(89);
var reducerMediaState_1 = __webpack_require__(81);
var reducerEvent_1 = __webpack_require__(77);
var reducerTransition_1 = __webpack_require__(87);
var reducerCommand_1 = __webpack_require__(73);
var reducerAssetMap_1 = __webpack_require__(71);
var reducerHtmlSite_1 = __webpack_require__(78);
var reducerDataFeed_1 = __webpack_require__(75);
var reducerUserVariable_1 = __webpack_require__(88);
var reducerLiveText_1 = __webpack_require__(80);
var reducerDeviceWebPage_1 = __webpack_require__(76);
var reducerScriptPlugin_1 = __webpack_require__(84);
var reducerParserPlugin_1 = __webpack_require__(82);
var reducerAuxiliaryFile_1 = __webpack_require__(72);
var reducerLinkedPresentation_1 = __webpack_require__(79);
var reducerPartnerProduct_1 = __webpack_require__(83);
var reducerCustomAutorun_1 = __webpack_require__(74);
var reducerThumbnail_1 = __webpack_require__(86);
var actionBase_1 = __webpack_require__(8);
function enableBatching(reduce) {
    return function batchingReducer(state, action) {
        switch (action.type) {
            case actionBase_1.BSDM_BATCH:
                return action.payload.reduce(batchingReducer, state);
            default:
                return reduce(state, action);
        }
    };
}
exports.bsDmReducer = enableBatching(redux_1.combineReducers({
    sign: reducerSign_1.default,
    zones: reducerZone_1.default,
    mediaStates: reducerMediaState_1.default,
    events: reducerEvent_1.default,
    transitions: reducerTransition_1.default,
    commands: reducerCommand_1.default,
    htmlSites: reducerHtmlSite_1.default,
    dataFeeds: reducerDataFeed_1.default,
    userVariables: reducerUserVariable_1.default,
    liveText: reducerLiveText_1.default,
    deviceWebPages: reducerDeviceWebPage_1.default,
    scriptPlugins: reducerScriptPlugin_1.default,
    parserPlugins: reducerParserPlugin_1.default,
    auxiliaryFiles: reducerAuxiliaryFile_1.default,
    linkedPresentations: reducerLinkedPresentation_1.default,
    partnerProducts: reducerPartnerProduct_1.default,
    customAutorun: reducerCustomAutorun_1.default,
    assetMap: reducerAssetMap_1.default,
    thumbnail: reducerThumbnail_1.default,
}));


/***/ }),
/* 64 */
/***/ (function(module, exports) {

module.exports = __webpack_require__(59);

/***/ }),
/* 65 */
/***/ (function(module, exports) {

module.exports = __webpack_require__(25);

/***/ }),
/* 66 */
/***/ (function(module, exports) {

module.exports = __webpack_require__(26);

/***/ }),
/* 67 */
/***/ (function(module, exports) {

module.exports = __webpack_require__(60);

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmEvents_1 = __webpack_require__(19);
var bsDmValidate_1 = __webpack_require__(35);
var bsDmState_1 = __webpack_require__(5);
var actionBase_1 = __webpack_require__(8);
var actionEvent_1 = __webpack_require__(17);
var actionTransition_1 = __webpack_require__(22);
var selectors_1 = __webpack_require__(6);
var bsDmError_1 = __webpack_require__(4);
var utils_1 = __webpack_require__(3);
var lodash_1 = __webpack_require__(0);
exports.INTERACTIVE_ADD_EVENT_TRANSITION_LINK = 'DM_INTERACTIVE_ADD_EVENT_TRANSITION_LINK';
exports.INTERACTIVE_UPDATE_EVENT_TRANSITION_LINK = 'DM_INTERACTIVE_UPDATE_EVENT_TRANSITION_LINK';
function dmInteractiveAddTransitionForEventType(nameBase, source, target, eventType, eventData, action) {
    return function (dispatch, getState) {
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var sourceMediaState = selectors_1.dmGetMediaStateStateById(dmState, { id: source });
        var contentItemType = lodash_1.isNil(sourceMediaState) ? null : sourceMediaState.contentItem.type;
        return doInteractiveAddTransitionForEventSpecification(nameBase, source, target, bsDmEvents_1.dmCreateDefaultEventSpecificationForEventType(eventType, eventData, contentItemType, action), dispatch, getState);
    };
}
exports.dmInteractiveAddTransitionForEventType = dmInteractiveAddTransitionForEventType;
function dmInteractiveAddTransitionForEventSpecification(nameBase, source, target, eventSpec) {
    return function (dispatch, getState) {
        return doInteractiveAddTransitionForEventSpecification(nameBase, source, target, eventSpec, dispatch, getState);
    };
}
exports.dmInteractiveAddTransitionForEventSpecification = dmInteractiveAddTransitionForEventSpecification;
function doInteractiveAddTransitionForEventSpecification(nameBase, source, target, eventSpec, dispatch, getState) {
    var dmState = bsDmState_1.dmFilterDmState(getState());
    var testResult = bsDmValidate_1.dmCanAddEventToMediaState(dmState, eventSpec, source, target);
    if (!testResult.ok) {
        throw testResult.error;
    }
    var batchedActions = [];
    var targetSpecified = !lodash_1.isNil(target) && utils_1.isValidBsDmId(target);
    if (targetSpecified && eventSpec.action !== undefined) {
        eventSpec.action = bscore_1.EventIntrinsicAction.None;
    }
    var eventName = nameBase ? nameBase + '_ev' : '';
    var eventAction = actionEvent_1.dmAddEventFromSpecification(eventName, source, eventSpec);
    batchedActions.push(eventAction);
    var transitionId = bsDmInterfaces_1.BsDmIdNone;
    if (targetSpecified) {
        var transitionName = nameBase ? nameBase + '_tr' : '';
        var transitionAction = actionTransition_1.dmAddTransition(transitionName, eventAction.payload.id, target);
        transitionId = transitionAction.payload.id;
        batchedActions.push(transitionAction);
    }
    dispatch(actionBase_1.dmBatchActions(batchedActions));
    return {
        type: exports.INTERACTIVE_ADD_EVENT_TRANSITION_LINK,
        payload: {
            nameBase: nameBase,
            eventId: eventAction.payload.id,
            transitionId: transitionId,
            sourceMediaStateId: source,
            targetMediaStateId: target,
            eventSpec: eventSpec,
        },
    };
}
function dmUpdateEventAndDefaultTransition(params) {
    return function (dispatch, getState) {
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var existingEvent = selectors_1.dmGetEventById(dmState, { id: params.eventId });
        if (lodash_1.isNil(existingEvent)) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'UpdateEventAndDefaultTransition - no matching event');
        }
        if (!lodash_1.isNil(params.eventSpec)) {
            var testResult = bsDmValidate_1.dmCanUpdateEventToMediaState(dmState, params.eventSpec, existingEvent.mediaStateId, params.eventId, params.target);
            if (!testResult.ok) {
                throw testResult.error;
            }
        }
        var targetSpecified = !lodash_1.isNil(params.target) && utils_1.isValidBsDmId(params.target);
        var batchedActions = [];
        var eventParams = { id: params.eventId };
        var updateEvent = false;
        if (!lodash_1.isNil(params.nameBase)) {
            eventParams.name = params.nameBase ? params.nameBase + '_ev' : '';
            updateEvent = true;
        }
        if (!lodash_1.isNil(params.eventSpec)) {
            if (targetSpecified && params.eventSpec.action !== undefined) {
                params.eventSpec.action = bscore_1.EventIntrinsicAction.None;
            }
            eventParams.type = params.eventSpec.type;
            eventParams.data = params.eventSpec.data;
            if (params.eventSpec.action !== undefined) {
                eventParams.action = params.eventSpec.action;
            }
            updateEvent = true;
        }
        if (updateEvent) {
            var eventAction = actionEvent_1.dmUpdateEvent(eventParams);
            batchedActions.push(eventAction);
        }
        var removeTarget = !lodash_1.isNil(params.target) && params.target === bsDmInterfaces_1.BsDmIdNone;
        var existingTransition = existingEvent.defaultTransition;
        if (removeTarget && !lodash_1.isNil(existingTransition)) {
            var transitionDeleteParams = actionTransition_1.dmGetTransitionDeleteParams(dmState, existingTransition.id);
            batchedActions.push(actionTransition_1.dmDeleteTransitionWithParams(transitionDeleteParams));
        }
        else if (targetSpecified) {
            if (lodash_1.isNil(existingTransition)) {
                var transitionName = existingEvent.name.replace('_ev', '_tr');
                var transitionAction = actionTransition_1.dmAddTransition(transitionName, params.eventId, params.target);
                batchedActions.push(transitionAction);
            }
            else {
                batchedActions.push(actionTransition_1.dmUpdateTransition({ id: existingTransition.id, targetMediaStateId: params.target }));
            }
        }
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return {
            type: exports.INTERACTIVE_UPDATE_EVENT_TRANSITION_LINK,
            payload: params,
        };
    };
}
exports.dmUpdateEventAndDefaultTransition = dmUpdateEventAndDefaultTransition;


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmState_1 = __webpack_require__(5);
var bsDmContentItems_1 = __webpack_require__(13);
var bsDmEvents_1 = __webpack_require__(19);
var bsDmDataFeed_1 = __webpack_require__(18);
var bsDmError_1 = __webpack_require__(4);
var selectors_1 = __webpack_require__(6);
var actionMediaState_1 = __webpack_require__(12);
var actionEvent_1 = __webpack_require__(17);
var actionTransition_1 = __webpack_require__(22);
var actionZone_1 = __webpack_require__(15);
var actionHtmlSite_1 = __webpack_require__(26);
var actionDataFeed_1 = __webpack_require__(20);
var actionAssetMap_1 = __webpack_require__(9);
var actionAssetHelper_1 = __webpack_require__(11);
var actionBase_1 = __webpack_require__(8);
var utils_1 = __webpack_require__(3);
var lodash_1 = __webpack_require__(0);
exports.PLAYLIST_ADD_MEDIA_STATE_AT_INDEX = 'DM_PLAYLIST_ADD_MEDIA_STATE_AT_INDEX';
exports.PLAYLIST_ADD_MEDIA_STATE_RANGE_AT_INDEX = 'DM_PLAYLIST_ADD_MEDIA_STATE_RANGE_AT_INDEX';
exports.PLAYLIST_DELETE_MEDIA_STATE_RANGE = 'DM_PLAYLIST_DELETE_MEDIA_STATE_RANGE';
exports.PLAYLIST_DELETE_MEDIA_STATE_AT_INDICES = 'DM_PLAYLIST_DELETE_MEDIA_STATE_AT_INDICES';
exports.PLAYLIST_MOVE_MEDIA_STATE_RANGE_TO_INDEX = 'DM_PLAYLIST_MOVE_MEDIA_STATE_RANGE_TO_INDEX';
exports.PLAYLIST_MOVE_MEDIA_STATE_INDICES_TO_INDEX = 'DM_PLAYLIST_MOVE_MEDIA_STATE_INDICES_TO_INDEX';
var getDefaultNameForContentItem = function (contentItem, index) {
    return contentItem.name ? contentItem.name : 'State' + index;
};
var getDefaultEventTypeForContentItem = function (contentItem) {
    var eventType = bscore_1.EventType.Timer;
    if (contentItem.type === bscore_1.ContentItemType.Video
        || contentItem.type === bscore_1.ContentItemType.Audio
        || contentItem.type === bscore_1.ContentItemType.MrssFeed
        || contentItem.type === bscore_1.ContentItemType.DataFeed) {
        eventType = bscore_1.EventType.MediaEnd;
    }
    return eventType;
};
var getDefaultTransitionType = function () { return bscore_1.TransitionType.NoEffect; };
function dmPlaylistAddMediaState(index, container, content, name, contentData, transitionType, eventType, eventData) {
    return function (dispatch, getState) {
        var newMediaStateId = utils_1.newBsDmId();
        var contentItem;
        var assetItem;
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var zoneType = selectors_1.dmGetZoneTypeById(dmState, { id: container.id });
        if (!lodash_1.isNil(zoneType)) {
            if (actionMediaState_1.dmContentIsAssetItem(content)) {
                assetItem = __assign({}, content);
                if (bscore_1.bscIsAssetItemPlayableContent(assetItem)) {
                    contentItem = bsDmContentItems_1.dmCreateMediaContentItem(assetItem.name, bscore_1.BsAssetIdNone, assetItem.mediaType);
                }
                else if (assetItem.assetType === bscore_1.AssetType.HtmlSite) {
                    contentItem = bsDmContentItems_1.dmCreateHtmlContentItem(assetItem.name, bsDmInterfaces_1.BsDmIdNone);
                }
                else {
                    throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'PlaylistAddMediaStateAction: Unsupported BsAssetItem assetType');
                }
            }
            else if (bsDmDataFeed_1.dmIsDataFeedSourceSpecification(content)) {
                if (zoneType === bscore_1.ZoneType.Ticker) {
                    content.usage = bscore_1.DataFeedUsageType.Text;
                }
                var dataFeedName = lodash_1.isNil(name) ? '' : name;
                if (bsDmDataFeed_1.dmIsBsnDataFeedSourceSpecification(content)) {
                    dataFeedName = content.assetItem.name;
                }
                contentItem = content.usage === bscore_1.DataFeedUsageType.Text ?
                    bsDmContentItems_1.dmCreateDataFeedContentItem(dataFeedName, bsDmInterfaces_1.BsDmIdNone) :
                    bsDmContentItems_1.dmCreateMrssDataFeedContentItem(dataFeedName, bsDmInterfaces_1.BsDmIdNone);
            }
            else {
                if (bsDmContentItems_1.dmContentItemIsMediaContentItem(content)) {
                    throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'PlaylistAddMediaStateAction: MediaContentItems must be specified by AssetItem parameters');
                }
                else if (bsDmContentItems_1.dmContentItemIsAnyDataFeedContentItem(content)) {
                    var dataFeed = selectors_1.dmGetDataFeedStateById(dmState, { id: content.dataFeedId });
                    if (!lodash_1.isNil(dataFeed) && dataFeed.isSystemFeed) {
                        throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'PlaylistAddMediaStateAction: system dataFeed cannot be used in a dataFeed contentItem');
                    }
                }
                contentItem = content;
            }
            var contentItemData = bsDmContentItems_1.dmFilterContentItemData(contentItem.type, contentData);
            if (contentItemData) {
                contentItem = Object.assign({}, contentItem, contentItemData);
            }
            if (lodash_1.isNil(name)) {
                name = '';
            }
            var mainAction = {
                type: exports.PLAYLIST_ADD_MEDIA_STATE_AT_INDEX,
                payload: { id: newMediaStateId, index: index, container: container, contentItem: contentItem, name: name, transitionType: transitionType, eventType: eventType, eventData: eventData },
            };
            var playlistIds = selectors_1.dmGetZoneSimplePlaylist(dmState, { id: container.id });
            if (!playlistIds) {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidOperation, 'PlaylistAddMediaStateAction: Zone does not contain a valid simple playlist', { action: mainAction });
            }
            if (zoneType === bscore_1.ZoneType.BackgroundImage) {
                var backgroundStates = selectors_1.dmGetMediaStateIdsForZone(dmState, { id: container.id });
                if (backgroundStates.length >= 1) {
                    throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidOperation, 'BackgroundImage can accept only one media state', { action: mainAction });
                }
            }
            if (!bsDmContentItems_1.dmIsValidContentItemForPlaylist(contentItem, zoneType)) {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'PlaylistAddMediaStateAction: Content item type "' + contentItem.type + '" cannot be added to "'
                    + zoneType + '" zone', { action: mainAction });
            }
            if (index === undefined || index > playlistIds.length || index < 0) {
                index = playlistIds.length;
            }
            if (name === '') {
                name = getDefaultNameForContentItem(contentItem, playlistIds.length + 1);
            }
            if (!eventType) {
                mainAction.payload.eventType = eventType = getDefaultEventTypeForContentItem(contentItem);
            }
            if (eventType === bscore_1.EventType.Timer && !(eventData && eventData.interval)) {
                mainAction.payload.eventData = eventData = bsDmEvents_1.dmCreateEventDataForEventType(eventType, contentItem.type);
            }
            if (!transitionType) {
                mainAction.payload.transitionType = transitionType = getDefaultTransitionType();
            }
            var prevMediaStateId = null;
            var nextMediaStateId = null;
            if (playlistIds.length > 1) {
                if (index > 0) {
                    prevMediaStateId = playlistIds[index - 1];
                }
                else {
                    prevMediaStateId = playlistIds[playlistIds.length - 1];
                }
                if (index === playlistIds.length) {
                    nextMediaStateId = playlistIds[0];
                }
                else {
                    nextMediaStateId = playlistIds[index];
                }
            }
            else if (playlistIds.length === 1) {
                prevMediaStateId = nextMediaStateId = playlistIds[0];
            }
            else {
                nextMediaStateId = newMediaStateId;
            }
            var prevMediaState = void 0;
            if (!lodash_1.isNil(prevMediaStateId)) {
                prevMediaState = selectors_1.dmGetMediaStateById(dmState, { id: prevMediaStateId });
            }
            var batchedActions = [];
            if (!lodash_1.isNil(assetItem)) {
                if (assetItem.assetType === bscore_1.AssetType.Content) {
                    assetItem = actionAssetHelper_1.dmSetAssetId(dmState, assetItem);
                    contentItem.assetId = assetItem.id;
                    batchedActions.push(actionAssetMap_1.dmPutAssetItem(assetItem));
                }
                else if (assetItem.assetType === bscore_1.AssetType.HtmlSite) {
                    assetItem = actionAssetHelper_1.dmSetAssetId(dmState, assetItem);
                    batchedActions.push(actionAssetMap_1.dmPutAssetItem(assetItem));
                    var htmlSiteAction = actionHtmlSite_1.dmAddHostedHtmlSiteWithoutAssetProcessing(assetItem.name, assetItem.id);
                    var htmlSiteId = htmlSiteAction.payload.id;
                    batchedActions.push(htmlSiteAction);
                    contentItem.siteId = htmlSiteId;
                }
                mainAction.payload.contentItem = contentItem;
            }
            else if (bsDmDataFeed_1.dmIsDataFeedSourceSpecification(content)) {
                var dataFeedName = bsDmDataFeed_1.dmIsBsnDataFeedSourceSpecification(content) ? content.assetItem.name : contentItem.name;
                var actionListParams = actionDataFeed_1.dmGetAddDataFeedActionList(dmState, dataFeedName, content);
                batchedActions.push.apply(batchedActions, actionListParams.actions);
                contentItem.dataFeedId = actionListParams.mainAction.payload.id;
                mainAction.payload.contentItem = contentItem;
            }
            var addMediaStateAction = actionMediaState_1.dmAddMediaStateWithContentItem(name, container, contentItem);
            addMediaStateAction.payload.id = newMediaStateId;
            batchedActions.push(addMediaStateAction);
            var onlyOneMediaState = nextMediaStateId === newMediaStateId;
            var eventAction = actionEvent_1.dmAddEvent(name + '_ev', eventType, newMediaStateId, eventData, onlyOneMediaState);
            var newEventId = eventAction.payload.id;
            batchedActions.push(eventAction);
            if (prevMediaState) {
                var transitionId = prevMediaState.eventList[0].defaultTransition.id;
                batchedActions.push(actionTransition_1.dmUpdateTransition({
                    id: transitionId,
                    targetMediaStateId: newMediaStateId,
                }));
                var eventId = prevMediaState.eventList[0].id;
                var eventState = selectors_1.dmGetEventStateById(dmState, { id: eventId });
                if (eventState.disabled) {
                    var eventParams = {
                        id: eventId,
                        disabled: false,
                    };
                    batchedActions.push(actionEvent_1.dmUpdateEvent(eventParams));
                }
            }
            batchedActions.push(actionTransition_1.dmAddTransition(name + '_tr', newEventId, nextMediaStateId));
            if (index === 0) {
                batchedActions.push(actionZone_1.dmUpdateZoneWithoutTest({ id: container.id, initialMediaStateId: newMediaStateId }));
            }
            dispatch(actionBase_1.dmBatchActions(batchedActions));
            return mainAction;
        }
        else {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'PlaylistAddMediaStateAction: invalid zone ID');
        }
    };
}
exports.dmPlaylistAddMediaState = dmPlaylistAddMediaState;
function dmPlaylistAppendMediaState(container, content, name, contentData, transitionType, eventType, eventData) {
    return dmPlaylistAddMediaState(-1, container, content, name, contentData, transitionType, eventType, eventData);
}
exports.dmPlaylistAppendMediaState = dmPlaylistAppendMediaState;
function dmPlaylistAddMediaStateRange(index, container, content, name, contentData) {
    return function (dispatch, getState) {
        var getName = function (i) {
            var nameVal = lodash_1.isNil(name) || lodash_1.isNil(name[i]) ? '' : name[i];
            return nameVal;
        };
        var mainAction = {
            type: exports.PLAYLIST_ADD_MEDIA_STATE_RANGE_AT_INDEX,
            payload: {
                index: index,
                container: container,
                id: [],
                name: [],
                contentItems: [],
            },
        };
        if (!content || content.length === 0) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Invalid parameters for MediaState addition: no content provided', { action: mainAction });
        }
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var playlistIds = selectors_1.dmGetZoneSimplePlaylist(dmState, { id: container.id });
        if (!playlistIds) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidOperation, 'Zone does not contain a valid simple playlist', { action: mainAction });
        }
        var updatedPlaylistWillHaveOneMediaState = playlistIds.length === 0 && content.length === 1;
        var zoneType = selectors_1.dmGetZoneTypeById(dmState, { id: container.id });
        if (!lodash_1.isNil(zoneType)) {
            if (zoneType === bscore_1.ZoneType.BackgroundImage && !updatedPlaylistWillHaveOneMediaState) {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidOperation, 'BackgroundImage can accept only one media state', { action: mainAction });
            }
            var contentItems_1 = [];
            var assetItems_1 = [];
            var dataFeedSpecs_1 = [];
            content.forEach(function (item, contentIndex) {
                var contentItem;
                if (actionMediaState_1.dmContentIsAssetItem(item)) {
                    assetItems_1.push(item);
                    dataFeedSpecs_1.push(undefined);
                    if (bscore_1.bscIsAssetItemPlayableContent(item)) {
                        contentItem = bsDmContentItems_1.dmCreateMediaContentItem(item.name, bscore_1.BsAssetIdNone, item.mediaType);
                    }
                    else if (item.assetType === bscore_1.AssetType.HtmlSite) {
                        contentItem = bsDmContentItems_1.dmCreateHtmlContentItem(item.name, bsDmInterfaces_1.BsDmIdNone);
                    }
                    else {
                        throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'PlaylistAddMediaStateRangeAction: Unsupported BsAssetItem assetType');
                    }
                }
                else if (bsDmDataFeed_1.dmIsDataFeedSourceSpecification(item)) {
                    if (zoneType === bscore_1.ZoneType.Ticker) {
                        item.usage = bscore_1.DataFeedUsageType.Text;
                    }
                    var dataFeedName = lodash_1.isNil(name) || lodash_1.isNil(name[contentIndex]) ? '' : name[contentIndex];
                    if (bsDmDataFeed_1.dmIsBsnDataFeedSourceSpecification(item)) {
                        dataFeedName = item.assetItem.name;
                    }
                    contentItem = item.usage === bscore_1.DataFeedUsageType.Text ?
                        bsDmContentItems_1.dmCreateDataFeedContentItem(dataFeedName, bsDmInterfaces_1.BsDmIdNone) :
                        bsDmContentItems_1.dmCreateMrssDataFeedContentItem(dataFeedName, bsDmInterfaces_1.BsDmIdNone);
                    assetItems_1.push(undefined);
                    dataFeedSpecs_1.push(item);
                }
                else {
                    if (bsDmContentItems_1.dmContentItemIsMediaContentItem(item)) {
                        throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'PlaylistAddMediaStateRangeAction: MediaContentItems must be specified by AssetItem parameters');
                    }
                    else if (bsDmContentItems_1.dmContentItemIsAnyDataFeedContentItem(item)) {
                        var dataFeed = selectors_1.dmGetDataFeedStateById(dmState, { id: item.dataFeedId });
                        if (!lodash_1.isNil(dataFeed) && dataFeed.isSystemFeed) {
                            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'PlaylistAddMediaStateRangeAction: system dataFeed cannot be used in a dataFeed contentItem');
                        }
                    }
                    contentItem = item;
                    assetItems_1.push(undefined);
                    dataFeedSpecs_1.push(undefined);
                }
                if (!lodash_1.isNil(contentData)) {
                    var contentItemData = bsDmContentItems_1.dmFilterContentItemData(contentItem.type, contentData[contentIndex]);
                    if (!lodash_1.isNil(contentItemData)) {
                        contentItem = Object.assign({}, contentItem, contentItemData);
                    }
                }
                contentItems_1.push(contentItem);
            });
            var contentItemsInvalid_1 = false;
            contentItems_1.forEach(function (item) {
                if (!bsDmContentItems_1.dmIsValidContentItemForPlaylist(item, zoneType)) {
                    contentItemsInvalid_1 = true;
                }
            });
            if (contentItemsInvalid_1) {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'PlaylistAddMediaStateRangeAction: One or more content item types cannot be added to this Zone type', { action: mainAction });
            }
            if (index === undefined || index > playlistIds.length || index < 0) {
                index = playlistIds.length;
            }
            var prevMediaStateId = null;
            var nextMediaStateId_1 = null;
            if (playlistIds.length > 1) {
                if (index > 0) {
                    prevMediaStateId = playlistIds[index - 1];
                }
                else {
                    prevMediaStateId = playlistIds[playlistIds.length - 1];
                }
                if (index === playlistIds.length) {
                    nextMediaStateId_1 = playlistIds[0];
                }
                else {
                    nextMediaStateId_1 = playlistIds[index];
                }
            }
            else if (playlistIds.length === 1) {
                prevMediaStateId = nextMediaStateId_1 = playlistIds[0];
            }
            var transitionType_1 = getDefaultTransitionType();
            var batchedActions_1 = [];
            var addedEvents_1 = [];
            var addedAssets_1 = new Map();
            var addedHtmlSites_1 = new Map();
            contentItems_1.forEach(function (contentItem, itemIndex) {
                var eventType = getDefaultEventTypeForContentItem(contentItem);
                var eventData = bsDmEvents_1.dmCreateEventDataForEventType(eventType, contentItem.type);
                if (!lodash_1.isNil(assetItems_1[itemIndex])) {
                    var assetItem = Object.assign({}, assetItems_1[itemIndex]);
                    if (assetItem.assetType === bscore_1.AssetType.Content || assetItem.assetType === bscore_1.AssetType.HtmlSite) {
                        assetItem = actionAssetHelper_1.dmSetAssetId(dmState, assetItem);
                        var addedAssetItemId = addedAssets_1.get(assetItem.locator);
                        if (addedAssetItemId) {
                            assetItem.id = addedAssetItemId;
                        }
                        else {
                            addedAssets_1.set(assetItem.locator, assetItem.id);
                        }
                        batchedActions_1.push(actionAssetMap_1.dmPutAssetItem(assetItem));
                        if (assetItem.assetType === bscore_1.AssetType.Content) {
                            contentItem.assetId = assetItem.id;
                        }
                        else if (assetItem.assetType === bscore_1.AssetType.HtmlSite) {
                            var htmlSiteAction = actionHtmlSite_1.dmAddHostedHtmlSiteWithoutAssetProcessing(assetItem.name, assetItem.id);
                            var htmlSiteId = htmlSiteAction.payload.id;
                            batchedActions_1.push(htmlSiteAction);
                            addedHtmlSites_1.set(assetItem.id, htmlSiteId);
                            contentItem.siteId = htmlSiteId;
                        }
                    }
                }
                else {
                    var dataFeedSpec = dataFeedSpecs_1[itemIndex];
                    if (!lodash_1.isNil(dataFeedSpec)) {
                        var dataFeedName = bsDmDataFeed_1.dmIsBsnDataFeedSourceSpecification(dataFeedSpec) ? dataFeedSpec.assetItem.name : contentItem.name;
                        var actionListParams = actionDataFeed_1.dmGetAddDataFeedActionList(dmState, dataFeedName, dataFeedSpec);
                        batchedActions_1.push.apply(batchedActions_1, actionListParams.actions);
                        contentItem.dataFeedId = actionListParams.mainAction.payload.id;
                    }
                }
                mainAction.payload.contentItems.push(contentItem);
                var mediaStateName = getName(itemIndex);
                if (mediaStateName === '') {
                    mediaStateName = getDefaultNameForContentItem(contentItem, playlistIds.length + itemIndex + 1);
                }
                var addMediaStateAction = actionMediaState_1.dmAddMediaStateWithContentItem(mediaStateName, container, contentItem);
                mainAction.payload.id.push(addMediaStateAction.payload.id);
                mainAction.payload.name.push(mediaStateName);
                batchedActions_1.push(addMediaStateAction);
                var eventAction = actionEvent_1.dmAddEvent(name + '_ev', eventType, addMediaStateAction.payload.id, eventData, updatedPlaylistWillHaveOneMediaState);
                addedEvents_1.push(eventAction.payload.id);
                batchedActions_1.push(eventAction);
            });
            if (!lodash_1.isNil(prevMediaStateId)) {
                var prevMediaState = selectors_1.dmGetMediaStateById(dmState, { id: prevMediaStateId });
                if (!lodash_1.isNil(prevMediaState)) {
                    var defaultTransition = prevMediaState.eventList[0].defaultTransition;
                    if (!lodash_1.isNil(defaultTransition)) {
                        batchedActions_1.push(actionTransition_1.dmUpdateTransition({
                            id: defaultTransition.id,
                            targetMediaStateId: mainAction.payload.id[0],
                        }));
                        var eventId = prevMediaState.eventList[0].id;
                        var eventState = selectors_1.dmGetEventStateById(dmState, { id: eventId });
                        if (eventState.disabled) {
                            var eventParams = {
                                id: eventId,
                                disabled: false,
                            };
                            batchedActions_1.push(actionEvent_1.dmUpdateEvent(eventParams));
                        }
                    }
                }
            }
            addedEvents_1.forEach(function (eventId, itemIndex) {
                var nextStateId = itemIndex + 1 < mainAction.payload.id.length ?
                    mainAction.payload.id[itemIndex + 1] :
                    (nextMediaStateId_1 ? nextMediaStateId_1 : mainAction.payload.id[0]);
                batchedActions_1.push(actionTransition_1.dmAddTransition(mainAction.payload.name[itemIndex] + '_tr', eventId, nextStateId, transitionType_1));
            });
            if (index === 0) {
                batchedActions_1.push(actionZone_1.dmUpdateZoneWithoutTest({ id: container.id, initialMediaStateId: mainAction.payload.id[0] }));
            }
            dispatch(actionBase_1.dmBatchActions(batchedActions_1));
            return mainAction;
        }
        else {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'PlaylistAddMediaStateRangeAction: invalid zone ID');
        }
    };
}
exports.dmPlaylistAddMediaStateRange = dmPlaylistAddMediaStateRange;
function dmPlaylistUpdateMediaState(params) {
    return function (dispatch, getState) {
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var mediaState = selectors_1.dmGetMediaStateStateById(dmState, { id: params.id });
        if (!lodash_1.isNil(mediaState)) {
            var playlistIds = selectors_1.dmGetZoneSimplePlaylist(dmState, { id: mediaState.container.id });
            if (!playlistIds) {
                throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidOperation, 'Zone does not contain a valid simple playlist');
            }
            return actionMediaState_1.doUpdateMediaState(params, dispatch, getState);
        }
        else {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'PlaylistUpdateMediaStateAction - invalid mediaState ID');
        }
    };
}
exports.dmPlaylistUpdateMediaState = dmPlaylistUpdateMediaState;
function dmPlaylistDeleteMediaStateRange(container, startingIndex, count) {
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.PLAYLIST_DELETE_MEDIA_STATE_RANGE,
            payload: { containerId: container.id, startingIndex: startingIndex, count: count },
        };
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var playlistIds = selectors_1.dmGetZoneSimplePlaylist(dmState, { id: container.id });
        if (!playlistIds) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidOperation, 'Zone does not contain a valid simple playlist', { action: mainAction });
        }
        if (count === undefined) {
            count = 1;
        }
        if (startingIndex >= playlistIds.length || count === 0 || startingIndex + count > playlistIds.length) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Invalid parameters for deletion range', { action: mainAction });
        }
        var endingIndex = startingIndex + count;
        var mediaStateIdsToDelete = playlistIds.slice(startingIndex, endingIndex);
        var prevMediaStateId = null;
        var nextMediaStateId = null;
        var remainingMediaStates = playlistIds.length - count;
        if (remainingMediaStates > 1) {
            if (startingIndex > 0) {
                prevMediaStateId = playlistIds[startingIndex - 1];
            }
            else {
                prevMediaStateId = playlistIds[playlistIds.length - 1];
            }
            if (endingIndex === playlistIds.length) {
                nextMediaStateId = playlistIds[0];
            }
            else {
                nextMediaStateId = playlistIds[endingIndex];
            }
        }
        else if (remainingMediaStates === 1) {
            if (startingIndex > 0) {
                prevMediaStateId = nextMediaStateId = playlistIds[0];
            }
            else {
                prevMediaStateId = nextMediaStateId = playlistIds[playlistIds.length - 1];
            }
        }
        var prevMediaState;
        if (!lodash_1.isNil(prevMediaStateId)) {
            prevMediaState = selectors_1.dmGetMediaStateById(dmState, { id: prevMediaStateId });
        }
        var batchedActions = [];
        var deleteParams = actionMediaState_1.dmGetMediaStateDeleteParams(dmState, mediaStateIdsToDelete);
        batchedActions.push(actionMediaState_1.dmDeleteMediaStateWithParams(deleteParams));
        if (!lodash_1.isNil(prevMediaState) && !lodash_1.isNil(nextMediaStateId)) {
            var transitionParams = {
                id: prevMediaState.eventList[0].defaultTransition.id,
                targetMediaStateId: nextMediaStateId,
            };
            batchedActions.push(actionTransition_1.dmUpdateTransition(transitionParams));
            if (remainingMediaStates === 1) {
                var eventParams = {
                    id: prevMediaState.eventList[0].id,
                    disabled: true,
                };
                batchedActions.push(actionEvent_1.dmUpdateEvent(eventParams));
            }
        }
        if (startingIndex === 0) {
            var newInitialMediaState = remainingMediaStates > 0 && !lodash_1.isNil(nextMediaStateId) ? nextMediaStateId : bsDmInterfaces_1.BsDmIdNone;
            batchedActions.push(actionZone_1.dmUpdateZoneWithoutTest({ id: container.id, initialMediaStateId: newInitialMediaState }));
        }
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmPlaylistDeleteMediaStateRange = dmPlaylistDeleteMediaStateRange;
function dmPlaylistDeleteMediaStatesAtIndices(container, indices) {
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.PLAYLIST_DELETE_MEDIA_STATE_AT_INDICES,
            payload: { containerId: container.id, indices: indices },
        };
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var playlistIds = selectors_1.dmGetZoneSimplePlaylist(dmState, { id: container.id });
        if (!playlistIds) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidOperation, 'Zone does not contain a valid simple playlist', { action: mainAction });
        }
        if (!indices || indices.length === 0) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Incorrect parameters for media state delete by indices operation', { action: mainAction });
        }
        indices.sort(function (a, b) { return a - b; });
        var tempIndices = indices.slice();
        var finalPlaylistIds = [];
        var mediaStateIdsToDelete = [];
        var mediaStateIdsForTransitionsToUpdate = [];
        playlistIds.forEach(function (id, index) {
            if (index === tempIndices[0]) {
                mediaStateIdsToDelete.push(id);
                var prevMediaState = finalPlaylistIds.length > 0 ? finalPlaylistIds[finalPlaylistIds.length - 1] : undefined;
                if (prevMediaState && mediaStateIdsForTransitionsToUpdate.indexOf(prevMediaState) < 0) {
                    mediaStateIdsForTransitionsToUpdate.push(prevMediaState);
                }
                tempIndices.shift();
            }
            else {
                finalPlaylistIds.push(id);
            }
        });
        if (indices[0] === 0 && finalPlaylistIds.length > 0) {
            var finalMediaState = finalPlaylistIds[finalPlaylistIds.length - 1];
            if (finalMediaState && mediaStateIdsForTransitionsToUpdate.indexOf(finalMediaState) < 0) {
                mediaStateIdsForTransitionsToUpdate.push(finalMediaState);
            }
        }
        var batchedActions = [];
        var deleteParams = actionMediaState_1.dmGetMediaStateDeleteParams(dmState, mediaStateIdsToDelete);
        batchedActions.push(actionMediaState_1.dmDeleteMediaStateWithParams(deleteParams));
        finalPlaylistIds.forEach(function (id, index) {
            var mediaState = selectors_1.dmGetMediaStateById(dmState, { id: id });
            var targetMediaStateId = index + 1 < finalPlaylistIds.length ? finalPlaylistIds[index + 1] : finalPlaylistIds[0];
            if (!lodash_1.isNil(mediaState)) {
                var defaultTransition = mediaState.eventList[0].defaultTransition;
                if (!lodash_1.isNil(defaultTransition)) {
                    var transitionParams = {
                        id: defaultTransition.id,
                        targetMediaStateId: targetMediaStateId,
                    };
                    batchedActions.push(actionTransition_1.dmUpdateTransition(transitionParams));
                    if (finalPlaylistIds.length === 1) {
                        var eventParams = {
                            id: mediaState.eventList[0].id,
                            disabled: true,
                        };
                        batchedActions.push(actionEvent_1.dmUpdateEvent(eventParams));
                    }
                }
            }
        });
        if (indices[0] === 0) {
            var newInitialMediaState = finalPlaylistIds.length > 0 ? finalPlaylistIds[0] : bsDmInterfaces_1.BsDmIdNone;
            batchedActions.push(actionZone_1.dmUpdateZoneWithoutTest({ id: container.id, initialMediaStateId: newInitialMediaState }));
        }
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmPlaylistDeleteMediaStatesAtIndices = dmPlaylistDeleteMediaStatesAtIndices;
function dmPlaylistMoveMediaStateRange(container, startingIndex, targetIndex, count) {
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.PLAYLIST_MOVE_MEDIA_STATE_RANGE_TO_INDEX,
            payload: { containerId: container.id, startingIndex: startingIndex, targetIndex: targetIndex, count: count },
        };
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var playlistIds = selectors_1.dmGetZoneSimplePlaylist(dmState, { id: container.id });
        if (!playlistIds) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidOperation, 'Zone does not contain a valid simple playlist', { action: mainAction });
        }
        if (count === undefined) {
            count = 1;
        }
        if (startingIndex >= playlistIds.length
            || count === 0
            || startingIndex === targetIndex
            || targetIndex + count > playlistIds.length) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Incorrect parameters for media state move operation', { action: mainAction });
        }
        var endingIndex = startingIndex + count;
        var intermediateListIds = playlistIds.slice();
        intermediateListIds.splice(startingIndex, count);
        var prevMediaStateIdForSrc = null;
        var nextMediaStateIdForSrc = null;
        if (intermediateListIds.length > 1) {
            if (startingIndex > 0) {
                prevMediaStateIdForSrc = playlistIds[startingIndex - 1];
            }
            else {
                prevMediaStateIdForSrc = playlistIds[playlistIds.length - 1];
            }
            if (endingIndex === playlistIds.length) {
                nextMediaStateIdForSrc = playlistIds[0];
            }
            else {
                nextMediaStateIdForSrc = playlistIds[endingIndex];
            }
        }
        var prevMediaStateIdForTarget = null;
        var nextMediaStateIdForTarget = null;
        if (targetIndex >= intermediateListIds.length || targetIndex === 0) {
            prevMediaStateIdForTarget = intermediateListIds[intermediateListIds.length - 1];
            nextMediaStateIdForTarget = intermediateListIds[0];
        }
        else {
            prevMediaStateIdForTarget = intermediateListIds[targetIndex - 1];
            nextMediaStateIdForTarget = intermediateListIds[targetIndex];
        }
        var firstMediaStateIdToMove = playlistIds[startingIndex];
        var lastMediaStateIdToMove = playlistIds[endingIndex - 1];
        var prevMediaStateForSrc;
        if (prevMediaStateIdForSrc) {
            prevMediaStateForSrc = selectors_1.dmGetMediaStateById(dmState, { id: prevMediaStateIdForSrc });
        }
        var prevMediaStateForTarget;
        if (prevMediaStateIdForTarget) {
            prevMediaStateForTarget = selectors_1.dmGetMediaStateById(dmState, { id: prevMediaStateIdForTarget });
        }
        var lastMediaStateToMove;
        if (lastMediaStateIdToMove) {
            lastMediaStateToMove = selectors_1.dmGetMediaStateById(dmState, { id: lastMediaStateIdToMove });
        }
        var batchedActions = [];
        if (prevMediaStateForSrc && nextMediaStateIdForSrc) {
            var transitionId = prevMediaStateForSrc.eventList[0].defaultTransition.id;
            batchedActions.push(actionTransition_1.dmUpdateTransition({ id: transitionId, targetMediaStateId: nextMediaStateIdForSrc }));
        }
        if (prevMediaStateForTarget) {
            var transitionId = prevMediaStateForTarget.eventList[0].defaultTransition.id;
            batchedActions.push(actionTransition_1.dmUpdateTransition({ id: transitionId, targetMediaStateId: firstMediaStateIdToMove }));
        }
        if (lastMediaStateToMove) {
            var transitionId = lastMediaStateToMove.eventList[0].defaultTransition.id;
            batchedActions.push(actionTransition_1.dmUpdateTransition({ id: transitionId, targetMediaStateId: nextMediaStateIdForTarget }));
        }
        if (startingIndex === 0 || targetIndex === 0) {
            var newInitialMediaStateId = targetIndex === 0 ? firstMediaStateIdToMove : intermediateListIds[0];
            batchedActions.push(actionZone_1.dmUpdateZoneWithoutTest({ id: container.id, initialMediaStateId: newInitialMediaStateId }));
        }
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmPlaylistMoveMediaStateRange = dmPlaylistMoveMediaStateRange;
function dmPlaylistMoveMediaStatesAtIndices(container, indices, targetIndex) {
    return function (dispatch, getState) {
        var mainAction = {
            type: exports.PLAYLIST_MOVE_MEDIA_STATE_INDICES_TO_INDEX,
            payload: { containerId: container.id, indices: indices, targetIndex: targetIndex },
        };
        var dmState = bsDmState_1.dmFilterDmState(getState());
        var playlistIds = selectors_1.dmGetZoneSimplePlaylist(dmState, { id: container.id });
        if (!playlistIds) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidOperation, 'Zone does not contain a valid simple playlist', { action: mainAction });
        }
        if (!indices || indices.length === 0) {
            throw new bsDmError_1.BsDmError(bsDmError_1.DmErrorType.invalidParameters, 'Incorrect parameters for media state move by indices operation', { action: mainAction });
        }
        if (targetIndex > playlistIds.length) {
            targetIndex = playlistIds.length;
        }
        indices.sort(function (a, b) { return a - b; });
        var tempIndices = indices.slice();
        var finalPlaylistIds = [];
        var movedMediaStateIds = [];
        var mediaStateIdsForTransitionsToUpdate = [];
        var finalTargetIndex = playlistIds.length;
        playlistIds.forEach(function (id, index) {
            if (index === tempIndices[0]) {
                movedMediaStateIds.push(id);
                mediaStateIdsForTransitionsToUpdate.push(id);
                var prevMediaState = finalPlaylistIds.length > 0 ? finalPlaylistIds[finalPlaylistIds.length - 1] : undefined;
                if (prevMediaState && mediaStateIdsForTransitionsToUpdate.indexOf(prevMediaState) < 0) {
                    mediaStateIdsForTransitionsToUpdate.push(prevMediaState);
                }
                if (index === targetIndex) {
                    ++targetIndex;
                }
                tempIndices.shift();
            }
            else {
                finalPlaylistIds.push(id);
                if (index === targetIndex) {
                    finalTargetIndex = finalPlaylistIds.length - 1;
                }
            }
        });
        mainAction.payload.targetIndex = targetIndex;
        var preInsertMediaState = finalTargetIndex > 0 ?
            finalPlaylistIds[finalTargetIndex - 1] : finalPlaylistIds[finalPlaylistIds.length - 1];
        if (preInsertMediaState && mediaStateIdsForTransitionsToUpdate.indexOf(preInsertMediaState) < 0) {
            mediaStateIdsForTransitionsToUpdate.push(preInsertMediaState);
        }
        if (indices[0] === 0 || targetIndex === playlistIds.length) {
            var finalMediaState = finalPlaylistIds[finalPlaylistIds.length - 1];
            if (finalMediaState && mediaStateIdsForTransitionsToUpdate.indexOf(finalMediaState) < 0) {
                mediaStateIdsForTransitionsToUpdate.push(finalMediaState);
            }
        }
        finalPlaylistIds.splice.apply(finalPlaylistIds, [finalTargetIndex, 0].concat(movedMediaStateIds));
        var batchedActions = [];
        finalPlaylistIds.forEach(function (id, index) {
            var transitionChangeIndex = mediaStateIdsForTransitionsToUpdate.indexOf(id);
            if (transitionChangeIndex >= 0) {
                var mediaState = selectors_1.dmGetMediaStateById(dmState, { id: id });
                var targetMediaStateId = index + 1 < finalPlaylistIds.length ? finalPlaylistIds[index + 1] : finalPlaylistIds[0];
                if (!lodash_1.isNil(mediaState)) {
                    var defaultTransition = mediaState.eventList[0].defaultTransition;
                    if (!lodash_1.isNil(defaultTransition)) {
                        batchedActions.push(actionTransition_1.dmUpdateTransition({ id: defaultTransition.id, targetMediaStateId: targetMediaStateId }));
                    }
                }
                mediaStateIdsForTransitionsToUpdate.splice(transitionChangeIndex, 1);
            }
        });
        if (indices[0] === 0 || targetIndex === 0) {
            var newInitialMediaState = finalPlaylistIds.length > 0 ? finalPlaylistIds[0] : bsDmInterfaces_1.BsDmIdNone;
            batchedActions.push(actionZone_1.dmUpdateZoneWithoutTest({ id: container.id, initialMediaStateId: newInitialMediaState }));
        }
        dispatch(actionBase_1.dmBatchActions(batchedActions));
        return mainAction;
    };
}
exports.dmPlaylistMoveMediaStatesAtIndices = dmPlaylistMoveMediaStatesAtIndices;


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(67);
__webpack_require__(66);
__webpack_require__(65);
__webpack_require__(64);
__export(__webpack_require__(63));
__export(__webpack_require__(61));
__export(__webpack_require__(6));
__export(__webpack_require__(2));
__export(__webpack_require__(5));
__export(__webpack_require__(10));
__export(__webpack_require__(33));
__export(__webpack_require__(13));
__export(__webpack_require__(19));
__export(__webpack_require__(62));
__export(__webpack_require__(34));
__export(__webpack_require__(35));
__export(__webpack_require__(18));
__export(__webpack_require__(38));
__export(__webpack_require__(28));
__export(__webpack_require__(14));
__export(__webpack_require__(25));
__export(__webpack_require__(39));
__export(__webpack_require__(4));
var bsDmDefaults_1 = __webpack_require__(16);
exports.dmSetDefaultPropertyValues = bsDmDefaults_1.dmSetDefaultPropertyValues;
exports.dmResetDefaultPropertyValues = bsDmDefaults_1.dmResetDefaultPropertyValues;
exports.dmGetDefaultPropertyValues = bsDmDefaults_1.dmGetDefaultPropertyValues;
exports.dmGetDefaultSignPropertyData = bsDmDefaults_1.dmGetDefaultSignPropertyData;
exports.dmGetDefaultSerialPortList = bsDmDefaults_1.dmGetDefaultSerialPortList;
exports.dmGetDefaultGpioList = bsDmDefaults_1.dmGetDefaultGpioList;
exports.dmGetDefaultButtonPanelMap = bsDmDefaults_1.dmGetDefaultButtonPanelMap;
exports.dmGetDefaultAudioSignPropertyMap = bsDmDefaults_1.dmGetDefaultAudioSignPropertyMap;
exports.dmGetDefaultAudioZoneProperties = bsDmDefaults_1.dmGetDefaultAudioZoneProperties;
exports.dmGetDefaultEnhancedAudioZoneProperties = bsDmDefaults_1.dmGetDefaultEnhancedAudioZoneProperties;
exports.dmGetDefaultImageZoneProperties = bsDmDefaults_1.dmGetDefaultImageZoneProperties;
exports.dmGetDefaultVideoZoneProperties = bsDmDefaults_1.dmGetDefaultVideoZoneProperties;
exports.dmGetDefaultTickerZoneProperties = bsDmDefaults_1.dmGetDefaultTickerZoneProperties;
exports.dmGetDefaultClockZoneProperties = bsDmDefaults_1.dmGetDefaultClockZoneProperties;
exports.dmGetDefaultLiveTextItemTextProperties = bsDmDefaults_1.dmGetDefaultLiveTextItemTextProperties;
exports.dmGetDefaultDataFeedSourceProperties = bsDmDefaults_1.dmGetDefaultDataFeedSourceProperties;
exports.dmGetDefaultVideoContentItemData = bsDmDefaults_1.dmGetDefaultVideoContentItemData;
exports.dmGetDefaultAudioContentItemData = bsDmDefaults_1.dmGetDefaultAudioContentItemData;
exports.dmGetDefaultImageContentItemData = bsDmDefaults_1.dmGetDefaultImageContentItemData;
exports.dmGetDefaultHtmlContentItemData = bsDmDefaults_1.dmGetDefaultHtmlContentItemData;
exports.dmGetDefaultMrssDataFeedContentItemData = bsDmDefaults_1.dmGetDefaultMrssDataFeedContentItemData;
exports.dmGetDefaultTwitterFeedContentItemData = bsDmDefaults_1.dmGetDefaultTwitterFeedContentItemData;
exports.dmGetDefaultLiveVideoContentItemData = bsDmDefaults_1.dmGetDefaultLiveVideoContentItemData;
exports.dmGetDefaultVideoStreamContentItemData = bsDmDefaults_1.dmGetDefaultVideoStreamContentItemData;
exports.dmGetDefaultAudioStreamContentItemData = bsDmDefaults_1.dmGetDefaultAudioStreamContentItemData;
exports.dmGetDefaultMjpegStreamContentItemData = bsDmDefaults_1.dmGetDefaultMjpegStreamContentItemData;
exports.dmGetDefaultMediaListContentItemData = bsDmDefaults_1.dmGetDefaultMediaListContentItemData;
exports.dmGetDefaultPlayFileContentItemData = bsDmDefaults_1.dmGetDefaultPlayFileContentItemData;
exports.dmGetDefaultEventHandlerContentItemData = bsDmDefaults_1.dmGetDefaultEventHandlerContentItemData;


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var actionAssetMap_1 = __webpack_require__(9);
var actionSign_1 = __webpack_require__(7);
var actionZone_1 = __webpack_require__(15);
var actionMediaState_1 = __webpack_require__(12);
var actionDataFeed_1 = __webpack_require__(20);
var actionUserVariable_1 = __webpack_require__(30);
var actionLiveText_1 = __webpack_require__(27);
var lodash_1 = __webpack_require__(0);
var assetsById = function (state, _a) {
    var _b, _c;
    if (state === void 0) { state = {}; }
    var type = _a.type, payload = _a.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN: {
            var newState = payload.newState;
            return newState.assetMap ? newState.assetMap : {};
        }
        case actionAssetMap_1.PUT_ASSET_ITEM: {
            var id = payload.id;
            var newItem = void 0;
            if (state[id]) {
                newItem = Object.assign({}, state[id], payload);
            }
            else {
                newItem = Object.assign({}, payload);
            }
            newItem.refCount = newItem.refCount ? newItem.refCount + 1 : 1;
            return Object.assign({}, state, (_b = {}, _b[id] = newItem, _b));
        }
        case actionAssetMap_1.REMOVE_ASSET_ITEMS:
        case actionMediaState_1.DELETE_MEDIA_STATE:
        case actionZone_1.DELETE_ZONE:
        case actionDataFeed_1.DELETE_DATA_FEED:
        case actionDataFeed_1.REMOVE_DATA_FEED_SOURCE:
        case actionUserVariable_1.DELETE_USER_VARIABLE:
        case actionLiveText_1.DELETE_LIVE_TEXT_CANVAS:
        case actionLiveText_1.DELETE_LIVE_TEXT_ITEM:
        case actionLiveText_1.DELETE_LIVE_TEXT_DATA_FEED: {
            var assetIds = payload.assetIds;
            if (!lodash_1.isNil(assetIds) && assetIds.length) {
                var newState_1 = __assign({}, state);
                assetIds.forEach(function (id) {
                    if (!lodash_1.isNil(newState_1[id])) {
                        if (!lodash_1.isNil(newState_1[id].refCount) && newState_1[id].refCount > 1) {
                            newState_1[id].refCount = newState_1[id].refCount - 1;
                        }
                        else {
                            delete newState_1[id];
                        }
                    }
                });
                return newState_1;
            }
            break;
        }
        case actionAssetMap_1.UPDATE_ASSET_LOCATION: {
            var assetItem = payload.assetItem;
            var existingItem = state[assetItem.id];
            if (!lodash_1.isNil(existingItem)) {
                var newItem = __assign({}, assetItem, { refCount: existingItem.refCount });
                return Object.assign({}, state, (_c = {}, _c[assetItem.id] = newItem, _c));
            }
            break;
        }
    }
    return state;
};
var assetMapReducer = assetsById;
exports.default = assetMapReducer;


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var actionAuxiliaryFile_1 = __webpack_require__(40);
var actionSign_1 = __webpack_require__(7);
var lodash_1 = __webpack_require__(0);
var updatePriorVersionFileState = function (files) {
    if (lodash_1.isArray(files)) {
        return {};
    }
    return files;
};
var auxiliaryFiles = function (state, _a) {
    var _b, _c;
    if (state === void 0) { state = {}; }
    var type = _a.type, payload = _a.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN: {
            var newState = payload.newState;
            return newState.auxiliaryFiles ? updatePriorVersionFileState(newState.auxiliaryFiles) : {};
        }
        case actionAuxiliaryFile_1.PUT_AUX_FILE: {
            var id = payload.id;
            return Object.assign({}, state, (_b = {}, _b[id] = payload, _b));
        }
        case actionAuxiliaryFile_1.UPDATE_AUX_FILE: {
            var id = payload.id;
            if (state[id] !== undefined) {
                var updatedFile = Object.assign({}, state[id], payload);
                return Object.assign({}, state, (_c = {}, _c[id] = updatedFile, _c));
            }
            break;
        }
        case actionAuxiliaryFile_1.REMOVE_AUX_FILES: {
            var id = payload.id;
            return lodash_1.omit(state, id);
        }
    }
    return state;
};
var auxiliaryFilesReducer = auxiliaryFiles;
exports.default = auxiliaryFilesReducer;
exports.isValidAuxiliaryFileState = function (state) {
    return typeof state === 'object';
};


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var redux_1 = __webpack_require__(21);
var lodash_1 = __webpack_require__(0);
var actionCommand_1 = __webpack_require__(29);
var actionSign_1 = __webpack_require__(7);
var actionZone_1 = __webpack_require__(15);
var actionMediaState_1 = __webpack_require__(12);
var actionEvent_1 = __webpack_require__(17);
var actionTransition_1 = __webpack_require__(22);
var utils_1 = __webpack_require__(3);
var commandsById = function (state, action) {
    var _a, _b;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN: {
            var newState = payload.newState;
            return newState.commands ? newState.commands.commandsById : {};
        }
        case actionCommand_1.ADD_COMMAND: {
            var command = payload.command;
            return __assign({}, state, (_a = {}, _a[command.id] = command, _a));
        }
        case actionCommand_1.UPDATE_COMMAND: {
            var id = payload.id;
            if (state[id] !== undefined) {
                var payloadCopy = lodash_1.pick(payload, ['id', 'name', 'startTime']);
                if (payload.hasOwnProperty('operations')) {
                    payloadCopy.operations = lodash_1.cloneDeep(payload.operations);
                }
                var updatedCommand = Object.assign({}, state[id], payloadCopy);
                return __assign({}, state, (_b = {}, _b[id] = updatedCommand, _b));
            }
            break;
        }
        case actionCommand_1.DELETE_COMMAND:
        case actionMediaState_1.DELETE_MEDIA_STATE:
        case actionEvent_1.DELETE_EVENT:
        case actionTransition_1.DELETE_TRANSITION:
        case actionZone_1.DELETE_ZONE: {
            var commandIds = payload.commandIds;
            if (!lodash_1.isNil(commandIds) && commandIds.length) {
                return lodash_1.omit(state, commandIds);
            }
            break;
        }
    }
    return state;
};
var sequencesById = function (state, action) {
    var _a, _b;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN: {
            var newState = payload.newState;
            return newState.commands ? newState.commands.sequencesById : {};
        }
        case actionCommand_1.ADD_COMMAND: {
            var _c = payload, sequenceType = _c.sequenceType, parentId = _c.parentId, command = _c.command;
            var sequence = state[command.sequenceId];
            var newCommandSequence = sequence ? sequence.sequence.concat([command.id]) : [command.id];
            var newSequence = { id: command.sequenceId, type: sequenceType, parentId: parentId, sequence: newCommandSequence };
            return __assign({}, state, (_a = {}, _a[command.sequenceId] = newSequence, _a));
        }
        case actionCommand_1.MOVE_COMMAND: {
            var _d = payload, sequenceId = _d.sequenceId, indices = _d.indices, targetIndex = _d.targetIndex;
            var sequenceObject = state[sequenceId];
            if (!lodash_1.isNil(sequenceObject)) {
                var newSequence = utils_1.moveIdsInSequence(sequenceObject.sequence, indices, targetIndex);
                if (newSequence !== sequenceObject.sequence) {
                    var newSequenceObject = {
                        id: sequenceObject.id, type: sequenceObject.type, parentId: sequenceObject.parentId, sequence: newSequence
                    };
                    return __assign({}, state, (_b = {}, _b[sequenceId] = newSequenceObject, _b));
                }
            }
            break;
        }
        case actionCommand_1.DELETE_COMMAND:
        case actionMediaState_1.DELETE_MEDIA_STATE:
        case actionEvent_1.DELETE_EVENT:
        case actionTransition_1.DELETE_TRANSITION:
        case actionZone_1.DELETE_ZONE: {
            var commandIds_1 = payload.commandIds;
            if (commandIds_1 && commandIds_1.length) {
                var newState_1 = {};
                Object.keys(state).forEach(function (sequenceId) {
                    var currentSequence = state[sequenceId];
                    var newCommandSequence = lodash_1.without.apply(void 0, [currentSequence.sequence].concat(commandIds_1));
                    if (newCommandSequence.length !== currentSequence.sequence.length) {
                        if (newCommandSequence.length > 0) {
                            newState_1[sequenceId] = Object.assign({}, currentSequence, { sequence: newCommandSequence });
                        }
                    }
                    else {
                        newState_1[sequenceId] = currentSequence;
                    }
                });
                return newState_1;
            }
            break;
        }
    }
    return state;
};
var commandReducer = redux_1.combineReducers({ commandsById: commandsById, sequencesById: sequencesById });
exports.default = commandReducer;


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var actionSign_1 = __webpack_require__(7);
var actionCustomAutorun_1 = __webpack_require__(41);
var customAutorun = function (state, _a) {
    if (state === void 0) { state = bscore_1.BsAssetIdNone; }
    var type = _a.type, payload = _a.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return bscore_1.BsAssetIdNone;
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            return newState.customAutorun ? newState.customAutorun : bscore_1.BsAssetIdNone;
        case actionCustomAutorun_1.SET_CUSTOM_AUTORUN:
            return payload;
    }
    return state;
};
var customAutorunReducer = customAutorun;
exports.default = customAutorunReducer;


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var redux_1 = __webpack_require__(21);
var lodash_1 = __webpack_require__(0);
var actionDataFeed_1 = __webpack_require__(20);
var actionSign_1 = __webpack_require__(7);
var actionZone_1 = __webpack_require__(15);
var actionMediaState_1 = __webpack_require__(12);
var actionUserVariable_1 = __webpack_require__(30);
var actionLiveText_1 = __webpack_require__(27);
var lodash_2 = __webpack_require__(0);
var feedsById = function (state, action) {
    var _a, _b;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            return !lodash_2.isNil(newState.dataFeeds) && !lodash_2.isNil(newState.dataFeeds.feedsById) ? newState.dataFeeds.feedsById : {};
        case actionDataFeed_1.ADD_DATA_FEED: {
            var _c = payload, id = _c.id, name_1 = _c.name, feedSourceId = _c.feedSourceId, usage = _c.usage, properties = _c.properties;
            var newFeed = __assign({ id: id, name: name_1, feedSourceId: feedSourceId, usage: usage }, properties);
            return __assign({}, state, (_a = {}, _a[id] = newFeed, _a));
        }
        case actionDataFeed_1.UPDATE_DATA_FEED: {
            var _d = payload, id = _d.id, properties = _d.properties;
            var updatedFeed = __assign({}, state[id], lodash_1.pick(payload, ['name', 'feedSourceId', 'usage']), properties);
            return __assign({}, state, (_b = {}, _b[id] = updatedFeed, _b));
        }
        case actionMediaState_1.DELETE_MEDIA_STATE:
        case actionZone_1.DELETE_ZONE:
        case actionDataFeed_1.DELETE_DATA_FEED:
        case actionUserVariable_1.DELETE_USER_VARIABLE:
        case actionLiveText_1.DELETE_LIVE_TEXT_CANVAS:
        case actionLiveText_1.DELETE_LIVE_TEXT_ITEM:
        case actionLiveText_1.DELETE_LIVE_TEXT_DATA_FEED: {
            var dataFeedsIds = payload.dataFeedIds;
            if (!lodash_2.isNil(dataFeedsIds) && dataFeedsIds.length) {
                return lodash_1.omit(state, dataFeedsIds);
            }
            break;
        }
    }
    return state;
};
var sourcesById = function (state, action) {
    var _a, _b;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN: {
            var newState = payload.newState;
            return newState.dataFeeds.sourcesById ? newState.dataFeeds.sourcesById : {};
        }
        case actionDataFeed_1.PUT_DATA_FEED_SOURCE: {
            var feedSource = payload;
            var id = feedSource.id, updateInterval = feedSource.updateInterval, useHeadRequest = feedSource.useHeadRequest;
            var existingFeedSource = state[id];
            var newFeedSource = void 0;
            if (!lodash_2.isNil(existingFeedSource)) {
                newFeedSource = __assign({}, existingFeedSource, { updateInterval: updateInterval, useHeadRequest: useHeadRequest });
                newFeedSource.refCount = existingFeedSource.refCount + 1;
            }
            else {
                newFeedSource = __assign({}, feedSource);
                newFeedSource.refCount = 1;
            }
            return __assign({}, state, (_a = {}, _a[id] = newFeedSource, _a));
        }
        case actionDataFeed_1.UPDATE_DATA_FEED_SOURCE: {
            var feedSource = payload;
            var id = feedSource.id;
            if (!lodash_2.isNil(id)) {
                var existingFeedSource = state[id];
                if (!lodash_2.isNil(existingFeedSource)) {
                    var newFeedSource = __assign({}, existingFeedSource, feedSource);
                    return __assign({}, state, (_b = {}, _b[id] = newFeedSource, _b));
                }
            }
            break;
        }
        case actionMediaState_1.DELETE_MEDIA_STATE:
        case actionZone_1.DELETE_ZONE:
        case actionDataFeed_1.DELETE_DATA_FEED:
        case actionDataFeed_1.REMOVE_DATA_FEED_SOURCE:
        case actionUserVariable_1.DELETE_USER_VARIABLE:
        case actionLiveText_1.DELETE_LIVE_TEXT_CANVAS:
        case actionLiveText_1.DELETE_LIVE_TEXT_ITEM:
        case actionLiveText_1.DELETE_LIVE_TEXT_DATA_FEED: {
            var dataFeedSourceIds = payload.dataFeedSourceIds;
            if (!lodash_2.isNil(dataFeedSourceIds) && dataFeedSourceIds.length) {
                var newState_1 = __assign({}, state);
                dataFeedSourceIds.forEach(function (id) {
                    if (!lodash_2.isNil(newState_1[id]) && !lodash_2.isNil(newState_1[id].refCount) && newState_1[id].refCount > 1) {
                        newState_1[id].refCount = newState_1[id].refCount - 1;
                    }
                    else {
                        delete newState_1[id];
                    }
                });
                return newState_1;
            }
            break;
        }
    }
    return state;
};
var dataFeedReducer = redux_1.combineReducers({ feedsById: feedsById, sourcesById: sourcesById });
exports.default = dataFeedReducer;
exports.isValidDataFeedState = function (state) {
    if (typeof state === 'object') {
        return (state.hasOwnProperty('feedsById') && state.hasOwnProperty('sourcesById'))
            || Object.keys(state).length === 0;
    }
    return false;
};


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var actionDeviceWebPage_1 = __webpack_require__(42);
var actionSign_1 = __webpack_require__(7);
var lodash_1 = __webpack_require__(0);
var getDeviceWebPageParams = function (payload) {
    var id = payload.id, name = payload.name, indexAssetId = payload.indexAssetId, port = payload.port;
    return { id: id, name: name, indexAssetId: indexAssetId, port: port };
};
var getUpdateDeviceWebPageParams = function (payload) {
    return lodash_1.pick(payload, ['name', 'indexAssetId', 'port']);
};
var deviceWebPagesById = function (state, action) {
    var _a, _b;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            return newState.deviceWebPages ? newState.deviceWebPages : {};
        case actionDeviceWebPage_1.ADD_DEVICE_WEB_PAGE: {
            var id = payload.id;
            return Object.assign({}, state, (_a = {}, _a[id] = getDeviceWebPageParams(payload), _a));
        }
        case actionDeviceWebPage_1.UPDATE_DEVICE_WEB_PAGE: {
            var id = payload.id;
            var updatedDeviceWebPage = Object.assign({}, state[id], getUpdateDeviceWebPageParams(payload));
            return Object.assign({}, state, (_b = {}, _b[id] = updatedDeviceWebPage, _b));
        }
        case actionDeviceWebPage_1.DELETE_DEVICE_WEB_PAGE:
            return lodash_1.omit(state, payload.id);
    }
    return state;
};
var deviceWebPageReducer = deviceWebPagesById;
exports.default = deviceWebPageReducer;
exports.isValidDeviceWebPageState = function (state) {
    return typeof state === 'object';
};


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var lodash_1 = __webpack_require__(0);
var actionEvent_1 = __webpack_require__(17);
var actionSign_1 = __webpack_require__(7);
var actionZone_1 = __webpack_require__(15);
var actionMediaState_1 = __webpack_require__(12);
var createEventState = function (id, name, type, mediaStateId, disabled, data, intrinsicAction) {
    var eventState = {
        id: id,
        name: lodash_1.isNil(name) ? '' : name,
        type: type, mediaStateId: mediaStateId, disabled: disabled, data: data
    };
    if (!lodash_1.isNil(intrinsicAction)) {
        eventState.action = intrinsicAction;
    }
    return eventState;
};
var updatePriorVersionEventState = function (state) {
    var eventState = state;
    var enabled = { disabled: false };
    Object.keys(state).forEach(function (eventId) {
        var event = state[eventId];
        if (!event.hasOwnProperty('disabled')) {
            eventState[eventId] = __assign({}, event, enabled);
        }
    });
    return eventState;
};
var eventsById = function (state, action) {
    var _a, _b;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN: {
            var newState = payload.newState;
            return updatePriorVersionEventState(newState.events);
        }
        case actionEvent_1.ADD_EVENT: {
            var _c = payload, id = _c.id, name_1 = _c.name, eventType = _c.type, mediaStateId = _c.mediaStateId, disabled = _c.disabled, data = _c.data, intrinsicAction = _c.action;
            return Object.assign({}, state, (_a = {}, _a[id] = createEventState(id, name_1, eventType, mediaStateId, disabled, data, intrinsicAction), _a));
        }
        case actionEvent_1.ADD_MULTIPLE_EVENTS: {
            var events = payload.events;
            var newEvents = events.reduce(function (acc, event) {
                var _a;
                return (__assign({}, acc, (_a = {}, _a[event.id] = event, _a)));
            }, {});
            return __assign({}, state, newEvents);
        }
        case actionEvent_1.UPDATE_EVENT: {
            var id = payload.id;
            var updatedEvent = Object.assign({}, state[id], payload);
            return Object.assign({}, state, (_b = {}, _b[id] = updatedEvent, _b));
        }
        case actionEvent_1.DELETE_EVENT:
        case actionMediaState_1.DELETE_MEDIA_STATE:
        case actionZone_1.DELETE_ZONE: {
            var eventIds = payload.eventIds;
            if (eventIds && eventIds.length) {
                return lodash_1.omit(state, eventIds);
            }
            break;
        }
    }
    return state;
};
var eventReducer = eventsById;
exports.default = eventReducer;


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var actionHtmlSite_1 = __webpack_require__(26);
var actionSign_1 = __webpack_require__(7);
var lodash_1 = __webpack_require__(0);
var getHtmlSiteForType = function (payload) {
    var _a = payload, id = _a.id, name = _a.name, type = _a.type, queryString = _a.queryString;
    var baseSite = { id: id, name: name, type: type, queryString: queryString };
    switch (type) {
        case bscore_1.HtmlSiteType.Hosted: {
            var _b = payload, indexAssetId = _b.indexAssetId, enableNode = _b.enableNode;
            return Object.assign(baseSite, { indexAssetId: indexAssetId, enableNode: enableNode });
        }
        case bscore_1.HtmlSiteType.Remote: {
            var url = payload.url;
            return Object.assign(baseSite, { url: url });
        }
    }
    return undefined;
};
var getUpdateHtmlParamsForType = function (payload) {
    var siteType = payload.type;
    var updateParams = lodash_1.pick(payload, ['id', 'type', 'name', 'queryString']);
    switch (siteType) {
        case bscore_1.HtmlSiteType.Hosted: {
            return Object.assign(updateParams, lodash_1.pick(payload, ['indexAssetId', 'enableNode']));
        }
        case bscore_1.HtmlSiteType.Remote: {
            return Object.assign(updateParams, lodash_1.pick(payload, 'url'));
        }
    }
    return undefined;
};
var htmlSitesById = function (state, action) {
    var _a, _b;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            return newState.htmlSites ? newState.htmlSites : {};
        case actionHtmlSite_1.ADD_HTML_SITE: {
            var id = payload.id;
            var newSite = getHtmlSiteForType(payload);
            if (newSite) {
                return Object.assign({}, state, (_a = {}, _a[id] = newSite, _a));
            }
            break;
        }
        case actionHtmlSite_1.UPDATE_HTML_SITE: {
            var id = payload.id;
            var htmlSite = state[id];
            if (htmlSite) {
                if (!payload.hasOwnProperty('type')) {
                    payload.type = htmlSite.type;
                }
                var updateParams = getUpdateHtmlParamsForType(payload);
                if (updateParams) {
                    var updatedHtmlSite = updateParams.type === state[id].type ?
                        Object.assign({}, state[id], updateParams) :
                        updateParams;
                    return Object.assign({}, state, (_b = {}, _b[id] = updatedHtmlSite, _b));
                }
            }
            break;
        }
        case actionHtmlSite_1.DELETE_HTML_SITE:
            return lodash_1.omit(state, payload.id);
    }
    return state;
};
var htmlSiteReducer = htmlSitesById;
exports.default = htmlSiteReducer;
exports.isValidHtmlSiteState = function (state) {
    return typeof state === 'object';
};


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var actionLinkedPresentation_1 = __webpack_require__(51);
var actionSign_1 = __webpack_require__(7);
var lodash_1 = __webpack_require__(0);
var linkedPresentations = function (state, _a) {
    var _b, _c;
    if (state === void 0) { state = {}; }
    var type = _a.type, payload = _a.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN: {
            var newState = payload.newState;
            return lodash_1.isNil(newState.linkedPresentations) ? {} : newState.linkedPresentations;
        }
        case actionLinkedPresentation_1.PUT_LINKED_PRESENTATION: {
            var id = payload.id;
            return Object.assign({}, state, (_b = {}, _b[id] = payload, _b));
        }
        case actionLinkedPresentation_1.UPDATE_LINKED_PRESENTATION: {
            var id = payload.id;
            if (state[id] !== undefined) {
                var updatedFile = Object.assign({}, state[id], payload);
                return Object.assign({}, state, (_c = {}, _c[id] = updatedFile, _c));
            }
            break;
        }
        case actionLinkedPresentation_1.REMOVE_LINKED_PRESENTATION: {
            var id = payload.id;
            return lodash_1.omit(state, id);
        }
    }
    return state;
};
var linkedPresentationsReducer = linkedPresentations;
exports.default = linkedPresentationsReducer;
exports.isValidLinkedPresentationState = function (state) {
    return typeof state === 'object';
};


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var redux_1 = __webpack_require__(21);
var bsDmLiveText_1 = __webpack_require__(28);
var bsDmDefaults_1 = __webpack_require__(16);
var actionLiveText_1 = __webpack_require__(27);
var utils_1 = __webpack_require__(3);
var lodash_1 = __webpack_require__(0);
var actionSign_1 = __webpack_require__(7);
var actionZone_1 = __webpack_require__(15);
var actionMediaState_1 = __webpack_require__(12);
var itemsById = function (state, action) {
    var _a, _b;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN: {
            var newState = payload.newState;
            return lodash_1.isNil(newState.liveText) || lodash_1.isNil(newState.liveText.itemsById) ? {} : newState.liveText.itemsById;
        }
        case actionLiveText_1.ADD_LIVE_TEXT_ITEM: {
            var _c = payload, id = _c.id, canvasId = _c.canvasId, position = _c.position, data = _c.data, textProperties = _c.textProperties;
            return __assign({}, state, (_a = {}, _a[id] = __assign({ id: id, canvasId: canvasId, position: position }, data, textProperties), _a));
        }
        case actionLiveText_1.UPDATE_LIVE_TEXT_ITEM: {
            var _d = payload, id = _d.id, position = _d.position, data = _d.data, textProperties = _d.textProperties;
            var currentItem = state[id];
            if (!lodash_1.isNil(currentItem)) {
                var itemBase = {
                    id: currentItem.id,
                    canvasId: currentItem.canvasId,
                    position: lodash_1.isNil(position) ? currentItem.position : lodash_1.cloneDeep(position),
                };
                var itemData = lodash_1.isNil(data) ? bsDmLiveText_1.dmGetLiveTextItemData(currentItem) : data;
                var updatedItem = void 0;
                if (bsDmLiveText_1.dmIsLiveTextDataTextContent(itemData)) {
                    var defaultProps = bsDmDefaults_1.initialLiveTextItemTextPropertyDefaults;
                    var itemTextProperties = {
                        widget: lodash_1.isNil(textProperties) || lodash_1.isNil(textProperties.widget) ?
                            (lodash_1.isNil(currentItem.widget) ? lodash_1.cloneDeep(defaultProps.widget) : currentItem.widget) :
                            lodash_1.cloneDeep(textProperties.widget),
                        textWidget: lodash_1.isNil(textProperties) || lodash_1.isNil(textProperties.textWidget) ?
                            (lodash_1.isNil(currentItem.textWidget) ? __assign({}, defaultProps.textWidget) : currentItem.textWidget) : __assign({}, textProperties.textWidget),
                        useBackgroundColor: lodash_1.isNil(textProperties) || lodash_1.isNil(textProperties.useBackgroundColor) ?
                            (lodash_1.isNil(currentItem.useBackgroundColor) ?
                                defaultProps.useBackgroundColor : currentItem.useBackgroundColor) :
                            textProperties.useBackgroundColor,
                    };
                    updatedItem = __assign({}, itemBase, itemData, itemTextProperties);
                }
                else {
                    updatedItem = __assign({}, itemBase, itemData);
                }
                return __assign({}, state, (_b = {}, _b[id] = updatedItem, _b));
            }
            break;
        }
        case actionLiveText_1.DELETE_LIVE_TEXT_CANVAS:
        case actionLiveText_1.DELETE_LIVE_TEXT_ITEM:
        case actionMediaState_1.DELETE_MEDIA_STATE:
        case actionZone_1.DELETE_ZONE: {
            var liveTextItemIds = payload.liveTextItemIds;
            if (!lodash_1.isNil(liveTextItemIds) && liveTextItemIds.length) {
                return lodash_1.omit(state, liveTextItemIds);
            }
            break;
        }
    }
    return state;
};
var layersByCanvasId = function (state, action) {
    var _a, _b;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN: {
            var newState = payload.newState;
            return lodash_1.isNil(newState.liveText) || lodash_1.isNil(newState.liveText.layersByCanvasId) ?
                {} : newState.liveText.layersByCanvasId;
        }
        case actionLiveText_1.ADD_LIVE_TEXT_ITEM: {
            var _c = payload, id = _c.id, canvasId = _c.canvasId, layerIndex = _c.layerIndex;
            var sequence = state[canvasId];
            if (lodash_1.isNil(sequence)) {
                sequence = [];
            }
            if (layerIndex < 0 || layerIndex > sequence.length) {
                sequence = sequence.concat([id]);
            }
            else {
                sequence = sequence.slice(0, layerIndex).concat([id], sequence.slice(layerIndex));
            }
            return __assign({}, state, (_a = {}, _a[canvasId] = sequence, _a));
        }
        case actionLiveText_1.UPDATE_LIVE_TEXT_ITEM: {
            var _d = payload, id = _d.id, canvasId = _d.canvasId, layerIndex = _d.layerIndex;
            if (!lodash_1.isNil(layerIndex)) {
                var newSequence = lodash_1.without(state[canvasId], id);
                var newIndex = layerIndex < 0 || layerIndex >= newSequence.length ? newSequence.length : layerIndex;
                newSequence = newSequence.slice(0, newIndex).concat([id], newSequence.slice(newIndex));
                return __assign({}, state, (_b = {}, _b[canvasId] = newSequence, _b));
            }
            break;
        }
        case actionLiveText_1.DELETE_LIVE_TEXT_CANVAS:
        case actionMediaState_1.DELETE_MEDIA_STATE:
        case actionZone_1.DELETE_ZONE: {
            var liveTextCanvasIds = payload.liveTextCanvasIds;
            if (!lodash_1.isNil(liveTextCanvasIds) && liveTextCanvasIds.length) {
                return lodash_1.omit(state, liveTextCanvasIds);
            }
            break;
        }
        case actionLiveText_1.DELETE_LIVE_TEXT_ITEM: {
            var liveTextItemIds_1 = payload.liveTextItemIds;
            var updatedState_1 = {};
            Object.keys(state).forEach(function (canvasId) {
                var currentSequence = state[canvasId];
                var newSequence = lodash_1.without.apply(void 0, [currentSequence].concat(liveTextItemIds_1));
                if (newSequence.length > 0) {
                    updatedState_1[canvasId] = newSequence.length !== currentSequence.length ? newSequence : currentSequence;
                }
            });
            return updatedState_1;
        }
    }
    return state;
};
var dataFeedsByGroupId = function (state, action) {
    var _a, _b, _c;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN: {
            var newState = payload.newState;
            return lodash_1.isNil(newState.liveText) || lodash_1.isNil(newState.liveText.dataFeedsByGroupId) ?
                {} : newState.liveText.dataFeedsByGroupId;
        }
        case actionLiveText_1.ADD_LIVE_TEXT_DATA_FEED_GROUP: {
            var _d = payload, groupId = _d.groupId, canvasId = _d.canvasId, usage = _d.usage, displayTime = _d.displayTime, dataFeedIds = _d.dataFeedIds;
            var dataFeedSequence = { id: groupId, canvasId: canvasId, usage: usage, displayTime: displayTime, dataFeedIds: dataFeedIds };
            return __assign({}, state, (_a = {}, _a[groupId] = dataFeedSequence, _a));
        }
        case actionLiveText_1.UPDATE_LIVE_TEXT_DATA_FEED_GROUP: {
            var _e = payload, groupId = _e.groupId, displayTime = _e.displayTime;
            var dataFeedSequence = state[groupId];
            if (displayTime !== dataFeedSequence.displayTime) {
                state[groupId] = __assign({}, dataFeedSequence, { displayTime: displayTime });
            }
            break;
        }
        case actionLiveText_1.DELETE_LIVE_TEXT_CANVAS:
        case actionLiveText_1.DELETE_LIVE_TEXT_ITEM:
        case actionMediaState_1.DELETE_MEDIA_STATE:
        case actionZone_1.DELETE_ZONE: {
            var liveTextGroupIds = payload.liveTextGroupIds;
            if (!lodash_1.isNil(liveTextGroupIds) && liveTextGroupIds.length) {
                return lodash_1.omit(state, liveTextGroupIds);
            }
            break;
        }
        case actionLiveText_1.ADD_LIVE_TEXT_DATA_FEED: {
            var _f = payload, groupId2 = _f.groupId, dataFeedId = _f.dataFeedId, index = _f.index;
            var currentSequenceObject = state[groupId2];
            if (!lodash_1.isNil(currentSequenceObject)) {
                var current = currentSequenceObject.dataFeedIds;
                var newArray = void 0;
                if (index >= 0 && index < current.length) {
                    newArray = current.slice(0, index).concat([dataFeedId], current.slice(index));
                }
                else {
                    newArray = current.concat([dataFeedId]);
                }
                var newSequenceObject = __assign({}, currentSequenceObject, { dataFeedIds: newArray });
                return __assign({}, state, (_b = {}, _b[groupId2] = newSequenceObject, _b));
            }
            break;
        }
        case actionLiveText_1.MOVE_LIVE_TEXT_DATA_FEED: {
            var _g = payload, groupId = _g.groupId, indices = _g.indices, targetIndex = _g.targetIndex;
            var currentSequenceObject = state[groupId];
            if (!lodash_1.isNil(currentSequenceObject)) {
                var newArray = utils_1.moveIdsInSequence(currentSequenceObject.dataFeedIds, indices, targetIndex);
                if (newArray !== currentSequenceObject.dataFeedIds) {
                    var newSequenceObject = __assign({}, currentSequenceObject, { dataFeedIds: newArray });
                    return __assign({}, state, (_c = {}, _c[groupId] = newSequenceObject, _c));
                }
            }
            break;
        }
        case actionLiveText_1.DELETE_LIVE_TEXT_DATA_FEED: {
            var _h = payload, liveTextGroupIds = _h.liveTextGroupIds, dataFeedIds_1 = _h.dataFeedIds;
            var updatedGroups_1 = {};
            liveTextGroupIds.forEach(function (groupId) {
                var currentSequenceObject = state[groupId];
                if (!lodash_1.isNil(currentSequenceObject)) {
                    var newArray = lodash_1.without.apply(void 0, [currentSequenceObject.dataFeedIds].concat(dataFeedIds_1));
                    if (newArray !== currentSequenceObject.dataFeedIds) {
                        updatedGroups_1[groupId] = __assign({}, currentSequenceObject, { dataFeedIds: newArray });
                    }
                }
            });
            if (Object.keys(updatedGroups_1).length) {
                return __assign({}, state, updatedGroups_1);
            }
            break;
        }
    }
    return state;
};
var canvasesById = function (state, action) {
    var _a, _b;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN: {
            var newState = payload.newState;
            return lodash_1.isNil(newState.liveText) || lodash_1.isNil(newState.liveText.canvasesById) ?
                {} : newState.liveText.canvasesById;
        }
        case actionLiveText_1.ADD_LIVE_TEXT_CANVAS: {
            var _c = payload, id = _c.id, backgroundImageId = _c.backgroundImageId, backgroundColor = _c.backgroundColor, backgroundWidth = _c.backgroundWidth, backgroundHeight = _c.backgroundHeight;
            return __assign({}, state, (_a = {}, _a[id] = { id: id, backgroundImageId: backgroundImageId, backgroundColor: backgroundColor, backgroundWidth: backgroundWidth, backgroundHeight: backgroundHeight }, _a));
        }
        case actionLiveText_1.UPDATE_LIVE_TEXT_CANVAS: {
            var _d = payload, id = _d.id, backgroundImageId = _d.backgroundImageId, backgroundColor = _d.backgroundColor, backgroundWidth = _d.backgroundWidth, backgroundHeight = _d.backgroundHeight;
            var updatedCanvas = __assign({}, state[id]);
            if (!lodash_1.isNil(backgroundImageId)) {
                updatedCanvas.backgroundImageId = backgroundImageId;
            }
            if (!lodash_1.isNil(backgroundColor)) {
                updatedCanvas.backgroundColor = backgroundColor;
            }
            if (!lodash_1.isNil(backgroundWidth)) {
                updatedCanvas.backgroundWidth = backgroundWidth;
            }
            if (!lodash_1.isNil(backgroundHeight)) {
                updatedCanvas.backgroundHeight = backgroundHeight;
            }
            return __assign({}, state, (_b = {}, _b[id] = updatedCanvas, _b));
        }
        case actionLiveText_1.DELETE_LIVE_TEXT_CANVAS:
        case actionMediaState_1.DELETE_MEDIA_STATE:
        case actionZone_1.DELETE_ZONE: {
            var liveTextCanvasIds = payload.liveTextCanvasIds;
            if (!lodash_1.isNil(liveTextCanvasIds) && liveTextCanvasIds.length) {
                return lodash_1.omit(state, liveTextCanvasIds);
            }
            break;
        }
    }
    return state;
};
var liveTextReducer = redux_1.combineReducers({ itemsById: itemsById, layersByCanvasId: layersByCanvasId, dataFeedsByGroupId: dataFeedsByGroupId, canvasesById: canvasesById });
exports.default = liveTextReducer;


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var redux_1 = __webpack_require__(21);
var lodash_1 = __webpack_require__(0);
var bscore_1 = __webpack_require__(1);
var actionSign_1 = __webpack_require__(7);
var actionZone_1 = __webpack_require__(15);
var actionMediaState_1 = __webpack_require__(12);
var actionMediaSequence_1 = __webpack_require__(43);
var utils_1 = __webpack_require__(3);
var updatePriorVersionMediaStateState = function (mediaState) {
    if (mediaState.contentItem.type === bscore_1.ContentItemType.Image) {
        var imageContentItem = __assign({}, mediaState.contentItem);
        var changed = false;
        if (lodash_1.isNil(imageContentItem.defaultTransition)) {
            imageContentItem.defaultTransition = bscore_1.TransitionType.NoEffect;
            changed = true;
        }
        if (lodash_1.isNil(imageContentItem.transitionDuration)) {
            imageContentItem.transitionDuration = 1;
            changed = true;
        }
        if (changed) {
            return __assign({}, mediaState, { contentItem: imageContentItem });
        }
    }
    return mediaState;
};
var mediaStatesById = function (state, action) {
    var _a, _b;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            var newMediaStatesById_1 = newState.mediaStates.mediaStatesById ?
                newState.mediaStates.mediaStatesById : newState.mediaStates;
            return Object.keys(newMediaStatesById_1).reduce(function (newMap, id) {
                newMap[id] = updatePriorVersionMediaStateState(newMediaStatesById_1[id]);
                return newMap;
            }, {});
        case actionMediaState_1.ADD_MEDIA_STATE:
        case actionMediaState_1.ADD_SEQUENCED_MEDIA_STATE: {
            var _c = payload, id = _c.id, name_1 = _c.name, container = _c.container, contentItem = _c.contentItem;
            var containerCopy = lodash_1.cloneDeep(container);
            var contentItemCopy = lodash_1.cloneDeep(contentItem);
            return Object.assign({}, state, (_a = {}, _a[id] = { id: id, name: name_1, container: containerCopy, contentItem: contentItemCopy }, _a));
        }
        case actionMediaState_1.UPDATE_MEDIA_STATE: {
            var id = payload.id;
            if (state[id] !== undefined) {
                var payloadCopy = lodash_1.pick(payload, ['id', 'name']);
                if (payload.hasOwnProperty('contentItem')) {
                    payloadCopy.contentItem = lodash_1.cloneDeep(payload.contentItem);
                }
                var updatedMediaState = Object.assign({}, state[id], payloadCopy);
                return Object.assign({}, state, (_b = {}, _b[id] = updatedMediaState, _b));
            }
            break;
        }
        case actionMediaState_1.DELETE_MEDIA_STATE:
        case actionZone_1.DELETE_ZONE: {
            var mediaStateIds = payload.mediaStateIds;
            if (mediaStateIds && mediaStateIds.length) {
                return lodash_1.omit(state, mediaStateIds);
            }
            break;
        }
    }
    return state;
};
var sequencesByParentId = function (state, action) {
    var _a, _b;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            return newState.mediaStates.sequencesByParentId ? newState.mediaStates.sequencesByParentId : {};
        case actionMediaState_1.ADD_SEQUENCED_MEDIA_STATE: {
            var _c = payload, id = _c.id, container = _c.container, index = _c.index;
            if (!lodash_1.isNil(container)) {
                var sequence = state[container.id];
                var newMediaStateSequence = void 0;
                if (sequence) {
                    if (index < 0 || index >= sequence.sequence.length) {
                        newMediaStateSequence = sequence.sequence.concat([id]);
                    }
                    else {
                        newMediaStateSequence = sequence.sequence.slice(0, index).concat([id], sequence.sequence.slice(index));
                    }
                }
                else {
                    newMediaStateSequence = [id];
                }
                var newSequence = {
                    id: container.id, parentType: container.type, sequence: newMediaStateSequence
                };
                return __assign({}, state, (_a = {}, _a[container.id] = newSequence, _a));
            }
            break;
        }
        case actionMediaSequence_1.MEDIASEQUENCE_MOVE_ITEM_INDICES: {
            var _d = payload, container = _d.container, indices = _d.indices, targetIndex = _d.targetIndex;
            var sequence = state[container.id];
            if (!lodash_1.isNil(sequence)) {
                var newMediaStateSequence = utils_1.moveIdsInSequence(sequence.sequence, indices, targetIndex);
                if (newMediaStateSequence !== sequence.sequence) {
                    var newSequence = {
                        id: container.id, parentType: container.type, sequence: newMediaStateSequence
                    };
                    return __assign({}, state, (_b = {}, _b[container.id] = newSequence, _b));
                }
            }
            break;
        }
        case actionMediaState_1.DELETE_MEDIA_STATE:
        case actionZone_1.DELETE_ZONE: {
            var mediaStateIds_1 = payload.mediaStateIds;
            var updatedState_1 = {};
            Object.keys(state).forEach(function (mediaStateSequenceParentId) {
                var currentSequence = state[mediaStateSequenceParentId];
                var newMediaStateSequence = lodash_1.without.apply(void 0, [currentSequence.sequence].concat(mediaStateIds_1));
                if (newMediaStateSequence.length !== currentSequence.sequence.length) {
                    if (newMediaStateSequence.length > 0) {
                        updatedState_1[mediaStateSequenceParentId] =
                            Object.assign({}, currentSequence, { sequence: newMediaStateSequence });
                    }
                }
                else {
                    updatedState_1[mediaStateSequenceParentId] = currentSequence;
                }
            });
            return updatedState_1;
        }
    }
    return state;
};
var mediaStateReducer = redux_1.combineReducers({ mediaStatesById: mediaStatesById, sequencesByParentId: sequencesByParentId });
exports.default = mediaStateReducer;


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var actionParserPlugin_1 = __webpack_require__(44);
var actionSign_1 = __webpack_require__(7);
var lodash_1 = __webpack_require__(0);
var parserPluginsById = function (state, action) {
    var _a, _b;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            return newState.parserPlugins ? newState.parserPlugins : {};
        case actionParserPlugin_1.ADD_PARSER_PLUGIN: {
            var id = payload.id;
            return Object.assign({}, state, (_a = {}, _a[id] = payload, _a));
        }
        case actionParserPlugin_1.UPDATE_PARSER_PLUGIN: {
            var id = payload.id;
            if (state[id] !== undefined) {
                var updatedPlugin = Object.assign({}, state[id], payload);
                return Object.assign({}, state, (_b = {}, _b[id] = updatedPlugin, _b));
            }
            break;
        }
        case actionParserPlugin_1.REMOVE_PARSER_PLUGIN: {
            var id = payload.id;
            return lodash_1.omit(state, id);
        }
    }
    return state;
};
var parserPluginReducer = parserPluginsById;
exports.default = parserPluginReducer;
exports.isValidParserPluginState = function (state) {
    return typeof state === 'object';
};


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var actionPartnerProduct_1 = __webpack_require__(45);
var actionSign_1 = __webpack_require__(7);
var lodash_1 = __webpack_require__(0);
var createPartnerProduct = function (id, productName, wssCommunicationSpecFileName, port) { return ({
    id: id,
    port: port,
    name: productName,
    productName: productName,
    wssCommunicationSpecFileName: wssCommunicationSpecFileName,
}); };
var partnerProductsById = function (state, action) {
    var _a, _b;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            return newState.partnerProducts ? newState.partnerProducts : {};
        case actionPartnerProduct_1.ADD_PARTNER_PRODUCT: {
            var _c = payload, id = _c.id, productName = _c.productName, wssCommunicationSpecFileName = _c.wssCommunicationSpecFileName, port = _c.port;
            return Object.assign({}, state, (_a = {}, _a[id] = createPartnerProduct(id, productName, wssCommunicationSpecFileName, port), _a));
        }
        case actionPartnerProduct_1.UPDATE_PARTNER_PRODUCT: {
            var id = payload.id;
            var updatedPartnerProduct = Object.assign({}, state[id], payload);
            return Object.assign({}, state, (_b = {}, _b[id] = updatedPartnerProduct, _b));
        }
        case actionPartnerProduct_1.DELETE_PARTNER_PRODUCT: {
            var ids = payload.ids;
            return lodash_1.omit(state, ids);
        }
    }
    return state;
};
var partnerProductReducer = partnerProductsById;
exports.default = partnerProductReducer;
exports.isValidPartnerProductState = function (state) {
    return typeof state === 'object';
};


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var actionScriptPlugin_1 = __webpack_require__(46);
var actionSign_1 = __webpack_require__(7);
var lodash_1 = __webpack_require__(0);
var scriptPluginsById = function (state, action) {
    var _a, _b;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            return newState.scriptPlugins ? newState.scriptPlugins : {};
        case actionScriptPlugin_1.ADD_SCRIPT_PLUGIN: {
            var id = payload.id;
            return Object.assign({}, state, (_a = {}, _a[id] = payload, _a));
        }
        case actionScriptPlugin_1.UPDATE_SCRIPT_PLUGIN: {
            var id = payload.id;
            if (state[id] !== undefined) {
                var updatedPlugin = Object.assign({}, state[id], payload);
                return Object.assign({}, state, (_b = {}, _b[id] = updatedPlugin, _b));
            }
            break;
        }
        case actionScriptPlugin_1.REMOVE_SCRIPT_PLUGIN: {
            var id = payload.id;
            return lodash_1.omit(state, id);
        }
    }
    return state;
};
var scriptPluginReducer = scriptPluginsById;
exports.default = scriptPluginReducer;
exports.isValidScriptPluginState = function (state) {
    return typeof state === 'object';
};


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var redux_1 = __webpack_require__(21);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmDefaults_1 = __webpack_require__(16);
var bsDmSign_1 = __webpack_require__(53);
var actionSign_1 = __webpack_require__(7);
var actionValidate_1 = __webpack_require__(52);
var bsDmVersion_1 = __webpack_require__(48);
var newSignProperties = bsDmSign_1.createDefaultSignProperties(bsDmInterfaces_1.BsDmIdNone, 'Untitled');
var updatePriorVersionSignProperties = function (props) {
    var propsToAdd = {};
    var defaultProps = bsDmDefaults_1.dmGetDefaultSignPropertyData();
    if (!props.hasOwnProperty('dolbyVisionEnabled')) {
        propsToAdd.dolbyVisionEnabled = defaultProps.dolbyVisionEnabled;
    }
    if (!props.hasOwnProperty('fullResGraphicsEnabled')) {
        propsToAdd.fullResGraphicsEnabled = defaultProps.fullResGraphicsEnabled;
    }
    if (!props.hasOwnProperty('audioConfiguration')) {
        propsToAdd.audioConfiguration = defaultProps.audioConfiguration;
    }
    if (!props.hasOwnProperty('audioAutoLevel')) {
        propsToAdd.audioAutoLevel = defaultProps.audioAutoLevel;
    }
    if (!props.hasOwnProperty('enableEnhancedSynchronization')) {
        propsToAdd.enableEnhancedSynchronization = null;
    }
    return __assign({}, props, propsToAdd, { version: bsDmVersion_1.version });
};
var properties = function (state, _a) {
    if (state === void 0) { state = newSignProperties; }
    var type = _a.type, payload = _a.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
        case actionSign_1.UPDATE_SIGN_PROPS:
            return Object.assign({}, state, payload);
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            return updatePriorVersionSignProperties(newState.sign.properties);
    }
    return state;
};
var serialPortConfigurations = function (state, _a) {
    if (state === void 0) { state = bsDmDefaults_1.dmGetDefaultSerialPortList(); }
    var type = _a.type, payload = _a.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return bsDmDefaults_1.dmGetDefaultSerialPortList();
        case actionSign_1.UPDATE_SIGN_SERIAL_PORTS: {
            var updateList = payload.serialPortList;
            updateList.forEach(function (portConfig) {
                var portNum = portConfig.port;
                state[portNum] = Object.assign({}, state[portNum], portConfig);
            });
            return state;
        }
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            return newState.sign.serialPortConfigurations;
    }
    return state;
};
var gpio = function (state, _a) {
    if (state === void 0) { state = bsDmDefaults_1.dmGetDefaultGpioList(); }
    var type = _a.type, payload = _a.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return bsDmDefaults_1.dmGetDefaultGpioList();
        case actionSign_1.UPDATE_SIGN_GPIO: {
            return payload.gpioList;
        }
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            return newState.sign.gpio;
    }
    return state;
};
var buttonPanels = function (state, _a) {
    if (state === void 0) { state = bsDmDefaults_1.dmGetDefaultButtonPanelMap(); }
    var type = _a.type, payload = _a.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return bsDmDefaults_1.dmGetDefaultButtonPanelMap();
        case actionSign_1.UPDATE_SIGN_BPMAP: {
            var updateList_1 = payload.buttonMap;
            var newState_1 = Object.assign({}, state);
            Object.keys(updateList_1).forEach(function (bpName) {
                newState_1[bpName] = Object.assign({}, state[bpName], updateList_1[bpName]);
            });
            return newState_1;
        }
        case actionSign_1.OPEN_SIGN: {
            var newState = payload.newState;
            return newState.sign.buttonPanels;
        }
    }
    return state;
};
var audioSignPropertyMap = function (state, _a) {
    if (state === void 0) { state = bsDmDefaults_1.dmGetDefaultAudioSignPropertyMap(); }
    var type = _a.type, payload = _a.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return bsDmDefaults_1.dmGetDefaultAudioSignPropertyMap();
        case actionSign_1.UPDATE_SIGN_AUDIO_CONFIG: {
            var updateList_2 = payload.audioSignMap;
            var newState_2 = Object.assign({}, state);
            Object.keys(updateList_2).forEach(function (audioName) {
                newState_2[audioName] = Object.assign({}, state[audioName], updateList_2[audioName]);
            });
            return newState_2;
        }
        case actionSign_1.OPEN_SIGN: {
            var newState = payload.newState;
            return newState.sign.audioSignPropertyMap;
        }
    }
    return state;
};
var lastModifiedTime = function (state, action) {
    if (actionValidate_1.dmActionModifiesDmState(action) || state === undefined) {
        return new Date();
    }
    return state;
};
var signReducer = redux_1.combineReducers({ properties: properties, serialPortConfigurations: serialPortConfigurations, gpio: gpio, buttonPanels: buttonPanels, audioSignPropertyMap: audioSignPropertyMap, lastModifiedTime: lastModifiedTime });
exports.default = signReducer;


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var actionThumbnail_1 = __webpack_require__(47);
var actionSign_1 = __webpack_require__(7);
var thumbnail = function (state, action) {
    if (state === void 0) { state = null; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return null;
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            return newState.thumbnail ? newState.thumbnail : null;
        case actionThumbnail_1.SET_THUMBNAIL:
            return payload;
    }
    return state;
};
var thumbnailReducer = thumbnail;
exports.default = thumbnailReducer;


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var redux_1 = __webpack_require__(21);
var lodash_1 = __webpack_require__(0);
var actionTransition_1 = __webpack_require__(22);
var actionSign_1 = __webpack_require__(7);
var actionZone_1 = __webpack_require__(15);
var actionMediaState_1 = __webpack_require__(12);
var actionEvent_1 = __webpack_require__(17);
var utils_1 = __webpack_require__(3);
var createTransitionState = function (id, name, eventId, targetMediaStateId, transitionType, duration, condition, conditionalAction) {
    var transitionState = {
        id: id,
        name: lodash_1.isNil(name) ? '' : name,
        eventId: eventId,
        targetMediaStateId: targetMediaStateId,
        type: transitionType,
        duration: duration,
    };
    if (condition) {
        transitionState.condition = condition;
    }
    if (conditionalAction) {
        transitionState.conditionalAction = conditionalAction;
    }
    return transitionState;
};
var transitionsById = function (state, action) {
    var _a, _b, _c, _d;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            return newState.transitions.transitionsById ? newState.transitions.transitionsById : newState.transitions;
        case actionTransition_1.ADD_TRANSITION: {
            var _e = payload, id = _e.id, name_1 = _e.name, eventId = _e.eventId, targetMediaStateId = _e.targetMediaStateId, transitionType = _e.type, duration = _e.duration;
            return Object.assign({}, state, (_a = {}, _a[id] = createTransitionState(id, name_1, eventId, targetMediaStateId, transitionType, duration), _a));
        }
        case actionTransition_1.ADD_CONDITIONAL_TRANSITION: {
            var _f = payload, id = _f.id, name_2 = _f.name, eventId = _f.eventId, targetMediaStateId = _f.targetMediaStateId, transitionType = _f.type, duration = _f.duration, condition = _f.condition, conditionalAction = _f.conditionalAction;
            return Object.assign({}, state, (_b = {}, _b[id] = createTransitionState(id, name_2, eventId, targetMediaStateId, transitionType, duration, condition, conditionalAction), _b));
        }
        case actionTransition_1.UPDATE_TRANSITION: {
            var id = payload.id;
            var updatedTransition = Object.assign({}, state[id], payload);
            return Object.assign({}, state, (_c = {}, _c[id] = updatedTransition, _c));
        }
        case actionTransition_1.UPDATE_TRANSITION_CONDITION: {
            var _g = payload, id = _g.id, condition = _g.condition, conditionalAction = _g.conditionalAction, targetMediaStateId = _g.targetMediaStateId;
            var newParams = {};
            if (!lodash_1.isNil(condition)) {
                newParams.condition = condition;
            }
            if (!lodash_1.isNil(conditionalAction)) {
                newParams.conditionalAction = conditionalAction;
            }
            if (!lodash_1.isNil(targetMediaStateId)) {
                newParams.targetMediaStateId = targetMediaStateId;
            }
            if (Object.keys(newParams).length > 0) {
                var updatedTransition = Object.assign({}, state[id], newParams);
                return Object.assign({}, state, (_d = {}, _d[id] = updatedTransition, _d));
            }
            break;
        }
        case actionTransition_1.DELETE_TRANSITION:
        case actionEvent_1.DELETE_EVENT:
        case actionMediaState_1.DELETE_MEDIA_STATE:
        case actionZone_1.DELETE_ZONE: {
            var transitionIds = payload.transitionIds;
            if (transitionIds && transitionIds.length) {
                return lodash_1.omit(state, transitionIds);
            }
            break;
        }
    }
    return state;
};
var sequencesByEventId = function (state, action) {
    var _a, _b, _c;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            return newState.transitions.sequencesByEventId ? newState.transitions.sequencesByEventId : {};
        case actionTransition_1.ADD_CONDITIONAL_TRANSITION: {
            var _d = payload, id = _d.id, eventId = _d.eventId, conditionIndex = _d.conditionIndex;
            if (!lodash_1.isNil(eventId)) {
                var sequence = state[eventId];
                var newIdSequence = void 0;
                if (sequence) {
                    newIdSequence = sequence.sequence.slice(0, conditionIndex).concat([
                        id
                    ], sequence.sequence.slice(conditionIndex));
                }
                else {
                    newIdSequence = [id];
                }
                return __assign({}, state, (_a = {}, _a[eventId] = { id: eventId, sequence: newIdSequence }, _a));
            }
            break;
        }
        case actionTransition_1.UPDATE_TRANSITION_CONDITION: {
            var _e = payload, id = _e.id, eventId = _e.eventId, conditionIndex = _e.conditionIndex;
            if (!lodash_1.isNil(conditionIndex)) {
                var sequence = state[eventId];
                if (!lodash_1.isNil(sequence)) {
                    var index = sequence.sequence.indexOf(id);
                    if (index >= 0 && index !== conditionIndex) {
                        var newIdSequence = lodash_1.without(sequence.sequence, id);
                        newIdSequence.splice(conditionIndex, 0, id);
                        return __assign({}, state, (_b = {}, _b[eventId] = { id: eventId, sequence: newIdSequence }, _b));
                    }
                }
            }
            break;
        }
        case actionTransition_1.MOVE_TRANSITION_CONDITION: {
            var _f = payload, eventId = _f.eventId, indices = _f.indices, targetIndex = _f.targetIndex;
            var sequence = state[eventId];
            if (!lodash_1.isNil(sequence)) {
                var newIdSequence = utils_1.moveIdsInSequence(sequence.sequence, indices, targetIndex);
                if (newIdSequence !== sequence.sequence) {
                    return __assign({}, state, (_c = {}, _c[eventId] = { id: eventId, sequence: newIdSequence }, _c));
                }
            }
            break;
        }
        case actionTransition_1.DELETE_TRANSITION:
        case actionEvent_1.DELETE_EVENT:
        case actionMediaState_1.DELETE_MEDIA_STATE:
        case actionZone_1.DELETE_ZONE: {
            var transitionIds_1 = payload.transitionIds;
            var updatedState_1 = {};
            Object.keys(state).forEach(function (eventId) {
                var currentTransitionSequence = state[eventId];
                var newTransitionSequence = lodash_1.without.apply(void 0, [currentTransitionSequence.sequence].concat(transitionIds_1));
                if (newTransitionSequence.length !== currentTransitionSequence.sequence.length) {
                    if (newTransitionSequence.length > 0) {
                        updatedState_1[eventId] = Object.assign({}, currentTransitionSequence, { sequence: newTransitionSequence });
                    }
                }
                else {
                    updatedState_1[eventId] = currentTransitionSequence;
                }
            });
            return updatedState_1;
        }
    }
    return state;
};
var transitionReducer = redux_1.combineReducers({ transitionsById: transitionsById, sequencesByEventId: sequencesByEventId });
exports.default = transitionReducer;


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var redux_1 = __webpack_require__(21);
var actionUserVariable_1 = __webpack_require__(30);
var actionSign_1 = __webpack_require__(7);
var lodash_1 = __webpack_require__(0);
var utils_1 = __webpack_require__(3);
var createUserVariable = function (id, name, defaultValue, access, isNetworked, dataFeedId, systemVariable) { return ({
    id: id, name: name, defaultValue: defaultValue, access: access, isNetworked: isNetworked, dataFeedId: dataFeedId, systemVariable: systemVariable,
}); };
var variablesById = function (state, action) {
    var _a, _b;
    if (state === void 0) { state = {}; }
    var type = action.type, payload = action.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            return lodash_1.isNil(newState.userVariables) ? {} :
                (lodash_1.isNil(newState.userVariables.variablesById) ? newState.userVariables : newState.userVariables.variablesById);
        case actionUserVariable_1.ADD_USER_VARIABLE: {
            var _c = payload, id = _c.id, name_1 = _c.name, defaultValue = _c.defaultValue, access = _c.access, isNetworked = _c.isNetworked, dataFeedId = _c.dataFeedId, systemVariable = _c.systemVariable;
            return __assign({}, state, (_a = {}, _a[id] = createUserVariable(id, name_1, defaultValue, access, isNetworked, dataFeedId, systemVariable), _a));
        }
        case actionUserVariable_1.UPDATE_USER_VARIABLE: {
            var id = payload.id;
            var updatedUserVariable = __assign({}, state[id], payload);
            return __assign({}, state, (_b = {}, _b[id] = updatedUserVariable, _b));
        }
        case actionUserVariable_1.DELETE_USER_VARIABLE: {
            var userVariableIds = payload.userVariableIds;
            return lodash_1.omit(state, userVariableIds);
        }
    }
    return state;
};
var sequence = function (state, _a) {
    if (state === void 0) { state = []; }
    var type = _a.type, payload = _a.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return [];
        case actionSign_1.OPEN_SIGN: {
            var newState = payload.newState;
            return lodash_1.isNil(newState.userVariables) ? [] :
                (lodash_1.isNil(newState.userVariables.sequence) ? Object.keys(newState.userVariables) :
                    newState.userVariables.sequence);
        }
        case actionUserVariable_1.ADD_USER_VARIABLE: {
            var id = payload.id;
            return state.concat([id]);
        }
        case actionUserVariable_1.MOVE_USER_VARIABLES: {
            var _b = payload, indices = _b.indices, targetIndex = _b.targetIndex;
            var newState = utils_1.moveIdsInSequence(state, indices, targetIndex);
            if (newState !== state) {
                return newState;
            }
            break;
        }
        case actionUserVariable_1.DELETE_USER_VARIABLE: {
            var userVariableIds = payload.userVariableIds;
            return lodash_1.without.apply(void 0, [state].concat(userVariableIds));
        }
    }
    return state;
};
var userVariableReducer = redux_1.combineReducers({ variablesById: variablesById, sequence: sequence });
exports.default = userVariableReducer;
exports.isValidUserVariableState = function (state) {
    return typeof state === 'object';
};


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var redux_1 = __webpack_require__(21);
var lodash_1 = __webpack_require__(0);
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var actionSign_1 = __webpack_require__(7);
var actionZone_1 = __webpack_require__(15);
var actionMediaState_1 = __webpack_require__(12);
var utils_1 = __webpack_require__(3);
var updatePriorVersionZone = function (zone) {
    if (!lodash_1.isNil(zone)) {
        if (!lodash_1.isNil(zone.properties) && !lodash_1.isNil(zone.properties.audioOutputAssignments)) {
            var audioOutputAssignments = __assign({}, zone.properties.audioOutputAssignments);
            if (lodash_1.isNil(audioOutputAssignments.usbTypeA)) {
                audioOutputAssignments.usbTypeA = bscore_1.AudioOutputType.None;
                audioOutputAssignments.usbTypeC = bscore_1.AudioOutputType.None;
                audioOutputAssignments.usb700_1 = bscore_1.AudioOutputType.None;
                audioOutputAssignments.usb700_2 = bscore_1.AudioOutputType.None;
                audioOutputAssignments.usb700_3 = bscore_1.AudioOutputType.None;
                audioOutputAssignments.usb700_4 = bscore_1.AudioOutputType.None;
                audioOutputAssignments.usb700_5 = bscore_1.AudioOutputType.None;
                audioOutputAssignments.usb700_6 = bscore_1.AudioOutputType.None;
                audioOutputAssignments.usb700_7 = bscore_1.AudioOutputType.None;
                var newAudioZoneProperties = __assign({}, zone.properties, { audioOutputAssignments: audioOutputAssignments });
                return __assign({}, zone, { properties: newAudioZoneProperties });
            }
        }
    }
    return zone;
};
var zonesById = function (state, _a) {
    var _b, _c, _d, _e;
    if (state === void 0) { state = {}; }
    var type = _a.type, payload = _a.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return {};
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            var zonesById_1 = newState.zones.zonesById;
            return Object.keys(zonesById_1).reduce(function (newMap, id) {
                newMap[id] = updatePriorVersionZone(zonesById_1[id]);
                return newMap;
            }, {});
        case actionZone_1.ADD_ZONE: {
            var _f = payload, id = _f.id, zone = _f.zone;
            return Object.assign({}, state, (_b = {}, _b[id] = zone, _b));
        }
        case actionZone_1.UPDATE_ZONE: {
            var id = payload.id;
            var updatedZone = Object.assign({}, state[id], payload);
            return Object.assign({}, state, (_c = {}, _c[id] = updatedZone, _c));
        }
        case actionZone_1.UPDATE_ZONE_PROPS: {
            var _g = payload, id = _g.id, properties = _g.properties;
            var updatedProperties = utils_1.deepUpdate(state[id].properties, properties);
            var updatedZone = Object.assign({}, state[id], { properties: updatedProperties });
            return Object.assign({}, state, (_d = {}, _d[id] = updatedZone, _d));
        }
        case actionZone_1.DELETE_ZONE: {
            var zoneId = payload.zoneId;
            return lodash_1.omit(state, zoneId);
        }
        case actionMediaState_1.ADD_MEDIA_STATE: {
            var _h = payload, id = _h.id, container = _h.container;
            if (!lodash_1.isNil(container)) {
                var zone = state[container.id];
                if (zone && zone.initialMediaStateId === bsDmInterfaces_1.BsDmIdNone) {
                    var updatedZone = Object.assign({}, state[container.id], { initialMediaStateId: id });
                    return Object.assign({}, state, (_e = {}, _e[container.id] = updatedZone, _e));
                }
            }
            break;
        }
    }
    return state;
};
var allZones = function (state, _a) {
    if (state === void 0) { state = []; }
    var type = _a.type, payload = _a.payload;
    switch (type) {
        case actionSign_1.NEW_SIGN:
            return [];
        case actionSign_1.OPEN_SIGN:
            var newState = payload.newState;
            return newState.zones.allZones;
        case actionZone_1.ADD_ZONE: {
            var id = payload.id;
            return state.concat([id]);
        }
        case actionZone_1.DELETE_ZONE: {
            var zoneId = payload.zoneId;
            var index = state.indexOf(zoneId);
            if (index >= 0) {
                return state.slice(0, index).concat(state.slice(index + 1));
            }
        }
    }
    return state;
};
var zoneReducer = redux_1.combineReducers({ zonesById: zonesById, allZones: allZones });
exports.default = zoneReducer;


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var lodash_1 = __webpack_require__(0);
function dmGetAuxiliaryFileStateById(state, props) {
    var file = state.auxiliaryFiles[props.id];
    return file ? file : null;
}
exports.dmGetAuxiliaryFileStateById = dmGetAuxiliaryFileStateById;
function dmGetAuxiliaryFileList(state) {
    return state.auxiliaryFiles !== null ? Object.keys(state.auxiliaryFiles) : [];
}
exports.dmGetAuxiliaryFileList = dmGetAuxiliaryFileList;
function dmGetAuxiliaryFileCount(state) {
    return state.auxiliaryFiles !== null ? Object.keys(state.auxiliaryFiles).length : 0;
}
exports.dmGetAuxiliaryFileCount = dmGetAuxiliaryFileCount;
function dmGetAuxiliaryFileStateByName(state, props) {
    var auxFiles = state.auxiliaryFiles;
    var fileId = lodash_1.find(Object.keys(auxFiles), function (id) { return auxFiles[id].name === props.name; });
    return lodash_1.isNil(fileId) ? null : auxFiles[fileId];
}
exports.dmGetAuxiliaryFileStateByName = dmGetAuxiliaryFileStateByName;


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var selectorAssetMap_1 = __webpack_require__(23);
function dmGetCustomAutorunId(state) {
    return state.customAutorun;
}
exports.dmGetCustomAutorunId = dmGetCustomAutorunId;
function dmGetCustomAutorunAssetItem(state) {
    var assetId = state.customAutorun;
    return assetId !== bscore_1.BsAssetIdNone ? selectorAssetMap_1.dmGetAssetItemById(state, { id: assetId }) : null;
}
exports.dmGetCustomAutorunAssetItem = dmGetCustomAutorunAssetItem;


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmClasses_1 = __webpack_require__(10);
var selectorTransition_1 = __webpack_require__(50);
var selectorCommand_1 = __webpack_require__(36);
var selectorValidation_1 = __webpack_require__(32);
var bsDmError_1 = __webpack_require__(4);
var lodash_1 = __webpack_require__(0);
var createEventObject = function (eventState, dmState) {
    if (eventState) {
        var transitionStates = selectorTransition_1.dmGetSortedTransitionStatesForEventId(dmState, { id: eventState.id });
        var commands = selectorCommand_1.dmGetCommandStatesForParentAndType(dmState, { id: eventState.id, type: bscore_1.CommandSequenceType.Event });
        return new bsDmClasses_1.DmcEvent(eventState, transitionStates, commands);
    }
    return null;
};
function dmGetEventStateById(state, props) {
    var eventState = state.events[props.id];
    return lodash_1.isNil(eventState) ? null : eventState;
}
exports.dmGetEventStateById = dmGetEventStateById;
function dmGetEventById(state, props) {
    return createEventObject(state.events[props.id], state);
}
exports.dmGetEventById = dmGetEventById;
function dmGetEventTypeById(state, props) {
    var eventState = state.events[props.id];
    return lodash_1.isNil(eventState) ? null : eventState.type;
}
exports.dmGetEventTypeById = dmGetEventTypeById;
function dmGetAllEventIdsForEventType(state, props) {
    return Object.keys(state.events).filter(function (id) { return state.events[id].type === props.type; });
}
exports.dmGetAllEventIdsForEventType = dmGetAllEventIdsForEventType;
function dmGetAllEventStatesForEventType(state, props) {
    return Object.keys(state.events).reduce(function (list, id) {
        if (state.events[id].type === props.type) {
            list.push(state.events[id]);
        }
        return list;
    }, []);
}
exports.dmGetAllEventStatesForEventType = dmGetAllEventStatesForEventType;
function dmValidateEvent(state, props) {
    var entityDetails = { entityType: bsDmInterfaces_1.DmEntityType.Event, entityId: props.id };
    var result = bsDmError_1.dmInitializeValidationResult(bsDmInterfaces_1.DmEntityType.Event, props.id);
    var validateStringData = function (data, entityProperty) {
        if (!lodash_1.isString(data) || data.length === 0) {
            result.errorList.push(selectorValidation_1.dmGetEntityError(bsDmError_1.DmErrorType.eventDataMissing, __assign({}, entityDetails, { entityProperty: entityProperty })));
        }
    };
    var validateUserVariableId = function (userVariableId, entityProperty) {
        var error = selectorValidation_1.dmValidateUserVariableId(state, userVariableId, __assign({}, entityDetails, { entityProperty: entityProperty }));
        if (!lodash_1.isNil(error)) {
            result.errorList.push(error);
        }
    };
    var event = dmGetEventStateById(state, props);
    if (!lodash_1.isNil(event)) {
        switch (event.type) {
            case bscore_1.EventType.Serial:
                validateStringData(event.data.port, 'port');
            case bscore_1.EventType.Keyboard:
            case bscore_1.EventType.Remote:
            case bscore_1.EventType.Usb:
            case bscore_1.EventType.Synchronize:
            case bscore_1.EventType.ZoneMessage:
            case bscore_1.EventType.InternalSynchronize:
                validateStringData(event.data.data, 'data');
                break;
            case bscore_1.EventType.Udp:
                validateStringData(event.data.data, 'data');
                validateStringData(event.data.label, 'label');
                break;
            case bscore_1.EventType.PluginMessage:
                validateStringData(event.data.name, 'name');
                validateStringData(event.data.message, 'message');
                break;
        }
        if (event.type === bscore_1.EventType.Serial || event.type === bscore_1.EventType.Udp || event.type === bscore_1.EventType.PluginMessage) {
            var uvAssign = event.data;
            if (uvAssign.assignInputToUserVariable) {
                validateUserVariableId(uvAssign.userVariableToAssignInput, 'userVariableToAssignInput');
            }
            if (uvAssign.assignWildcardToUserVariable) {
                validateUserVariableId(uvAssign.userVariableToAssignWildcard, 'userVariableToAssignWildcard');
            }
        }
        var transitionIds = selectorTransition_1.dmGetTransitionIdsForEvent(state, props);
        var componentErrors = transitionIds.reduce(function (acc, transitionId) {
            var cmdResult = selectorTransition_1.dmValidateTransition(state, { id: transitionId });
            if (!cmdResult.ok) {
                acc.push(cmdResult);
            }
            return acc;
        }, []);
        var commandIds = selectorCommand_1.dmCommandIdsForEvent(state, props);
        componentErrors = commandIds.reduce(function (acc, commandId) {
            var cmdResult = selectorCommand_1.dmValidateCommand(state, { id: commandId });
            if (!cmdResult.ok) {
                acc.push(cmdResult);
            }
            return acc;
        }, componentErrors);
        if (componentErrors.length) {
            result.componentErrors = componentErrors;
            result.ok = false;
        }
    }
    result.ok = result.ok && result.errorList.length === 0;
    return result;
}
exports.dmValidateEvent = dmValidateEvent;
function dmGetEventIdsForSign(state) {
    return Object.keys(state.events);
}
exports.dmGetEventIdsForSign = dmGetEventIdsForSign;


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var lodash_1 = __webpack_require__(0);
function dmGetLinkedPresentationStateById(state, props) {
    var file = state.linkedPresentations[props.id];
    return file ? file : null;
}
exports.dmGetLinkedPresentationStateById = dmGetLinkedPresentationStateById;
function dmGetLinkedPresentationAssetIdList(state) {
    return state.linkedPresentations !== null ? Object.keys(state.linkedPresentations) : [];
}
exports.dmGetLinkedPresentationAssetIdList = dmGetLinkedPresentationAssetIdList;
function dmGetLinkedPresentationCount(state) {
    return state.linkedPresentations !== null ? Object.keys(state.linkedPresentations).length : 0;
}
exports.dmGetLinkedPresentationCount = dmGetLinkedPresentationCount;
function dmGetLinkedPresentationStateByName(state, props) {
    var presentations = state.linkedPresentations;
    var fileId = lodash_1.find(Object.keys(presentations), function (id) { return presentations[id].name === props.name; });
    return lodash_1.isNil(fileId) ? null : presentations[fileId];
}
exports.dmGetLinkedPresentationStateByName = dmGetLinkedPresentationStateByName;


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bsDmClasses_1 = __webpack_require__(10);
var utils_1 = __webpack_require__(3);
var lodash_1 = __webpack_require__(0);
var reselect_1 = __webpack_require__(24);
var createParserPluginObject = function (parserPluginState, assetMap) {
    if (parserPluginState) {
        var assetItem = assetMap[parserPluginState.assetId];
        return new bsDmClasses_1.DmcParserBrightScriptPlugin(parserPluginState, assetItem);
    }
    return null;
};
function dmGetParserPluginStateById(state, props) {
    var plugin = state.parserPlugins[props.id];
    return plugin ? plugin : null;
}
exports.dmGetParserPluginStateById = dmGetParserPluginStateById;
function dmGetParserPluginById(state, props) {
    var plugin = state.parserPlugins[props.id];
    return createParserPluginObject(plugin, state.assetMap);
}
exports.dmGetParserPluginById = dmGetParserPluginById;
function dmGetParserPluginStateByName(state, props) {
    var plugins = state.parserPlugins;
    var pluginId = lodash_1.find(Object.keys(plugins), function (id) { return plugins[id].name === props.name; });
    return lodash_1.isNil(pluginId) ? null : plugins[pluginId];
}
exports.dmGetParserPluginStateByName = dmGetParserPluginStateByName;
function dmGetParserPluginByName(state, props) {
    var plugin = dmGetParserPluginStateByName(state, props);
    return lodash_1.isNil(plugin) ? null : createParserPluginObject(plugin, state.assetMap);
}
exports.dmGetParserPluginByName = dmGetParserPluginByName;
function dmGetParserPluginIds(state) {
    return Object.keys(state.parserPlugins);
}
exports.dmGetParserPluginIds = dmGetParserPluginIds;
function dmGetParserPluginAssetIds(state) {
    var plugins = state.parserPlugins;
    return Object.keys(plugins).map(function (pluginId) { return plugins[pluginId].assetId; });
}
exports.dmGetParserPluginAssetIds = dmGetParserPluginAssetIds;
function dmGetActiveParserPluginWithDataFeedMap(state) {
    var getActiveParserPluginWithDataFeedMap = reselect_1.createSelector(function (dmState) { return dmState.dataFeeds.feedsById; }, function (dataFeeds) {
        var result = {};
        Object.keys(dataFeeds).forEach(function (dataFeedId) {
            var pluginId = dataFeeds[dataFeedId].parserPlugin;
            if (utils_1.isValidBsDmId(pluginId)) {
                var pluginEntry = result[pluginId];
                if (lodash_1.isNil(pluginEntry)) {
                    result[pluginId] = [dataFeedId];
                }
                else {
                    pluginEntry.push(dataFeedId);
                }
            }
        });
        return result;
    });
    return getActiveParserPluginWithDataFeedMap(state);
}
exports.dmGetActiveParserPluginWithDataFeedMap = dmGetActiveParserPluginWithDataFeedMap;


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function dmGetPartnerProducts(state) {
    return Object.keys(state.partnerProducts);
}
exports.dmGetPartnerProducts = dmGetPartnerProducts;
function dmGetPartnerProductById(state, props) {
    var partnerProduct = state.partnerProducts[props.id];
    return partnerProduct ? partnerProduct : null;
}
exports.dmGetPartnerProductById = dmGetPartnerProductById;


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bsDmClasses_1 = __webpack_require__(10);
var lodash_1 = __webpack_require__(0);
var createScriptPluginObject = function (scriptPluginState, assetMap) {
    if (scriptPluginState) {
        var assetItem = assetMap[scriptPluginState.assetId];
        return new bsDmClasses_1.DmcBrightScriptPlugin(scriptPluginState, assetItem);
    }
    return null;
};
function dmGetScriptPluginStateById(state, props) {
    var plugin = state.scriptPlugins[props.id];
    return plugin ? plugin : null;
}
exports.dmGetScriptPluginStateById = dmGetScriptPluginStateById;
function dmGetScriptPluginById(state, props) {
    var plugin = state.scriptPlugins[props.id];
    return createScriptPluginObject(plugin, state.assetMap);
}
exports.dmGetScriptPluginById = dmGetScriptPluginById;
function dmGetScriptPluginStateByName(state, props) {
    var plugins = state.scriptPlugins;
    var pluginId = lodash_1.find(Object.keys(plugins), function (id) { return plugins[id].name === props.name; });
    return lodash_1.isNil(pluginId) ? null : plugins[pluginId];
}
exports.dmGetScriptPluginStateByName = dmGetScriptPluginStateByName;
function dmGetScriptPluginByName(state, props) {
    var plugin = dmGetScriptPluginStateByName(state, props);
    return lodash_1.isNil(plugin) ? null : createScriptPluginObject(plugin, state.assetMap);
}
exports.dmGetScriptPluginByName = dmGetScriptPluginByName;
function dmGetScriptPluginIds(state) {
    return Object.keys(state.scriptPlugins);
}
exports.dmGetScriptPluginIds = dmGetScriptPluginIds;
function dmGetScriptPluginAssetIds(state) {
    var plugins = state.scriptPlugins;
    return Object.keys(plugins).map(function (pluginId) { return plugins[pluginId].assetId; });
}
exports.dmGetScriptPluginAssetIds = dmGetScriptPluginAssetIds;


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var reselect_1 = __webpack_require__(24);
var lodash_1 = __webpack_require__(0);
var base64 = __webpack_require__(60);
function dmGetThumbnail(state) {
    var getThumbnail = reselect_1.createSelector(function (dmState) { return dmState.thumbnail; }, function (thumbnailState) {
        return lodash_1.isNil(thumbnailState) ? null : bscore_1.bscCreateLocalAssetThumbnail(base64.toByteArray(thumbnailState.data), thumbnailState.type, thumbnailState.size, thumbnailState.hash);
    });
    return getThumbnail(state);
}
exports.dmGetThumbnail = dmGetThumbnail;


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bscore_1 = __webpack_require__(1);
var bsDmInterfaces_1 = __webpack_require__(2);
var bsDmClasses_1 = __webpack_require__(10);
var bsDmContentItems_1 = __webpack_require__(13);
var selectorSign_1 = __webpack_require__(49);
var selectorPlaylist_1 = __webpack_require__(59);
var selectorMediaState_1 = __webpack_require__(58);
var lodash_1 = __webpack_require__(0);
var reselect_1 = __webpack_require__(24);
function dmGetZoneById(state, props) {
    var zoneState = state.zones.zonesById[props.id];
    return zoneState ? new bsDmClasses_1.DmcZone(zoneState, state.sign.properties.videoMode) : null;
}
exports.dmGetZoneById = dmGetZoneById;
function dmGetZoneByName(state, props) {
    var zones = state.zones.zonesById;
    var videoMode = state.sign.properties.videoMode;
    var zoneId = lodash_1.find(Object.keys(zones), function (id) { return zones[id].name === props.name; });
    return lodash_1.isNil(zoneId) ? null : new bsDmClasses_1.DmcZone(zones[zoneId], videoMode);
}
exports.dmGetZoneByName = dmGetZoneByName;
function dmGetZoneCountByZoneType(state, type) {
    var zones = state.zones.zonesById;
    return state.zones.allZones.reduce(function (acc, zoneId) {
        if (zones[zoneId].type === type) {
            acc = acc + 1;
        }
        return acc;
    }, 0);
}
exports.dmGetZoneCountByZoneType = dmGetZoneCountByZoneType;
var VideoZoneSet = new Set([bscore_1.ZoneType.VideoOnly, bscore_1.ZoneType.VideoOrImages, bscore_1.ZoneType.BackgroundImage]);
function dmGetVideoZoneCount(state) {
    var zones = state.zones.zonesById;
    return state.zones.allZones.reduce(function (acc, zoneId) {
        if (VideoZoneSet.has(zones[zoneId].type)) {
            acc = acc + 1;
        }
        return acc;
    }, 0);
}
exports.dmGetVideoZoneCount = dmGetVideoZoneCount;
function dmIsZoneTypeAtLimit(state, type) {
    var zoneCount;
    if (type === bscore_1.ZoneType.VideoOnly || type === bscore_1.ZoneType.VideoOrImages) {
        zoneCount = dmGetVideoZoneCount(state);
    }
    else {
        zoneCount = dmGetZoneCountByZoneType(state, type);
    }
    var zoneTypeLimit = bscore_1.bscGetZoneLimit(type, selectorSign_1.dmGetSignPlayerModel(state));
    if (zoneTypeLimit === null) {
        return false;
    }
    if (type === bscore_1.ZoneType.BackgroundImage) {
        return dmIsZoneTypeAtLimit(state, bscore_1.ZoneType.VideoOrImages) || zoneCount >= zoneTypeLimit;
    }
    return zoneCount >= zoneTypeLimit;
}
exports.dmIsZoneTypeAtLimit = dmIsZoneTypeAtLimit;
function dmGetZoneByTag(state, props) {
    var zones = state.zones.zonesById;
    var videoMode = state.sign.properties.videoMode;
    var zoneId = lodash_1.find(Object.keys(zones), function (id) { return zones[id].tag === props.tag; });
    return lodash_1.isNil(zoneId) ? null : new bsDmClasses_1.DmcZone(zones[zoneId], videoMode);
}
exports.dmGetZoneByTag = dmGetZoneByTag;
function dmGetMediaStateIdsForZone(state, props) {
    var mediaStates = state.mediaStates.mediaStatesById;
    return Object.keys(mediaStates).filter(function (id) {
        var mediaState = mediaStates[id];
        return mediaState.container.type === bsDmInterfaces_1.MediaStateContainerType.Zone && mediaState.container.id === props.id;
    });
}
exports.dmGetMediaStateIdsForZone = dmGetMediaStateIdsForZone;
function dmGetAllTargetableMediaStateIdsForContainer(state, props) {
    var mediaStateMap = state.mediaStates.mediaStatesById;
    var getContainedMediaStateIds = function (containerId) {
        return Object.keys(mediaStateMap).filter(function (id) { return mediaStateMap[id].container.id === containerId; });
    };
    var getSuperStateIds = function (mediaStateIds) {
        return mediaStateIds.filter(function (id) { return mediaStateMap[id].contentItem.type === bscore_1.ContentItemType.SuperState; });
    };
    var targetableMediaStateIds = getContainedMediaStateIds(props.id);
    var superStateIds = getSuperStateIds(targetableMediaStateIds);
    while (superStateIds.length) {
        var superStateId = superStateIds.shift();
        var containedIds = getContainedMediaStateIds(superStateId);
        targetableMediaStateIds.push.apply(targetableMediaStateIds, containedIds);
        superStateIds.push.apply(superStateIds, getSuperStateIds(containedIds));
    }
    return targetableMediaStateIds;
}
exports.dmGetAllTargetableMediaStateIdsForContainer = dmGetAllTargetableMediaStateIdsForContainer;
function dmGetEventIdsForZone(state, props) {
    var events = state.events;
    var mediaStateIdSet = new Set(dmGetMediaStateIdsForZone(state, props));
    return Object.keys(events)
        .filter(function (id) { return mediaStateIdSet.has(events[id].mediaStateId)
        && !selectorMediaState_1.dmIsMediaListGlobalIntrinsicEvent(state, props.id, events[id]); });
}
exports.dmGetEventIdsForZone = dmGetEventIdsForZone;
function dmGetZoneIdForMediaStateId(state, props) {
    var mediaState = state.mediaStates.mediaStatesById[props.id];
    if (!lodash_1.isNil(mediaState)) {
        var containerType = mediaState.container.type;
        while (containerType !== bsDmInterfaces_1.MediaStateContainerType.Zone) {
            mediaState = state.mediaStates.mediaStatesById[mediaState.container.id];
            if (!lodash_1.isNil(mediaState)) {
                containerType = mediaState.container.type;
            }
            else {
                return null;
            }
        }
        return mediaState.container.id;
    }
    return null;
}
exports.dmGetZoneIdForMediaStateId = dmGetZoneIdForMediaStateId;
function dmGetZoneForMediaStateId(state, props) {
    var zoneId = dmGetZoneIdForMediaStateId(state, props);
    return lodash_1.isNil(zoneId) ? null : dmGetZoneById(state, { id: zoneId });
}
exports.dmGetZoneForMediaStateId = dmGetZoneForMediaStateId;
function dmGetZoneTypeForMediaStateId(state, props) {
    var zoneId = dmGetZoneIdForMediaStateId(state, props);
    return lodash_1.isNil(zoneId) ? null : dmGetZoneTypeById(state, { id: zoneId });
}
exports.dmGetZoneTypeForMediaStateId = dmGetZoneTypeForMediaStateId;
function dmGetZoneTypeById(state, props) {
    var zoneState = state.zones.zonesById[props.id];
    return lodash_1.isNil(zoneState) ? null : zoneState.type;
}
exports.dmGetZoneTypeById = dmGetZoneTypeById;
function dmGetZoneNonInteractiveById(state, props) {
    var zoneState = state.zones.zonesById[props.id];
    return lodash_1.isNil(zoneState) ? false : zoneState.nonInteractive;
}
exports.dmGetZoneNonInteractiveById = dmGetZoneNonInteractiveById;
function dmIsZoneContentNonInteractive(state, props) {
    return !lodash_1.isNil(selectorPlaylist_1.dmGetZoneSimplePlaylist(state, props));
}
exports.dmIsZoneContentNonInteractive = dmIsZoneContentNonInteractive;
function dmIsZoneInteractiveCompatible(state, props) {
    var zoneState = state.zones.zonesById[props.id];
    return lodash_1.isNil(zoneState) ? false : bsDmContentItems_1.dmIsZoneTypeInteractiveCompatible(zoneState.type);
}
exports.dmIsZoneInteractiveCompatible = dmIsZoneInteractiveCompatible;
function dmGetZonePropertiesById(state, props) {
    var zoneState = state.zones.zonesById[props.id];
    return lodash_1.isNil(zoneState) ? null : lodash_1.cloneDeep(zoneState.properties);
}
exports.dmGetZonePropertiesById = dmGetZonePropertiesById;
function dmGetZonePropertiesByName(state, props) {
    var zones = state.zones.zonesById;
    var zoneId = lodash_1.find(Object.keys(zones), function (id) { return zones[id].name === props.name; });
    return lodash_1.isNil(zoneId) ? null : lodash_1.cloneDeep(zones[zoneId].properties);
}
exports.dmGetZonePropertiesByName = dmGetZonePropertiesByName;
function dmGetZonePropertiesByTag(state, props) {
    var zones = state.zones.zonesById;
    var zoneId = lodash_1.find(Object.keys(zones), function (id) { return zones[id].tag === props.tag; });
    return lodash_1.isNil(zoneId) ? null : lodash_1.cloneDeep(zones[zoneId].properties);
}
exports.dmGetZonePropertiesByTag = dmGetZonePropertiesByTag;
function dmGetZonesForSign(state) {
    return state.zones.allZones;
}
exports.dmGetZonesForSign = dmGetZonesForSign;
function dmGetZoneCount(state) {
    return state.zones.allZones.length;
}
exports.dmGetZoneCount = dmGetZoneCount;
function dmGetZoneIdsForZoneType(state, props) {
    var zones = state.zones.zonesById;
    return state.zones.allZones.filter(function (id) { return zones[id].type === props.type; });
}
exports.dmGetZoneIdsForZoneType = dmGetZoneIdsForZoneType;
function dmGetZoneTagMap(state) {
    var getZoneTagMap = reselect_1.createSelector(function (dmState) { return dmState.zones.zonesById; }, function (zones) {
        var tagMap = {};
        Object.keys(zones).forEach(function (id) {
            var zone = zones[id];
            if (zone.tag) {
                tagMap[zone.tag] = id;
            }
        });
        return tagMap;
    });
    return getZoneTagMap(state);
}
exports.dmGetZoneTagMap = dmGetZoneTagMap;
function dmGetFirstVideoZoneZOrderFront(state) {
    var zones = state.zones.zonesById;
    var zoneId = lodash_1.find(Object.keys(zones), function (id) {
        var zoneState = zones[id];
        return zoneState.type === bscore_1.ZoneType.VideoOrImages || zoneState.type === bscore_1.ZoneType.VideoOnly;
    });
    return lodash_1.isNil(zoneId) ? false : zones[zoneId].properties.zOrderFront;
}
exports.dmGetFirstVideoZoneZOrderFront = dmGetFirstVideoZoneZOrderFront;
function dmCanChangeZoneType(state, props) {
    var zone = state.zones.zonesById[props.id];
    var mediaStates = state.mediaStates.mediaStatesById;
    var targetZoneType = props.type;
    var isAtLimit;
    var targetZoneTypeIsVideo = targetZoneType === bscore_1.ZoneType.VideoOrImages
        || targetZoneType === bscore_1.ZoneType.VideoOnly
        || targetZoneType === bscore_1.ZoneType.BackgroundImage;
    var currentZoneTypeIsVideo = zone.type === bscore_1.ZoneType.VideoOrImages
        || zone.type === bscore_1.ZoneType.VideoOnly
        || zone.type === bscore_1.ZoneType.BackgroundImage;
    if (targetZoneTypeIsVideo && currentZoneTypeIsVideo) {
        var backgroundImageLimitation = bscore_1.bscGetZoneLimit(bscore_1.ZoneType.BackgroundImage, selectorSign_1.dmGetSignPlayerModel(state));
        isAtLimit = targetZoneType === bscore_1.ZoneType.BackgroundImage
            && !lodash_1.isNil(backgroundImageLimitation)
            && dmGetZoneCountByZoneType(state, bscore_1.ZoneType.BackgroundImage) >= backgroundImageLimitation;
    }
    else {
        isAtLimit = dmIsZoneTypeAtLimit(state, props.type);
    }
    var isContentValid = zone.type === targetZoneType
        || !Object.keys(mediaStates).some(function (mediaStateId) {
            var mediaState = mediaStates[mediaStateId];
            return mediaState.container.id === zone.id
                && !(zone.nonInteractive ?
                    bsDmContentItems_1.dmIsValidContentItemTypeForPlaylistChangeZoneType(mediaState.contentItem.type, targetZoneType, zone.type) :
                    bsDmContentItems_1.dmIsValidContentItemTypeForZone(mediaState.contentItem.type, targetZoneType));
        });
    return isContentValid && (!isAtLimit || zone.type === targetZoneType);
}
exports.dmCanChangeZoneType = dmCanChangeZoneType;
function dmGetZonePropertyAssetItemIds(state, props) {
    var assetIds = [];
    var zoneState = state.zones.zonesById[props.id];
    if (!lodash_1.isNil(zoneState)
        && (zoneState.type === bscore_1.ZoneType.Ticker || zoneState.type === bscore_1.ZoneType.Clock)) {
        var zoneProperties = zoneState.properties;
        if (bscore_1.bscIsValidAssetId(zoneProperties.widget.backgroundBitmapAssetId)) {
            assetIds.push(zoneProperties.widget.backgroundBitmapAssetId);
        }
        var fontAssetId = bsDmContentItems_1.dmGetWidgetCustomFontAssetId(zoneProperties.widget);
        if (!lodash_1.isNil(fontAssetId)) {
            assetIds.push(fontAssetId);
        }
    }
    return assetIds;
}
exports.dmGetZonePropertyAssetItemIds = dmGetZonePropertyAssetItemIds;
function dmCanAddZone(state, props) {
    var zoneTypeLimit = bscore_1.bscGetZoneLimit(props.type, selectorSign_1.dmGetSignPlayerModel(state));
    if (!lodash_1.isNil(zoneTypeLimit)) {
        if (props.type === bscore_1.ZoneType.VideoOnly || props.type === bscore_1.ZoneType.VideoOrImages) {
            var videoZoneCount = dmGetVideoZoneCount(state);
            return videoZoneCount === 0 || (!selectorSign_1.dmIsDolbyVisionEnabled(state) && videoZoneCount < zoneTypeLimit);
        }
        return dmGetZoneCountByZoneType(state, props.type) < zoneTypeLimit;
    }
    return true;
}
exports.dmCanAddZone = dmCanAddZone;


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
function createThunkMiddleware(extraArgument) {
  return function (_ref) {
    var dispatch = _ref.dispatch,
        getState = _ref.getState;
    return function (next) {
      return function (action) {
        if (typeof action === 'function') {
          return action(dispatch, getState, extraArgument);
        }

        return next(action);
      };
    };
  };
}

var thunk = createThunkMiddleware();
thunk.withExtraArgument = createThunkMiddleware;

exports['default'] = thunk;

/***/ }),
/* 100 */
/***/ (function(module, exports) {

module.exports = __webpack_require__(108);

/***/ })
/******/ ]);
});
//# sourceMappingURL=bsdm.js.map

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(10);
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),
/* 15 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(12);
var createDesc = __webpack_require__(28);
module.exports = __webpack_require__(9) ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(6);
var hide = __webpack_require__(16);
var has = __webpack_require__(15);
var SRC = __webpack_require__(30)('src');
var $toString = __webpack_require__(122);
var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

__webpack_require__(8).inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(5);

var _interopRequireWildcard = __webpack_require__(116);

exports.__esModule = true;

var _Provider = _interopRequireWildcard(__webpack_require__(200));

exports.Provider = _Provider.default;
exports.createProvider = _Provider.createProvider;

var _connectAdvanced = _interopRequireDefault(__webpack_require__(96));

exports.connectAdvanced = _connectAdvanced.default;

var _connect = _interopRequireDefault(__webpack_require__(201));

exports.connect = _connect.default;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;

var _createStore = __webpack_require__(101);

var _createStore2 = _interopRequireDefault(_createStore);

var _combineReducers = __webpack_require__(215);

var _combineReducers2 = _interopRequireDefault(_combineReducers);

var _bindActionCreators = __webpack_require__(214);

var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);

var _applyMiddleware = __webpack_require__(213);

var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);

var _compose = __webpack_require__(100);

var _compose2 = _interopRequireDefault(_compose);

var _warning = __webpack_require__(102);

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/*
* This is a dummy function to check if the function name has been altered by minification.
* If the function has been minified and NODE_ENV !== 'production', warn the user.
*/
function isCrushed() {}

if (false) {
  (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
}

exports.createStore = _createStore2['default'];
exports.combineReducers = _combineReducers2['default'];
exports.bindActionCreators = _bindActionCreators2['default'];
exports.applyMiddleware = _applyMiddleware2['default'];
exports.compose = _compose2['default'];

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory(__webpack_require__(25), __webpack_require__(26), __webpack_require__(56));
	else if(typeof define === 'function' && define.amd)
		define(["core-js/es6/set", "core-js/fn/array/from", "isomorphic-path"], factory);
	else if(typeof exports === 'object')
		exports["bsCore"] = factory(require("core-js/es6/set"), require("core-js/fn/array/from"), require("isomorphic-path"));
	else
		root["bsCore"] = factory(root["core-js/es6/set"], root["core-js/fn/array/from"], root["isomorphic-path"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_19__, __WEBPACK_EXTERNAL_MODULE_20__, __WEBPACK_EXTERNAL_MODULE_24__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 6);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var assets_1 = __webpack_require__(4);
var MediaType = (function () {
    function MediaType() {
    }
    MediaType.Video = 'Video';
    MediaType.Audio = 'Audio';
    MediaType.Image = 'Image';
    MediaType.Text = 'Text';
    MediaType.Font = 'Font';
    MediaType.Css = 'Css';
    MediaType.Auxiliary = 'Auxiliary';
    MediaType.Other = 'Other';
    return MediaType;
}());
exports.MediaType = MediaType;
Object.freeze(MediaType);
var PlayableMediaTypeArray = [
    MediaType.Image, MediaType.Video, MediaType.Audio, MediaType.Text
];
exports.PlayableMediaTypes = new Set(PlayableMediaTypeArray);
var ContentItemType = (function () {
    function ContentItemType() {
    }
    ContentItemType.Video = 'Video';
    ContentItemType.Image = 'Image';
    ContentItemType.Audio = 'Audio';
    ContentItemType.Html = 'Html';
    ContentItemType.LiveVideo = 'LiveVideo';
    ContentItemType.DataFeed = 'DataFeed';
    ContentItemType.MrssFeed = 'MrssFeed';
    ContentItemType.TwitterFeed = 'TwitterFeed';
    ContentItemType.Text = 'Text';
    ContentItemType.UserVariable = 'UserVariable';
    ContentItemType.VideoStream = 'VideoStream';
    ContentItemType.AudioStream = 'AudioStream';
    ContentItemType.MjpegStream = 'MjpegStream';
    ContentItemType.Clock = 'Clock';
    ContentItemType.EventHandler = 'EventHandler';
    ContentItemType.PlayFile = 'PlayFile';
    ContentItemType.MediaList = 'MediaList';
    ContentItemType.LiveText = 'LiveText';
    ContentItemType.SuperState = 'SuperState';
    ContentItemType.Invalid = 'Invalid';
    return ContentItemType;
}());
exports.ContentItemType = ContentItemType;
Object.freeze(ContentItemType);
function bscGetContentItemTypeForMediaType(type) {
    if (assets_1.bscIsMediaTypePlayable(type)) {
        return type;
    }
    return ContentItemType.Invalid;
}
exports.bscGetContentItemTypeForMediaType = bscGetContentItemTypeForMediaType;
var ZoneType = (function () {
    function ZoneType() {
    }
    ZoneType.VideoOrImages = 'VideoOrImages';
    ZoneType.VideoOnly = 'VideoOnly';
    ZoneType.Images = 'Images';
    ZoneType.AudioOnly = 'AudioOnly';
    ZoneType.EnhancedAudio = 'EnhancedAudio';
    ZoneType.Ticker = 'Ticker';
    ZoneType.Clock = 'Clock';
    ZoneType.BackgroundImage = 'BackgroundImage';
    return ZoneType;
}());
exports.ZoneType = ZoneType;
Object.freeze(ZoneType);
var ZoneLayerType = (function () {
    function ZoneLayerType() {
    }
    ZoneLayerType.Video = 'Video';
    ZoneLayerType.Audio = 'Audio';
    ZoneLayerType.Graphics = 'Graphics';
    ZoneLayerType.Invisible = 'Invisible';
    return ZoneLayerType;
}());
exports.ZoneLayerType = ZoneLayerType;
Object.freeze(ZoneLayerType);
var VideoZoneLayerType = (function () {
    function VideoZoneLayerType() {
    }
    VideoZoneLayerType.FourK = 'FourK';
    VideoZoneLayerType.HD = 'HD';
    return VideoZoneLayerType;
}());
exports.VideoZoneLayerType = VideoZoneLayerType;
Object.freeze(VideoZoneLayerType);
var VideoDecoderMode = (function () {
    function VideoDecoderMode() {
    }
    VideoDecoderMode.Regular = 'Regular';
    VideoDecoderMode.Mosaic = 'Mosaic';
    return VideoDecoderMode;
}());
exports.VideoDecoderMode = VideoDecoderMode;
Object.freeze(VideoDecoderMode);
var VideoDecoderName = (function () {
    function VideoDecoderName() {
    }
    VideoDecoderName.FourKFirstDecoder = '4K';
    VideoDecoderName.FourKSecondDecoder = '4K2';
    VideoDecoderName.HDDecoder = 'Hd';
    return VideoDecoderName;
}());
exports.VideoDecoderName = VideoDecoderName;
Object.freeze(VideoDecoderName);
var VideoDecoderSize = (function () {
    function VideoDecoderSize() {
    }
    VideoDecoderSize.FourK = 'FourK';
    VideoDecoderSize.HD = 'HD';
    return VideoDecoderSize;
}());
exports.VideoDecoderSize = VideoDecoderSize;
Object.freeze(VideoDecoderSize);
var VideoConnectorType = (function () {
    function VideoConnectorType() {
    }
    VideoConnectorType.Hdmi = 'HDMI';
    VideoConnectorType.Vga = 'VGA';
    VideoConnectorType.Component = 'Component';
    return VideoConnectorType;
}());
exports.VideoConnectorType = VideoConnectorType;
Object.freeze(VideoConnectorType);
var MonitorOrientationType = (function () {
    function MonitorOrientationType() {
    }
    MonitorOrientationType.Landscape = 'Landscape';
    MonitorOrientationType.PortraitBottomLeft = 'PortraitBottomLeft';
    MonitorOrientationType.PortraitBottomRight = 'PortraitBottomRight';
    return MonitorOrientationType;
}());
exports.MonitorOrientationType = MonitorOrientationType;
Object.freeze(MonitorOrientationType);
var MonitorOverscanType = (function () {
    function MonitorOverscanType() {
    }
    MonitorOverscanType.NoOverscan = 'NoOverscan';
    MonitorOverscanType.OverscanActionSafeArea = 'OverscanActionSafeArea';
    MonitorOverscanType.OverscanTitleSafeArea = 'OverscanTitleSafeArea';
    return MonitorOverscanType;
}());
exports.MonitorOverscanType = MonitorOverscanType;
Object.freeze(MonitorOverscanType);
var DeviceWebPageDisplay = (function () {
    function DeviceWebPageDisplay() {
    }
    DeviceWebPageDisplay.None = 'None';
    DeviceWebPageDisplay.Standard = 'Standard';
    DeviceWebPageDisplay.Custom = 'Custom';
    return DeviceWebPageDisplay;
}());
exports.DeviceWebPageDisplay = DeviceWebPageDisplay;
Object.freeze(DeviceWebPageDisplay);
var TouchCursorDisplayModeType = (function () {
    function TouchCursorDisplayModeType() {
    }
    TouchCursorDisplayModeType.Disabled = 'Disabled';
    TouchCursorDisplayModeType.Auto = 'Auto';
    TouchCursorDisplayModeType.Display = 'Display';
    return TouchCursorDisplayModeType;
}());
exports.TouchCursorDisplayModeType = TouchCursorDisplayModeType;
Object.freeze(TouchCursorDisplayModeType);
var GraphicsZOrderType = (function () {
    function GraphicsZOrderType() {
    }
    GraphicsZOrderType.Back = 'Back';
    GraphicsZOrderType.Middle = 'Middle';
    GraphicsZOrderType.Front = 'Front';
    return GraphicsZOrderType;
}());
exports.GraphicsZOrderType = GraphicsZOrderType;
Object.freeze(GraphicsZOrderType);
var UdpAddressType = (function () {
    function UdpAddressType() {
    }
    UdpAddressType.IPAddress = 'IPAddress';
    UdpAddressType.LocalSubnet = 'LocalSubnet';
    UdpAddressType.Ethernet = 'Ethernet';
    UdpAddressType.Wireless = 'Wireless';
    return UdpAddressType;
}());
exports.UdpAddressType = UdpAddressType;
Object.freeze(UdpAddressType);
var LanguageType = (function () {
    function LanguageType() {
    }
    LanguageType.English = 'English';
    LanguageType.French = 'French';
    LanguageType.German = 'German';
    LanguageType.Spanish = 'Spanish';
    LanguageType.Italian = 'Italian';
    LanguageType.Dutch = 'Dutch';
    LanguageType.Swedish = 'Swedish';
    return LanguageType;
}());
exports.LanguageType = LanguageType;
Object.freeze(LanguageType);
var LanguageKeyType = (function () {
    function LanguageKeyType() {
    }
    LanguageKeyType.English = 'eng';
    LanguageKeyType.French = 'fre';
    LanguageKeyType.German = 'ger';
    LanguageKeyType.Spanish = 'spa';
    LanguageKeyType.Italian = 'ita';
    LanguageKeyType.Dutch = 'dut';
    LanguageKeyType.Swedish = 'swe';
    return LanguageKeyType;
}());
exports.LanguageKeyType = LanguageKeyType;
Object.freeze(LanguageKeyType);
var ViewModeType = (function () {
    function ViewModeType() {
    }
    ViewModeType.ScaleToFill = 'Scale to Fill';
    ViewModeType.Letterboxed = 'Letterboxed and Centered';
    ViewModeType.FillAndCenter = 'Fill Screen and Centered';
    return ViewModeType;
}());
exports.ViewModeType = ViewModeType;
Object.freeze(ViewModeType);
var ImageModeType = (function () {
    function ImageModeType() {
    }
    ImageModeType.CenterImage = 'Center Image';
    ImageModeType.ScaleToFit = 'Scale to Fit';
    ImageModeType.FillAndCrop = 'Scale to Fill and Crop';
    ImageModeType.ScaleToFill = 'Scale to Fill';
    return ImageModeType;
}());
exports.ImageModeType = ImageModeType;
Object.freeze(ImageModeType);
var ColorSpaceType = (function () {
    function ColorSpaceType() {
    }
    ColorSpaceType.Unknown = 'Unknown';
    ColorSpaceType.RGB = 'RGB';
    ColorSpaceType.CMYK = 'CMYK';
    return ColorSpaceType;
}());
exports.ColorSpaceType = ColorSpaceType;
var AudioOutputSelectionType = (function () {
    function AudioOutputSelectionType() {
    }
    AudioOutputSelectionType.Analog = 'Analog';
    AudioOutputSelectionType.Usb = 'Usb';
    AudioOutputSelectionType.DigitalPcm = 'DigitalPcm';
    AudioOutputSelectionType.DigitalAc3 = 'DigitalAc3';
    AudioOutputSelectionType.AnalogHdmiAc3 = 'AnalogHdmiAc3';
    return AudioOutputSelectionType;
}());
exports.AudioOutputSelectionType = AudioOutputSelectionType;
Object.freeze(AudioOutputSelectionType);
var AudioModeType = (function () {
    function AudioModeType() {
    }
    AudioModeType.Surround = 'Surround';
    AudioModeType.Stereo = 'Stereo';
    AudioModeType.NoAudio = 'NoAudio';
    AudioModeType.Left = 'Left';
    AudioModeType.Right = 'Right';
    return AudioModeType;
}());
exports.AudioModeType = AudioModeType;
Object.freeze(AudioModeType);
var AudioMappingType = (function () {
    function AudioMappingType() {
    }
    AudioMappingType.Audio1 = 'Audio1';
    AudioMappingType.Audio2 = 'Audio2';
    AudioMappingType.Audio3 = 'Audio3';
    AudioMappingType.AudioAll = 'AudioAll';
    return AudioMappingType;
}());
exports.AudioMappingType = AudioMappingType;
Object.freeze(AudioMappingType);
var AudioOutputName = (function () {
    function AudioOutputName() {
    }
    AudioOutputName.Analog1 = 'analog1';
    AudioOutputName.Analog2 = 'analog2';
    AudioOutputName.Analog3 = 'analog3';
    AudioOutputName.UsbA = 'usbA';
    AudioOutputName.UsbB = 'usbB';
    AudioOutputName.UsbC = 'usbC';
    AudioOutputName.UsbD = 'usbD';
    AudioOutputName.UsbTypeA = 'usbTypeA';
    AudioOutputName.UsbTypeC = 'usbTypeC';
    AudioOutputName.Usb700_1 = 'usb700_1';
    AudioOutputName.Usb700_2 = 'usb700_2';
    AudioOutputName.Usb700_3 = 'usb700_3';
    AudioOutputName.Usb700_4 = 'usb700_4';
    AudioOutputName.Usb700_5 = 'usb700_5';
    AudioOutputName.Usb700_6 = 'usb700_6';
    AudioOutputName.Usb700_7 = 'usb700_7';
    AudioOutputName.Hdmi = 'hdmi';
    AudioOutputName.Spdif = 'spdif';
    return AudioOutputName;
}());
exports.AudioOutputName = AudioOutputName;
Object.freeze(AudioOutputName);
exports.AudioOutputNameArray = [
    'analog1', 'analog2', 'analog3', 'usbA', 'usbB', 'usbC', 'usbD',
    'usbTypeA', 'usbTypeC', 'usb700_1', 'usb700_2', 'usb700_3',
    'usb700_4', 'usb700_5', 'usb700_6', 'usb700_7', 'hdmi', 'spdif',
];
var AudioConfiguration = (function () {
    function AudioConfiguration() {
    }
    AudioConfiguration.MixedAudioPCMOnly = 'MixedAudioPCMOnly';
    AudioConfiguration.MixedAudioPCMCompressed = 'MixedAudioPCMCompressed';
    AudioConfiguration.FixedAudio = 'FixedAudio';
    return AudioConfiguration;
}());
exports.AudioConfiguration = AudioConfiguration;
Object.freeze(AudioConfiguration);
var AudioOutputType = (function () {
    function AudioOutputType() {
    }
    AudioOutputType.Pcm = 'Pcm';
    AudioOutputType.Passthrough = 'Passthrough';
    AudioOutputType.Multichannel = 'Multichannel';
    AudioOutputType.None = 'None';
    return AudioOutputType;
}());
exports.AudioOutputType = AudioOutputType;
Object.freeze(AudioOutputType);
var AudioMixModeType = (function () {
    function AudioMixModeType() {
    }
    AudioMixModeType.Stereo = 'Stereo';
    AudioMixModeType.Left = 'Left';
    AudioMixModeType.Right = 'Right';
    return AudioMixModeType;
}());
exports.AudioMixModeType = AudioMixModeType;
Object.freeze(AudioMixModeType);
var LiveVideoInputType = (function () {
    function LiveVideoInputType() {
    }
    LiveVideoInputType.SVideo = 'S-Video';
    LiveVideoInputType.Composite = 'Composite';
    return LiveVideoInputType;
}());
exports.LiveVideoInputType = LiveVideoInputType;
Object.freeze(LiveVideoInputType);
var LiveVideoStandardType = (function () {
    function LiveVideoStandardType() {
    }
    LiveVideoStandardType.NtscM = 'NTSC-M';
    LiveVideoStandardType.NtscMj = 'NTSC-Mj';
    LiveVideoStandardType.Ntsc443 = 'NTSC-443';
    LiveVideoStandardType.NtscMk = 'NTSC-Mk';
    LiveVideoStandardType.PalB = 'PAL-B';
    LiveVideoStandardType.PalB1 = 'PAL-B1';
    LiveVideoStandardType.PalG = 'PAL-G';
    LiveVideoStandardType.PalDK = 'PAL-D/K';
    LiveVideoStandardType.PalH = 'PAL-H';
    LiveVideoStandardType.PalI = 'PAL-I';
    LiveVideoStandardType.PalD = 'PAL-D';
    LiveVideoStandardType.PalD1 = 'PAL-D1';
    LiveVideoStandardType.PalK = 'PAL-K';
    LiveVideoStandardType.PalM = 'PAL-M';
    LiveVideoStandardType.PalN = 'PAL-N';
    LiveVideoStandardType.PalNC = 'PAL-NC';
    LiveVideoStandardType.Pal60 = 'PAL-60';
    LiveVideoStandardType.SecamL = 'SECAM-L';
    LiveVideoStandardType.SecamB = 'SECAM-B';
    LiveVideoStandardType.SecamD = 'SECAM-D';
    LiveVideoStandardType.SecamG = 'SECAM-G';
    LiveVideoStandardType.SecamH = 'SECAM-H';
    LiveVideoStandardType.SecamK = 'SECAM-K';
    LiveVideoStandardType.SecamK1 = 'SECAM-K1';
    LiveVideoStandardType.SecamLC = 'SECAM-LC';
    LiveVideoStandardType.SecamDK = 'SECAM-D/K';
    return LiveVideoStandardType;
}());
exports.LiveVideoStandardType = LiveVideoStandardType;
Object.freeze(LiveVideoStandardType);
var MosaicMaxContentResolutionType = (function () {
    function MosaicMaxContentResolutionType() {
    }
    MosaicMaxContentResolutionType.NotApplicable = 'NotApplicable';
    MosaicMaxContentResolutionType.QCIF = 'QCIF';
    MosaicMaxContentResolutionType.CIF = 'CIF';
    MosaicMaxContentResolutionType.SD = 'SD';
    MosaicMaxContentResolutionType.HD = 'HD';
    MosaicMaxContentResolutionType.FK = '4K';
    return MosaicMaxContentResolutionType;
}());
exports.MosaicMaxContentResolutionType = MosaicMaxContentResolutionType;
Object.freeze(MosaicMaxContentResolutionType);
var VideoDisplayModeType = (function () {
    function VideoDisplayModeType() {
    }
    VideoDisplayModeType.m2D = '2D';
    VideoDisplayModeType.m3DTOB = '3DTOB';
    VideoDisplayModeType.m3DSBS = '3DSBS';
    return VideoDisplayModeType;
}());
exports.VideoDisplayModeType = VideoDisplayModeType;
Object.freeze(VideoDisplayModeType);
var RotationType = (function () {
    function RotationType() {
    }
    RotationType.rot0 = '0';
    RotationType.rot90 = '90';
    RotationType.rot180 = '180';
    RotationType.rot270 = '270';
    return RotationType;
}());
exports.RotationType = RotationType;
Object.freeze(RotationType);
var TextHAlignmentType = (function () {
    function TextHAlignmentType() {
    }
    TextHAlignmentType.Left = 'Left';
    TextHAlignmentType.Center = 'Center';
    TextHAlignmentType.Right = 'Right';
    return TextHAlignmentType;
}());
exports.TextHAlignmentType = TextHAlignmentType;
Object.freeze(TextHAlignmentType);
var TextScrollingMethodType = (function () {
    function TextScrollingMethodType() {
    }
    TextScrollingMethodType.Animated = 'Animated';
    TextScrollingMethodType.StaticText = 'StaticText';
    TextScrollingMethodType.Scrolling = 'Scrolling';
    return TextScrollingMethodType;
}());
exports.TextScrollingMethodType = TextScrollingMethodType;
Object.freeze(TextScrollingMethodType);
var EventType = (function () {
    function EventType() {
    }
    EventType.MediaEnd = 'MediaEnd';
    EventType.Timer = 'Timer';
    EventType.MediaEndOrTimer = 'MediaEndOrTimer';
    EventType.MediaListEnd = 'MediaListEnd';
    EventType.Keyboard = 'Keyboard';
    EventType.Remote = 'Remote';
    EventType.Usb = 'Usb';
    EventType.Synchronize = 'Synchronize';
    EventType.ZoneMessage = 'ZoneMessage';
    EventType.InternalSynchronize = 'InternalSynchronize';
    EventType.Success = 'Success';
    EventType.Fail = 'Fail';
    EventType.Serial = 'Serial';
    EventType.TimeClock = 'TimeClock';
    EventType.Gps = 'Gps';
    EventType.AudioTimeCode = 'AudioTimeCode';
    EventType.VideoTimeCode = 'VideoTimeCode';
    EventType.RectangularTouch = 'RectangularTouch';
    EventType.Gpio = 'Gpio';
    EventType.Bp = 'Bp';
    EventType.PluginMessage = 'PluginMessage';
    EventType.Udp = 'Udp';
    EventType.InteractiveMenu = 'InteractiveMenu';
    EventType.WssEvent = 'WssEvent';
    return EventType;
}());
exports.EventType = EventType;
Object.freeze(EventType);
var EventIntrinsicAction = (function () {
    function EventIntrinsicAction() {
    }
    EventIntrinsicAction.None = 'None';
    EventIntrinsicAction.SequenceForward = 'SeqFwd';
    EventIntrinsicAction.SequenceBackward = 'SeqBack';
    EventIntrinsicAction.ReturnToPriorState = 'ReturnToPriorState';
    EventIntrinsicAction.StopPlayback = 'StopPlayback';
    EventIntrinsicAction.StopPlaybackAndClearScreen = 'StopPlaybackAndClearScreen';
    return EventIntrinsicAction;
}());
exports.EventIntrinsicAction = EventIntrinsicAction;
var BpType = (function () {
    function BpType() {
    }
    BpType.Bp200 = 'bp200';
    BpType.Bp900 = 'bp900';
    BpType.Gpio = 'gpio';
    return BpType;
}());
exports.BpType = BpType;
Object.freeze(BpType);
var GpioType = (function () {
    function GpioType() {
    }
    GpioType.Input = 'input';
    GpioType.Output = 'output';
    return GpioType;
}());
exports.GpioType = GpioType;
Object.freeze(GpioType);
var BpIndex = (function () {
    function BpIndex() {
    }
    BpIndex.A = 'a';
    BpIndex.B = 'b';
    BpIndex.C = 'c';
    BpIndex.D = 'd';
    return BpIndex;
}());
exports.BpIndex = BpIndex;
Object.freeze(BpIndex);
var ButtonPanelName = (function () {
    function ButtonPanelName() {
    }
    ButtonPanelName.Bp900a = 'bp900a';
    ButtonPanelName.Bp900b = 'bp900b';
    ButtonPanelName.Bp900c = 'bp900c';
    ButtonPanelName.Bp900d = 'bp900d';
    ButtonPanelName.Bp200a = 'bp200a';
    ButtonPanelName.Bp200b = 'bp200b';
    ButtonPanelName.Bp200c = 'bp200c';
    ButtonPanelName.Bp200d = 'bp200d';
    return ButtonPanelName;
}());
exports.ButtonPanelName = ButtonPanelName;
Object.freeze(ButtonPanelName);
exports.ButtonPanelNameArray = [
    'bp900a', 'bp900b', 'bp900c', 'bp900d', 'bp200a', 'bp200b', 'bp200c', 'bp200d',
];
var ButtonDirection = (function () {
    function ButtonDirection() {
    }
    ButtonDirection.Down = 'Down';
    ButtonDirection.Up = 'Up';
    return ButtonDirection;
}());
exports.ButtonDirection = ButtonDirection;
Object.freeze(ButtonDirection);
var RegionDirection = (function () {
    function RegionDirection() {
    }
    RegionDirection.Enter = 'Enter';
    RegionDirection.Exit = 'Exit';
    return RegionDirection;
}());
exports.RegionDirection = RegionDirection;
Object.freeze(RegionDirection);
var DistanceUnits = (function () {
    function DistanceUnits() {
    }
    DistanceUnits.Miles = 'Miles';
    DistanceUnits.Kilometers = 'Kilometers';
    return DistanceUnits;
}());
exports.DistanceUnits = DistanceUnits;
Object.freeze(DistanceUnits);
var TransitionType = (function () {
    function TransitionType() {
    }
    TransitionType.None = 'None';
    TransitionType.NoEffect = 'No effect';
    TransitionType.WipeTop = 'Image wipe from top';
    TransitionType.WipeBottom = 'Image wipe from bottom';
    TransitionType.WipeLeft = 'Image wipe from left';
    TransitionType.WipeRight = 'Image wipe from right';
    TransitionType.ExplodeFromCenter = 'Explode from center';
    TransitionType.ExplodeTopLeft = 'Explode top left';
    TransitionType.ExplodeTopRight = 'Explode top right';
    TransitionType.ExplodeBottomLeft = 'Explode bottom left';
    TransitionType.ExplodeBottomRight = 'Explode bottom right';
    TransitionType.BlindsVertical = 'Venetian blinds - vertical';
    TransitionType.BlindsHorizontal = 'Venetian blinds - horizontal';
    TransitionType.CombVertical = 'Comb effect - vertical';
    TransitionType.CombHorizontal = 'Comb effect - horizontal';
    TransitionType.FadeToBackground = 'Fade to background color';
    TransitionType.Fade = 'Fade to new image';
    TransitionType.SlideFromTop = 'Slide from top';
    TransitionType.SlideFromBottom = 'Slide from bottom';
    TransitionType.SlideFromLeft = 'Slide from left';
    TransitionType.SlideFromRight = 'Slide from right';
    return TransitionType;
}());
exports.TransitionType = TransitionType;
Object.freeze(TransitionType);
var CompareOperator = (function () {
    function CompareOperator() {
    }
    CompareOperator.EQ = 'EQ';
    CompareOperator.NEQ = 'NEQ';
    CompareOperator.BTW = 'BTW';
    CompareOperator.GT = 'GT';
    CompareOperator.GTE = 'GTE';
    CompareOperator.LT = 'LT';
    CompareOperator.LTE = 'LTE';
    return CompareOperator;
}());
exports.CompareOperator = CompareOperator;
Object.freeze(CompareOperator);
var CommandType = (function () {
    function CommandType() {
    }
    CommandType.SendBpOutput = 'sendBpOutput';
    CommandType.SetAllAudioOutputs = 'setAllAudioOutputs';
    CommandType.SetAudioMode = 'setAudioMode';
    CommandType.ConfigureAudioResources = 'configureAudioResources';
    CommandType.SetConnectorVolume = 'setConnectorVolume';
    CommandType.IncrementConnectorVolume = 'incrementConnectorVolume';
    CommandType.DecrementConnectorVolume = 'decrementConnectorVolume';
    CommandType.MuteAudioOutputs = 'muteAudioOutputs';
    CommandType.UnmuteAudioOutputs = 'unmuteAudioOutputs';
    CommandType.SetZoneVolume = 'setZoneVolume';
    CommandType.IncrementZoneVolume = 'incrementZoneVolume';
    CommandType.DecrementZoneVolume = 'decrementZoneVolume';
    CommandType.SetZoneChannelVolume = 'setZoneChannelVolume';
    CommandType.IncrementZoneChannelVolume = 'incrementZoneChannelVolume';
    CommandType.DecrementZoneChannelVolume = 'decrementZoneChannelVolume';
    CommandType.SendZoneMessage = 'sendZoneMessage';
    CommandType.SendUdp = 'sendUdp';
    CommandType.SendUdpBytes = 'sendUdpBytes';
    CommandType.SendIRRemote = 'sendIRRemote';
    CommandType.SendProntoIRRemote = 'sendProntoIRRemote';
    CommandType.SerialSendString = 'serialSendString';
    CommandType.SerialSendByte = 'serialSendByte';
    CommandType.SerialSendBytes = 'serialSendBytes';
    CommandType.SendPluginMessage = 'sendPluginMessage';
    CommandType.Synchronize = 'synchronize';
    CommandType.InternalSynchronize = 'internalSynchronize';
    CommandType.GpioOn = 'gpioOn';
    CommandType.GpioOff = 'gpioOff';
    CommandType.GpioSetState = 'gpioSetState';
    CommandType.PauseVideo = 'pauseVideo';
    CommandType.ResumeVideo = 'resumeVideo';
    CommandType.EnablePowerSaveMode = 'enablePowerSaveMode';
    CommandType.DisablePowerSaveMode = 'disablePowerSaveMode';
    CommandType.CecDisplayOn = 'cecDisplayOn';
    CommandType.CecDisplayOff = 'cecDisplayOff';
    CommandType.CecSetSourceToBrightSign = 'cecSetSourceToBrightSign';
    CommandType.CecSendString = 'cecSendString';
    CommandType.CecPhilipsSetVolume = 'cecPhilipsSetVolume';
    CommandType.BeaconStart = 'beaconStart';
    CommandType.BeaconStop = 'beaconStop';
    CommandType.Pause = 'pause';
    CommandType.Resume = 'resume';
    CommandType.SetVariable = 'setVariable';
    CommandType.IncrementVariable = 'incrementVariable';
    CommandType.DecrementVariable = 'decrementVariable';
    CommandType.ResetVariable = 'resetVariable';
    CommandType.ResetVariables = 'resetVariables';
    CommandType.SwitchPresentation = 'switchPresentation';
    CommandType.UpdateDataFeed = 'updateDataFeed';
    CommandType.ResizeZone = 'resizeZone';
    CommandType.HideZone = 'hideZone';
    CommandType.ShowZone = 'showZone';
    CommandType.Reboot = 'reboot';
    CommandType.SendBLC400Output = 'sendBLC400Output';
    CommandType.SendWss = 'sendWss';
    return CommandType;
}());
exports.CommandType = CommandType;
Object.freeze(CommandType);
var CommandSequenceType = (function () {
    function CommandSequenceType() {
    }
    CommandSequenceType.StateEntry = 'StateEntry';
    CommandSequenceType.StateExit = 'StateExit';
    CommandSequenceType.Event = 'Event';
    CommandSequenceType.Transition = 'Transition';
    CommandSequenceType.SequenceItemNext = 'ItemNext';
    CommandSequenceType.SequenceItemPrevious = 'ItemPrev';
    return CommandSequenceType;
}());
exports.CommandSequenceType = CommandSequenceType;
Object.freeze(CommandSequenceType);
var BpAction = (function () {
    function BpAction() {
    }
    BpAction.Off = 'Off';
    BpAction.On = 'On';
    BpAction.FastBlink = 'FastBlink';
    BpAction.MediumBlink = 'MediumBlink';
    BpAction.SlowBlink = 'SlowBlink';
    return BpAction;
}());
exports.BpAction = BpAction;
Object.freeze(BpAction);
var BlcIndex = (function () {
    function BlcIndex() {
    }
    BlcIndex.A = 'a';
    BlcIndex.B = 'b';
    BlcIndex.C = 'c';
    return BlcIndex;
}());
exports.BlcIndex = BlcIndex;
Object.freeze(BlcIndex);
var BlcEffect = (function () {
    function BlcEffect() {
    }
    BlcEffect.Intensity = 'Intensity';
    BlcEffect.Blink = 'Blink';
    BlcEffect.Breathe = 'Breathe';
    BlcEffect.Strobe = 'Strobe';
    BlcEffect.Marquee = 'Marquee';
    return BlcEffect;
}());
exports.BlcEffect = BlcEffect;
Object.freeze(BlcEffect);
var BlcBlink = (function () {
    function BlcBlink() {
    }
    BlcBlink.FastBlink = 'FastBlink';
    BlcBlink.MediumBlink = 'MediumBlink';
    BlcBlink.SlowBlink = 'SlowBlink';
    return BlcBlink;
}());
exports.BlcBlink = BlcBlink;
Object.freeze(BlcBlink);
var BlcPlaybackMode = (function () {
    function BlcPlaybackMode() {
    }
    BlcPlaybackMode.Loop = 'Loop';
    BlcPlaybackMode.BackAndForth = 'BackAndForth';
    BlcPlaybackMode.PlayOnce = 'PlayOnce';
    BlcPlaybackMode.Random = 'Random';
    return BlcPlaybackMode;
}());
exports.BlcPlaybackMode = BlcPlaybackMode;
Object.freeze(BlcPlaybackMode);
var BlcTransitionMode = (function () {
    function BlcTransitionMode() {
    }
    BlcTransitionMode.HardOnOff = 'HardOnOff';
    BlcTransitionMode.SmoothDelay = 'SmoothDelay';
    BlcTransitionMode.SmoothFullOverlap = 'SmoothFullOverlap';
    BlcTransitionMode.SmoothPartialOverlap = 'SmoothPartialOverlap';
    return BlcTransitionMode;
}());
exports.BlcTransitionMode = BlcTransitionMode;
Object.freeze(BlcTransitionMode);
var BlcChannels = (function () {
    function BlcChannels() {
    }
    BlcChannels.A = 'A';
    BlcChannels.B = 'B';
    BlcChannels.C = 'C';
    BlcChannels.D = 'D';
    return BlcChannels;
}());
exports.BlcChannels = BlcChannels;
Object.freeze(BlcChannels);
var AccessType = (function () {
    function AccessType() {
    }
    AccessType.Private = 'Private';
    AccessType.Shared = 'Shared';
    return AccessType;
}());
exports.AccessType = AccessType;
Object.freeze(AccessType);
var StringParameterType = (function () {
    function StringParameterType() {
    }
    StringParameterType.Text = 'Text';
    StringParameterType.UserVariable = 'UserVariable';
    StringParameterType.UserVariableName = 'UserVariableName';
    return StringParameterType;
}());
exports.StringParameterType = StringParameterType;
Object.freeze(StringParameterType);
var NumberParameterType = (function () {
    function NumberParameterType() {
    }
    NumberParameterType.Number = 'Number';
    NumberParameterType.UserVariable = 'UserVariable';
    NumberParameterType.UserVariableName = 'UserVariableName';
    return NumberParameterType;
}());
exports.NumberParameterType = NumberParameterType;
Object.freeze(NumberParameterType);
var SystemVariableType = (function () {
    function SystemVariableType() {
    }
    SystemVariableType.SerialNumber = 'SerialNumber';
    SystemVariableType.IPAddressWired = 'IPAddressWired';
    SystemVariableType.IPAddressWireless = 'IPAddressWireless';
    SystemVariableType.FirmwareVersion = 'FirmwareVersion';
    SystemVariableType.ScriptVersion = 'ScriptVersion';
    SystemVariableType.EdidMonitorSerialNumber = 'EdidMonitorSerialNumber';
    SystemVariableType.EdidYearOfManufacture = 'EdidYearOfManufacture';
    SystemVariableType.EdidMonitorName = 'EdidMonitorName';
    SystemVariableType.EdidManufacturer = 'EdidManufacturer';
    SystemVariableType.EdidUnspecifiedText = 'EdidUnspecifiedText';
    SystemVariableType.EdidSerialNumber = 'EdidSerialNumber';
    SystemVariableType.EdidManufacturerProductCode = 'EdidManufacturerProductCode';
    SystemVariableType.EdidWeekOfManufacture = 'EdidWeekOfManufacture';
    SystemVariableType.ActivePresentation = 'ActivePresentation';
    return SystemVariableType;
}());
exports.SystemVariableType = SystemVariableType;
var MediaListPlaybackType = (function () {
    function MediaListPlaybackType() {
    }
    MediaListPlaybackType.FromBeginning = 'FromBeginning';
    MediaListPlaybackType.NextInList = 'NextInList';
    MediaListPlaybackType.FromIndex = 'FromIndex';
    return MediaListPlaybackType;
}());
exports.MediaListPlaybackType = MediaListPlaybackType;
var PlayFileTriggerType = (function () {
    function PlayFileTriggerType() {
    }
    PlayFileTriggerType.ByEventData = 'ByEventData';
    PlayFileTriggerType.ByUserVariable = 'ByUserVariable';
    return PlayFileTriggerType;
}());
exports.PlayFileTriggerType = PlayFileTriggerType;
var HtmlSiteType = (function () {
    function HtmlSiteType() {
    }
    HtmlSiteType.Hosted = 'Hosted';
    HtmlSiteType.Remote = 'Remote';
    return HtmlSiteType;
}());
exports.HtmlSiteType = HtmlSiteType;
Object.freeze(HtmlSiteType);
var DataFeedType = (function () {
    function DataFeedType() {
    }
    DataFeedType.URLDataFeed = 'URLDataFeed';
    DataFeedType.BSNDataFeed = 'BSNDataFeed';
    DataFeedType.BSNMediaFeed = 'BSNMediaFeed';
    DataFeedType.BSNDynamicPlaylist = 'BSNDynamicPlaylist';
    DataFeedType.BSNTaggedPlaylist = 'BSNTaggedPlaylist';
    return DataFeedType;
}());
exports.DataFeedType = DataFeedType;
Object.freeze(DataFeedType);
var DataFeedUsageType = (function () {
    function DataFeedUsageType() {
    }
    DataFeedUsageType.Text = 'Text';
    DataFeedUsageType.Mrss = 'MRSS';
    DataFeedUsageType.MrssWith4K = 'MRSSWith4K';
    DataFeedUsageType.Content = 'Content';
    return DataFeedUsageType;
}());
exports.DataFeedUsageType = DataFeedUsageType;
Object.freeze(DataFeedUsageType);
var PlayerTagMatchingType = (function () {
    function PlayerTagMatchingType() {
    }
    PlayerTagMatchingType.DoNotMatchTags = 'DoNotMatchTags';
    PlayerTagMatchingType.MatchAllMediaTagsToPlayerTags = 'MatchAllMediaTagsToPlayerTags';
    PlayerTagMatchingType.MatchAllPlayerTagsToMediaTags = 'MatchAllPlayerTagsToMediaTags';
    PlayerTagMatchingType.MatchAnyPlayerAndMediaTags = 'MatchAnyPlayerAndMediaTags';
    return PlayerTagMatchingType;
}());
exports.PlayerTagMatchingType = PlayerTagMatchingType;
Object.freeze(PlayerTagMatchingType);
var TwitterFeedRestrictionType = (function () {
    function TwitterFeedRestrictionType() {
    }
    TwitterFeedRestrictionType.None = 'None';
    TwitterFeedRestrictionType.ByCount = 'ByCount';
    TwitterFeedRestrictionType.ByRecentDays = 'ByRecentDays';
    return TwitterFeedRestrictionType;
}());
exports.TwitterFeedRestrictionType = TwitterFeedRestrictionType;
exports.BsBlack = { a: 255, r: 0, g: 0, b: 0 };
Object.freeze(exports.BsBlack);
function getEnumKeyOfValue(enumType, value) {
    for (var _i = 0, _a = Object.keys(enumType); _i < _a.length; _i++) {
        var key = _a[_i];
        if (enumType[key] === value) {
            return key;
        }
    }
    return null;
}
exports.getEnumKeyOfValue = getEnumKeyOfValue;
function isInstanceOfEnum(enumType, value) {
    return getEnumKeyOfValue(enumType, value) !== null;
}
exports.isInstanceOfEnum = isInstanceOfEnum;


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var PlayerFamily = (function () {
    function PlayerFamily() {
    }
    PlayerFamily.Unknown = 'Unknown';
    PlayerFamily.Malibu = 'Malibu';
    PlayerFamily.Pagani = 'Pagani';
    PlayerFamily.Impala = 'Impala';
    PlayerFamily.Pantera = 'Pantera';
    PlayerFamily.Tiger = 'Tiger';
    PlayerFamily.Lynx = 'Lynx';
    PlayerFamily.Bobcat = 'Bobcat';
    PlayerFamily.Cheetah = 'Cheetah';
    PlayerFamily.Panther = 'Panther';
    PlayerFamily.Puma = 'Puma';
    PlayerFamily.Monaco = 'Monaco';
    return PlayerFamily;
}());
exports.PlayerFamily = PlayerFamily;
Object.freeze(PlayerFamily);
var PlayerMachineNameSuffix = (function () {
    function PlayerMachineNameSuffix() {
    }
    PlayerMachineNameSuffix.SingleDecoder = 'SingleDecoder';
    PlayerMachineNameSuffix.No4K = 'No4K';
    return PlayerMachineNameSuffix;
}());
exports.PlayerMachineNameSuffix = PlayerMachineNameSuffix;
Object.freeze(PlayerMachineNameSuffix);
var PlayerModel = (function () {
    function PlayerModel() {
    }
    PlayerModel.Unknown = 'Unknown';
    PlayerModel.XD1034 = 'XD1034';
    PlayerModel.XD234 = 'XD234';
    PlayerModel.XT1144 = 'XT1144';
    PlayerModel.XT244 = 'XT244';
    PlayerModel.HD1024 = 'HD1024';
    PlayerModel.HD224 = 'HD224';
    PlayerModel.HS144 = 'HS144';
    PlayerModel.LS424 = 'LS424';
    PlayerModel.HS124 = 'HS124';
    PlayerModel.XD1033 = 'XD1033';
    PlayerModel.XD233 = 'XD233';
    PlayerModel.XT1043 = 'XT1043';
    PlayerModel.XT1143 = 'XT1143';
    PlayerModel.XT243 = 'XT243';
    PlayerModel.HD1023 = 'HD1023';
    PlayerModel.HD223 = 'HD223';
    PlayerModel.HS123 = 'HS123';
    PlayerModel.HO523 = 'HO523';
    PlayerModel.LS423 = 'LS423';
    PlayerModel.FK1142 = '4K1142';
    PlayerModel.FK1042 = '4K1042';
    PlayerModel.FK242 = '4K242';
    PlayerModel.XD1132 = 'XD1132';
    PlayerModel.XD1032 = 'XD1032';
    PlayerModel.XD232 = 'XD232';
    PlayerModel.HD1022 = 'HD1022';
    PlayerModel.HD222 = 'HD222';
    PlayerModel.HD972 = 'HD972';
    PlayerModel.HD922 = 'HD922';
    PlayerModel.XD1230 = 'XD1230';
    PlayerModel.XD1030 = 'XD1030';
    PlayerModel.XD230 = 'XD230';
    PlayerModel.HD1020 = 'HD1020';
    PlayerModel.HD220 = 'HD220';
    PlayerModel.HD120 = 'HD120';
    PlayerModel.LS422 = 'LS422';
    PlayerModel.LS322 = 'LS322';
    PlayerModel.AU320 = 'AU320';
    PlayerModel.HD970 = 'HD970';
    PlayerModel.HD920 = 'HD920';
    PlayerModel.A915 = 'A915';
    PlayerModel.HD917 = 'HD917';
    PlayerModel.HD210 = 'HD210';
    PlayerModel.HD1010 = 'HD1010';
    PlayerModel.TD1012 = 'TD1012';
    return PlayerModel;
}());
exports.PlayerModel = PlayerModel;
var MalibuModelArray = [
    PlayerModel.XD1034,
    PlayerModel.XD234,
    PlayerModel.XT1144,
    PlayerModel.XT244,
];
exports.MalibuModels = new Set(MalibuModelArray);
var PaganiModelArray = [
    PlayerModel.HD1024,
    PlayerModel.HD224,
    PlayerModel.HS144,
];
exports.PaganiModels = new Set(PaganiModelArray);
var PaganiHDModelArray = [
    PlayerModel.LS424,
    PlayerModel.HS124,
];
exports.PaganiHDModels = new Set(PaganiHDModelArray);
var ImpalaModelArray = [
    PlayerModel.XD1033,
    PlayerModel.XD233,
    PlayerModel.XT1043,
    PlayerModel.XT1143,
    PlayerModel.XT243,
];
exports.ImpalaModels = new Set(ImpalaModelArray);
var PanteraModelArray = [
    PlayerModel.HD1023,
    PlayerModel.HD223,
    PlayerModel.HS123,
    PlayerModel.HO523,
    PlayerModel.LS423,
];
exports.PanteraModels = new Set(PanteraModelArray);
var TigerModelArray = [
    PlayerModel.FK1142,
    PlayerModel.FK1042,
    PlayerModel.FK242,
];
exports.TigerModels = new Set(TigerModelArray);
var LynxModelArray = [
    PlayerModel.XD1132,
    PlayerModel.XD1032,
    PlayerModel.XD232,
];
exports.LynxModels = new Set(LynxModelArray);
var BobcatModelArray = [
    PlayerModel.HD1022,
    PlayerModel.HD222,
    PlayerModel.HD972,
    PlayerModel.HD922,
];
exports.BobcatModels = new Set(BobcatModelArray);
var CheetahModelArray = [
    PlayerModel.XD1230,
    PlayerModel.XD1030,
    PlayerModel.XD230,
];
exports.CheetahModels = new Set(CheetahModelArray);
var PantherModelArray = [
    PlayerModel.HD1020,
    PlayerModel.HD220,
    PlayerModel.HD120,
    PlayerModel.LS422,
    PlayerModel.LS322,
    PlayerModel.AU320,
];
exports.PantherModels = new Set(PantherModelArray);
var PumaModelArray = [
    PlayerModel.HD970,
    PlayerModel.HD920,
    PlayerModel.A915,
    PlayerModel.HD917,
];
exports.PumaModels = new Set(PumaModelArray);
var MonacoModelArray = [
    PlayerModel.HD210,
    PlayerModel.HD1010,
    PlayerModel.TD1012,
];
exports.MonacoModels = new Set(MonacoModelArray);
exports.Series4Models = new Set(MalibuModelArray.concat(PaganiModelArray, PaganiHDModelArray));
exports.Series3Models = new Set(ImpalaModelArray.concat(PanteraModelArray));
exports.Series2Models = new Set(TigerModelArray.concat(LynxModelArray, BobcatModelArray));
exports.AllModels = new Set(MalibuModelArray.concat(PaganiModelArray, PaganiHDModelArray, ImpalaModelArray, PanteraModelArray, TigerModelArray, LynxModelArray, BobcatModelArray, CheetahModelArray, PantherModelArray, PumaModelArray, MonacoModelArray));
var PaganiPrefixArray = [
    '24', '25', '42', '43',
    '44', '45', '46', '47',
    '48', '49', '58', '59',
    '64', '65', '66',
];
var PanteraPrefixArray = [
    '31', '33', '35', '38',
    '53', '55', '57', '61',
];
var ImpalaPrefixArray = [
    '62', '63', 'L6', 'L8',
    'L9', 'R1', 'R2', 'R3',
    'R4', 'R5', 'R6', 'R7',
    'L7',
];
var MalibuPrefixArray = [
    '67', 'D1', 'D2', 'D3',
    'D4', 'D5', 'D6', 'D7',
    'D8', 'D9', 'E1', 'E2',
];
var TigerPrefixArray = [
    'X3', 'X4', 'X5',
];
function bscSerialToPlayerFamily(serialNumber) {
    if (serialNumber && serialNumber.length > 1) {
        var prefix_1 = serialNumber.substring(0, 2);
        if (PaganiPrefixArray.find(function (p) { return (p === prefix_1); }) !== undefined) {
            return PlayerFamily.Pagani;
        }
        if (PanteraPrefixArray.find(function (p) { return (p === prefix_1); }) !== undefined) {
            return PlayerFamily.Pantera;
        }
        if (ImpalaPrefixArray.find(function (p) { return (p === prefix_1); }) !== undefined) {
            return PlayerFamily.Impala;
        }
        if (MalibuPrefixArray.find(function (p) { return (p === prefix_1); }) !== undefined) {
            return PlayerFamily.Malibu;
        }
        if (TigerPrefixArray.find(function (p) { return (p === prefix_1); }) !== undefined) {
            return PlayerFamily.Tiger;
        }
    }
    return null;
}
exports.bscSerialToPlayerFamily = bscSerialToPlayerFamily;
function bscPlayerModelToPlayerFamily(model) {
    if (exports.MalibuModels.has(model)) {
        return PlayerFamily.Malibu;
    }
    else if (exports.PaganiModels.has(model) || exports.PaganiHDModels.has(model)) {
        return PlayerFamily.Pagani;
    }
    else if (exports.ImpalaModels.has(model)) {
        return PlayerFamily.Impala;
    }
    else if (exports.PanteraModels.has(model)) {
        return PlayerFamily.Pantera;
    }
    else if (exports.TigerModels.has(model)) {
        return PlayerFamily.Tiger;
    }
    else if (exports.LynxModels.has(model)) {
        return PlayerFamily.Lynx;
    }
    else if (exports.BobcatModels.has(model)) {
        return PlayerFamily.Bobcat;
    }
    else if (exports.CheetahModels.has(model)) {
        return PlayerFamily.Cheetah;
    }
    else if (exports.PantherModels.has(model)) {
        return PlayerFamily.Panther;
    }
    else if (exports.PumaModels.has(model)) {
        return PlayerFamily.Puma;
    }
    else if (exports.MonacoModels.has(model)) {
        return PlayerFamily.Monaco;
    }
    else {
        return PlayerFamily.Unknown;
    }
}
exports.bscPlayerModelToPlayerFamily = bscPlayerModelToPlayerFamily;


/***/ }),
/* 2 */
/***/ (function(module, exports) {

/**
 * lodash 4.0.0 (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */

/**
 * Checks if `value` is `null` or `undefined`.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
 * @example
 *
 * _.isNil(null);
 * // => true
 *
 * _.isNil(void 0);
 * // => true
 *
 * _.isNil(NaN);
 * // => false
 */
function isNil(value) {
  return value == null;
}

module.exports = isNil;


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _a;
var playerModel_1 = __webpack_require__(1);
var ModelFeature = (function () {
    function ModelFeature() {
    }
    ModelFeature.Gpio = 'gpio';
    ModelFeature.Networking = 'net';
    ModelFeature.SingleAnalogVolumeLimitation = '1audVol';
    ModelFeature.Hdmi = 'hdmi';
    ModelFeature.VideoStreaming = 'vstrm';
    ModelFeature.AudioStreaming = 'astrm';
    ModelFeature.AudioMixer = 'amix';
    ModelFeature.Images = 'img';
    ModelFeature.Video = 'vid';
    ModelFeature.Clock = 'clk';
    ModelFeature.GraphicsZOrdering = 'grfZ';
    ModelFeature.VideoZOrdering = 'vidZ';
    ModelFeature.Html5 = 'html5';
    ModelFeature.Html5Camera = 'htmlCam';
    ModelFeature.AudioOutputControl = 'aoctl';
    ModelFeature.Spdif = 'spdif';
    ModelFeature.IrOut = 'ir';
    ModelFeature.Usb = 'usb';
    ModelFeature.Bp = 'bp';
    ModelFeature.Serial = 'ser';
    ModelFeature.Blc400 = 'blc400';
    ModelFeature.HdmiIn = 'hdmiIn';
    ModelFeature.EnhancedSynchronization = 'enhsync';
    ModelFeature.Pronto = 'pronto';
    ModelFeature.ScrollingTicker = 'scrlTic';
    ModelFeature.TenBitColor = '10bit';
    ModelFeature.FourKImages = '4kimg';
    ModelFeature.FullResGraphics = 'fullResGfx';
    ModelFeature.DualDecoder = '2dec';
    ModelFeature.MosaicMode = 'mosaic';
    ModelFeature.Bluetooth = 'btle';
    ModelFeature.AudioConfiguration = 'acnf';
    ModelFeature.DedicatedIr = 'dedir';
    ModelFeature.DolbyVision = 'dolby';
    ModelFeature.RfTuner = 'tun';
    ModelFeature.AudioDetect = 'auddet';
    ModelFeature.ExternalAudioDetect = 'extAudDet';
    ModelFeature.SingleOnBoardAnalogChannel = '1aud';
    ModelFeature.ThreeOnBoardAnalogChannels = '3aud';
    ModelFeature.UsbAudio = 'usbAud';
    ModelFeature.PumaUsbAudio = 'pumaAud';
    ModelFeature.BoseUsb = 'boseUsb';
    ModelFeature.AudioIn = 'audIn';
    ModelFeature.AudioDownMix = 'audDMix';
    return ModelFeature;
}());
exports.ModelFeature = ModelFeature;
Object.freeze(ModelFeature);
var ImpalaFeatureArray = [
    ModelFeature.Gpio, ModelFeature.Networking, ModelFeature.Hdmi,
    ModelFeature.SingleAnalogVolumeLimitation, ModelFeature.VideoStreaming, ModelFeature.AudioStreaming,
    ModelFeature.AudioMixer, ModelFeature.Images, ModelFeature.Video, ModelFeature.Clock,
    ModelFeature.GraphicsZOrdering, ModelFeature.VideoZOrdering, ModelFeature.Html5, ModelFeature.Html5Camera,
    ModelFeature.AudioOutputControl, ModelFeature.Spdif, ModelFeature.IrOut,
    ModelFeature.EnhancedSynchronization, ModelFeature.Pronto, ModelFeature.ScrollingTicker, ModelFeature.TenBitColor,
    ModelFeature.FourKImages, ModelFeature.MosaicMode, ModelFeature.Bluetooth, ModelFeature.AudioConfiguration,
    ModelFeature.DedicatedIr,
];
var ImpalaEnterpriseFeatureArray = ImpalaFeatureArray.concat([ModelFeature.Serial, ModelFeature.Usb, ModelFeature.Bp, ModelFeature.Blc400]);
var XD233Features = new Set(ImpalaFeatureArray);
var XT243Features = new Set(ImpalaFeatureArray.concat([ModelFeature.FullResGraphics, ModelFeature.DualDecoder]));
var XD1033Features = new Set(ImpalaEnterpriseFeatureArray);
var XT1143Features = new Set(ImpalaEnterpriseFeatureArray.concat([ModelFeature.HdmiIn, ModelFeature.FullResGraphics, ModelFeature.DualDecoder]));
var MalibuFeatureArray = ImpalaFeatureArray.concat([ModelFeature.DolbyVision]);
var MalibuEnterpriseFeatureArray = ImpalaEnterpriseFeatureArray.concat([ModelFeature.DolbyVision]);
var XD234Features = new Set(MalibuFeatureArray);
var XT244Features = new Set(MalibuFeatureArray.concat([ModelFeature.FullResGraphics,
    ModelFeature.DualDecoder]));
var XD1034Features = new Set(MalibuEnterpriseFeatureArray);
var XT1144Features = new Set(MalibuEnterpriseFeatureArray.concat([ModelFeature.HdmiIn, ModelFeature.FullResGraphics, ModelFeature.DualDecoder]));
var PaganiFeatureArray = [
    ModelFeature.Gpio, ModelFeature.Networking, ModelFeature.Hdmi,
    ModelFeature.SingleAnalogVolumeLimitation, ModelFeature.VideoStreaming, ModelFeature.AudioStreaming,
    ModelFeature.AudioMixer, ModelFeature.Images, ModelFeature.Video, ModelFeature.Clock,
    ModelFeature.GraphicsZOrdering, ModelFeature.Html5, ModelFeature.AudioOutputControl,
    ModelFeature.Serial, ModelFeature.Usb, ModelFeature.Bp, ModelFeature.Blc400,
    ModelFeature.EnhancedSynchronization, ModelFeature.Pronto, ModelFeature.ScrollingTicker, ModelFeature.TenBitColor,
    ModelFeature.Bluetooth, ModelFeature.AudioConfiguration,
];
var HD224Features = new Set(PaganiFeatureArray.concat([ModelFeature.Html5Camera, ModelFeature.MosaicMode, ModelFeature.Spdif]));
var HS144Features = HD224Features;
var HD1024Features = HD224Features;
var HS124Features = new Set(PaganiFeatureArray.concat([ModelFeature.MosaicMode, ModelFeature.Spdif]));
var LS424Features = new Set(PaganiFeatureArray.concat([ModelFeature.Html5Camera]));
var PanteraFeatureArray = [
    ModelFeature.Gpio, ModelFeature.Networking, ModelFeature.Hdmi,
    ModelFeature.SingleAnalogVolumeLimitation, ModelFeature.VideoStreaming, ModelFeature.AudioStreaming,
    ModelFeature.AudioMixer, ModelFeature.Images, ModelFeature.Video, ModelFeature.Clock,
    ModelFeature.Html5, ModelFeature.AudioOutputControl,
    ModelFeature.EnhancedSynchronization, ModelFeature.ScrollingTicker, ModelFeature.TenBitColor,
    ModelFeature.Bluetooth, ModelFeature.AudioConfiguration,
];
var PanteraAdvancedFeatureArray = [
    ModelFeature.GraphicsZOrdering, ModelFeature.MosaicMode, ModelFeature.Spdif,
];
var PanteraIoFeatureArray = [
    ModelFeature.Serial, ModelFeature.Bp, ModelFeature.Usb, ModelFeature.Blc400, ModelFeature.Pronto,
];
var HD223Features = new Set(PanteraFeatureArray.concat(PanteraAdvancedFeatureArray, [ModelFeature.Html5Camera]));
var HD1023Features = new Set(PanteraFeatureArray.concat(PanteraAdvancedFeatureArray, PanteraIoFeatureArray, [ModelFeature.Html5Camera]));
var HS123Features = new Set(PanteraFeatureArray.concat(PanteraAdvancedFeatureArray, PanteraIoFeatureArray));
var HO523Features = new Set(PanteraFeatureArray.concat(PanteraAdvancedFeatureArray, PanteraIoFeatureArray, [ModelFeature.Html5Camera, ModelFeature.DedicatedIr]));
var LS423Features = new Set(PanteraFeatureArray.concat(PanteraIoFeatureArray, [ModelFeature.Html5Camera]));
var TigerFeatureArray = [
    ModelFeature.Gpio, ModelFeature.Networking, ModelFeature.Hdmi,
    ModelFeature.SingleAnalogVolumeLimitation, ModelFeature.VideoStreaming, ModelFeature.AudioStreaming,
    ModelFeature.AudioMixer, ModelFeature.Images, ModelFeature.Video, ModelFeature.Clock,
    ModelFeature.GraphicsZOrdering, ModelFeature.VideoZOrdering, ModelFeature.Html5, ModelFeature.Html5Camera,
    ModelFeature.AudioOutputControl, ModelFeature.IrOut,
    ModelFeature.EnhancedSynchronization, ModelFeature.Pronto, ModelFeature.ScrollingTicker, ModelFeature.TenBitColor,
    ModelFeature.FourKImages, ModelFeature.MosaicMode, ModelFeature.DualDecoder, ModelFeature.Bluetooth,
    ModelFeature.AudioConfiguration,
];
var FK242Features = new Set(TigerFeatureArray);
var FK1042Features = new Set(TigerFeatureArray.concat([ModelFeature.Serial, ModelFeature.Bp, ModelFeature.Usb, ModelFeature.Blc400, ModelFeature.Spdif]));
var FK1142Features = new Set(TigerFeatureArray.concat([ModelFeature.Serial, ModelFeature.Bp, ModelFeature.Usb, ModelFeature.Blc400, ModelFeature.Spdif,
    ModelFeature.HdmiIn]));
var LynxFeatureArray = [
    ModelFeature.Gpio, ModelFeature.Networking, ModelFeature.Hdmi,
    ModelFeature.SingleAnalogVolumeLimitation, ModelFeature.VideoStreaming, ModelFeature.AudioStreaming,
    ModelFeature.AudioMixer, ModelFeature.Images, ModelFeature.Video, ModelFeature.Clock,
    ModelFeature.GraphicsZOrdering, ModelFeature.VideoZOrdering, ModelFeature.Html5, ModelFeature.AudioOutputControl,
    ModelFeature.IrOut,
    ModelFeature.EnhancedSynchronization, ModelFeature.Pronto, ModelFeature.ScrollingTicker,
    ModelFeature.MosaicMode, ModelFeature.AudioConfiguration,
];
var XD232Features = new Set(LynxFeatureArray);
var XD1032Features = new Set(LynxFeatureArray.concat([ModelFeature.Serial, ModelFeature.Bp, ModelFeature.Usb, ModelFeature.Blc400, ModelFeature.Spdif]));
var XD1132Features = new Set(LynxFeatureArray.concat([ModelFeature.Serial, ModelFeature.Bp, ModelFeature.Usb, ModelFeature.Blc400, ModelFeature.Spdif,
    ModelFeature.HdmiIn]));
var BaseBobcatFeatureArray = [
    ModelFeature.Gpio, ModelFeature.Networking, ModelFeature.Hdmi,
    ModelFeature.VideoStreaming, ModelFeature.AudioStreaming,
    ModelFeature.AudioMixer, ModelFeature.Images, ModelFeature.Video, ModelFeature.Clock,
    ModelFeature.GraphicsZOrdering, ModelFeature.Html5, ModelFeature.AudioOutputControl,
    ModelFeature.EnhancedSynchronization, ModelFeature.MosaicMode,
];
var BobcatFeatureArray = BaseBobcatFeatureArray.concat([ModelFeature.ScrollingTicker, ModelFeature.SingleAnalogVolumeLimitation, ModelFeature.AudioConfiguration]);
var BoseBobcatFeatureArray = BaseBobcatFeatureArray.concat([ModelFeature.Serial, ModelFeature.Bp, ModelFeature.Usb, ModelFeature.Blc400, ModelFeature.Pronto,
    ModelFeature.IrOut, ModelFeature.Spdif, ModelFeature.BoseUsb, ModelFeature.AudioIn, ModelFeature.PumaUsbAudio,
    ModelFeature.AudioDetect, ModelFeature.ExternalAudioDetect]);
var HD222Features = new Set(BobcatFeatureArray);
var HD1022Features = new Set(BobcatFeatureArray.concat([ModelFeature.Serial, ModelFeature.Bp, ModelFeature.Usb, ModelFeature.Blc400, ModelFeature.Pronto]));
var HD922Features = new Set(BoseBobcatFeatureArray);
var HD972Features = new Set(BoseBobcatFeatureArray.concat([ModelFeature.ThreeOnBoardAnalogChannels]));
var CheetahFeatureArray = [
    ModelFeature.Networking, ModelFeature.Hdmi,
    ModelFeature.SingleAnalogVolumeLimitation, ModelFeature.VideoStreaming, ModelFeature.AudioStreaming,
    ModelFeature.AudioMixer, ModelFeature.Images, ModelFeature.Video, ModelFeature.Clock,
    ModelFeature.GraphicsZOrdering, ModelFeature.VideoZOrdering, ModelFeature.Html5, ModelFeature.AudioOutputControl,
    ModelFeature.IrOut,
    ModelFeature.EnhancedSynchronization, ModelFeature.Pronto, ModelFeature.ScrollingTicker,
];
var XD230Features = new Set(CheetahFeatureArray);
var XD1030Features = new Set(CheetahFeatureArray.concat([ModelFeature.Gpio, ModelFeature.Serial, ModelFeature.Bp, ModelFeature.Usb, ModelFeature.Blc400,
    ModelFeature.Spdif]));
var XD1230Features = new Set(CheetahFeatureArray.concat([ModelFeature.Gpio, ModelFeature.Serial, ModelFeature.Bp, ModelFeature.Usb, ModelFeature.Blc400,
    ModelFeature.Spdif, ModelFeature.RfTuner, ModelFeature.HdmiIn]));
var BasePantherFeatureArray = [
    ModelFeature.SingleAnalogVolumeLimitation,
    ModelFeature.AudioMixer, ModelFeature.Images, ModelFeature.Clock,
    ModelFeature.AudioOutputControl,
];
var PantherFeatureArray = BasePantherFeatureArray.concat([ModelFeature.Hdmi, ModelFeature.Networking, ModelFeature.Video,
    ModelFeature.VideoStreaming, ModelFeature.AudioStreaming,
    ModelFeature.EnhancedSynchronization,]);
var HD120Features = new Set(BasePantherFeatureArray.concat([ModelFeature.Gpio, ModelFeature.Hdmi, ModelFeature.Video]));
var HD220Features = new Set(PantherFeatureArray);
var HD1020Features = new Set(PantherFeatureArray.concat([ModelFeature.Gpio, ModelFeature.Serial, ModelFeature.Bp, ModelFeature.Usb, ModelFeature.Blc400,
    ModelFeature.Pronto]));
var LS322Features = new Set(BasePantherFeatureArray.concat([ModelFeature.Gpio, ModelFeature.Networking, ModelFeature.AudioStreaming,
    ModelFeature.Bp, ModelFeature.Usb, ModelFeature.Blc400, ModelFeature.Spdif, ModelFeature.Pronto]));
var LS422Features = new Set(PantherFeatureArray.concat([ModelFeature.Gpio, ModelFeature.Bp, ModelFeature.Usb, ModelFeature.Blc400,
    ModelFeature.Spdif, ModelFeature.Pronto]));
var AU320Features = new Set([
    ModelFeature.Serial, ModelFeature.Networking, ModelFeature.Bp, ModelFeature.SingleAnalogVolumeLimitation,
    ModelFeature.AudioMixer, ModelFeature.AudioOutputControl, ModelFeature.AudioStreaming, ModelFeature.Usb,
    ModelFeature.Pronto
]);
var PumaFeatureArray = [
    ModelFeature.Gpio, ModelFeature.Serial, ModelFeature.Networking, ModelFeature.Hdmi, ModelFeature.Bp,
    ModelFeature.AudioStreaming, ModelFeature.Images, ModelFeature.Video, ModelFeature.Clock,
    ModelFeature.Usb, ModelFeature.AudioOutputControl, ModelFeature.BoseUsb, ModelFeature.IrOut,
    ModelFeature.AudioIn, ModelFeature.PumaUsbAudio, ModelFeature.Blc400, ModelFeature.AudioDetect,
    ModelFeature.EnhancedSynchronization, ModelFeature.Pronto,
];
var HD917Features = new Set(PumaFeatureArray);
var A915Features = HD917Features;
var HD920Features = new Set(PumaFeatureArray.concat([ModelFeature.VideoStreaming, ModelFeature.Spdif, ModelFeature.ExternalAudioDetect]));
var HD970Features = new Set(PumaFeatureArray.concat([ModelFeature.VideoStreaming, ModelFeature.Spdif, ModelFeature.ExternalAudioDetect,
    ModelFeature.ThreeOnBoardAnalogChannels]));
var FeaturesByPlayerModel = (_a = {},
    _a[playerModel_1.PlayerModel.XD1034] = XD1034Features,
    _a[playerModel_1.PlayerModel.XD234] = XD234Features,
    _a[playerModel_1.PlayerModel.XT1144] = XT1144Features,
    _a[playerModel_1.PlayerModel.XT244] = XT244Features,
    _a[playerModel_1.PlayerModel.HD1024] = HD1024Features,
    _a[playerModel_1.PlayerModel.HD224] = HD224Features,
    _a[playerModel_1.PlayerModel.HS144] = HS144Features,
    _a[playerModel_1.PlayerModel.HS124] = HS124Features,
    _a[playerModel_1.PlayerModel.LS424] = LS424Features,
    _a[playerModel_1.PlayerModel.XD1033] = XD1033Features,
    _a[playerModel_1.PlayerModel.XD233] = XD233Features,
    _a[playerModel_1.PlayerModel.XT1143] = XT1143Features,
    _a[playerModel_1.PlayerModel.XT243] = XT243Features,
    _a[playerModel_1.PlayerModel.HD1023] = HD1023Features,
    _a[playerModel_1.PlayerModel.HD223] = HD223Features,
    _a[playerModel_1.PlayerModel.HS123] = HS123Features,
    _a[playerModel_1.PlayerModel.HO523] = HO523Features,
    _a[playerModel_1.PlayerModel.LS423] = LS423Features,
    _a[playerModel_1.PlayerModel.FK1142] = FK1142Features,
    _a[playerModel_1.PlayerModel.FK1042] = FK1042Features,
    _a[playerModel_1.PlayerModel.FK242] = FK242Features,
    _a[playerModel_1.PlayerModel.XD1132] = XD1132Features,
    _a[playerModel_1.PlayerModel.XD1032] = XD1032Features,
    _a[playerModel_1.PlayerModel.XD232] = XD232Features,
    _a[playerModel_1.PlayerModel.HD1022] = HD1022Features,
    _a[playerModel_1.PlayerModel.HD222] = HD222Features,
    _a[playerModel_1.PlayerModel.HD972] = HD972Features,
    _a[playerModel_1.PlayerModel.HD922] = HD922Features,
    _a[playerModel_1.PlayerModel.XD1230] = XD1230Features,
    _a[playerModel_1.PlayerModel.XD1030] = XD1030Features,
    _a[playerModel_1.PlayerModel.XD230] = XD230Features,
    _a[playerModel_1.PlayerModel.HD1020] = HD1020Features,
    _a[playerModel_1.PlayerModel.HD220] = HD220Features,
    _a[playerModel_1.PlayerModel.HD120] = HD120Features,
    _a[playerModel_1.PlayerModel.LS422] = LS422Features,
    _a[playerModel_1.PlayerModel.LS322] = LS322Features,
    _a[playerModel_1.PlayerModel.AU320] = AU320Features,
    _a[playerModel_1.PlayerModel.HD970] = HD970Features,
    _a[playerModel_1.PlayerModel.HD920] = HD920Features,
    _a[playerModel_1.PlayerModel.HD917] = HD917Features,
    _a[playerModel_1.PlayerModel.A915] = A915Features,
    _a);
function bscPlayerModelHasFeature(model, feature) {
    var featureSet = FeaturesByPlayerModel[model];
    if (featureSet) {
        return featureSet.has(feature);
    }
    return false;
}
exports.bscPlayerModelHasFeature = bscPlayerModelHasFeature;
function bscPlayerModelToPlayerMachineName(model) {
    var name = playerModel_1.bscPlayerModelToPlayerFamily(model);
    if (name === playerModel_1.PlayerFamily.Pagani) {
        if (playerModel_1.PaganiHDModels.has(model)) {
            name = name + ':' + playerModel_1.PlayerMachineNameSuffix.No4K;
        }
    }
    else if (name === playerModel_1.PlayerFamily.Malibu || name === playerModel_1.PlayerFamily.Impala) {
        if (!bscPlayerModelHasFeature(model, ModelFeature.DualDecoder)) {
            name = name + ':' + playerModel_1.PlayerMachineNameSuffix.SingleDecoder;
        }
    }
    return name.toUpperCase();
}
exports.bscPlayerModelToPlayerMachineName = bscPlayerModelToPlayerMachineName;


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(0);
var isomorphic_path_1 = __webpack_require__(24);
var isNil = __webpack_require__(2);
var isUndefined = __webpack_require__(23);
exports.BsAssetIdNone = '0';
function bscIsValidAssetId(id) {
    return typeof id === 'string' && id.length >= 8;
}
exports.bscIsValidAssetId = bscIsValidAssetId;
var AssetLocation = (function () {
    function AssetLocation() {
    }
    AssetLocation.Local = 'Local';
    AssetLocation.Bsn = 'Bsn';
    AssetLocation.Blob = 'Blob';
    return AssetLocation;
}());
exports.AssetLocation = AssetLocation;
Object.freeze(AssetLocation);
var AssetType = (function () {
    function AssetType() {
    }
    AssetType.Content = 'Content';
    AssetType.Project = 'Project';
    AssetType.ProjectBpf = 'ProjectBpf';
    AssetType.Schedule = 'Schedule';
    AssetType.BrightScript = 'BrightScript';
    AssetType.HtmlSite = 'HtmlSite';
    AssetType.DeviceHtmlSite = 'DeviceHtmlSite';
    AssetType.Folder = 'Folder';
    AssetType.BSNDataFeed = 'BSNDataFeed';
    AssetType.BSNMediaFeed = 'BSNMediaFeed';
    AssetType.BSNDynamicPlaylist = 'BSNDynamicPlaylist';
    AssetType.BSNTaggedPlaylist = 'BSNTaggedPlaylist';
    AssetType.Other = 'Other';
    return AssetType;
}());
exports.AssetType = AssetType;
Object.freeze(AssetType);
function bscIsVideoData(mediaData) {
    return !isNil(mediaData) && mediaData.mediaType === metadata_1.MediaType.Video;
}
exports.bscIsVideoData = bscIsVideoData;
function bscIsAudioData(mediaData) {
    return !isNil(mediaData) && mediaData.mediaType === metadata_1.MediaType.Audio;
}
exports.bscIsAudioData = bscIsAudioData;
function bscIsImageData(mediaData) {
    return !isNil(mediaData) && mediaData.mediaType === metadata_1.MediaType.Image;
}
exports.bscIsImageData = bscIsImageData;
function bscCreateLocalAssetThumbnail(data, type, size, hash) {
    return {
        kind: 'local',
        type: type, data: data,
        size: isNil(size) ? null : size,
        hash: isNil(hash) ? null : hash.toLowerCase(),
    };
}
exports.bscCreateLocalAssetThumbnail = bscCreateLocalAssetThumbnail;
function bscCreateNetworkAssetThumbnail(url, size, hash) {
    return {
        kind: 'network',
        url: url,
        size: isNil(size) ? null : size,
        hash: isNil(hash) ? null : hash.toLowerCase(),
    };
}
exports.bscCreateNetworkAssetThumbnail = bscCreateNetworkAssetThumbnail;
function bscIsLocalAssetThumbnail(assetThumbnail) {
    return assetThumbnail.kind === 'local';
}
exports.bscIsLocalAssetThumbnail = bscIsLocalAssetThumbnail;
function bscIsAssetItem(item) {
    return item != null
        && typeof item === 'object'
        && item.hasOwnProperty('assetType')
        && item.hasOwnProperty('location')
        && item.hasOwnProperty('locator');
}
exports.bscIsAssetItem = bscIsAssetItem;
function bscAssetItemIsBsnDataFeed(item) {
    return item.hasOwnProperty('assetType')
        && (item.assetType === AssetType.BSNDataFeed
            || item.assetType === AssetType.BSNMediaFeed
            || item.assetType === AssetType.BSNDynamicPlaylist
            || item.assetType === AssetType.BSNTaggedPlaylist);
}
exports.bscAssetItemIsBsnDataFeed = bscAssetItemIsBsnDataFeed;
function bscAssetItemFromAssetLocator(assetLocator) {
    var assetItem = __assign({ id: exports.BsAssetIdNone }, assetLocator, { locator: bscGenerateAssetLocatorKey(assetLocator) });
    if (assetItem.assetType === AssetType.Content) {
        assetItem.mediaType = bscGetFileMediaType(assetItem.name);
    }
    return assetItem;
}
exports.bscAssetItemFromAssetLocator = bscAssetItemFromAssetLocator;
function bscAssetLocatorFromAssetItem(assetItem) {
    var name = assetItem.name, path = assetItem.path, location = assetItem.location, assetType = assetItem.assetType, networkId = assetItem.networkId, scope = assetItem.scope, origin = assetItem.origin;
    var locator = { name: name, path: path, location: location, assetType: assetType, networkId: networkId, scope: scope };
    if (!isNil(origin)) {
        locator.origin = origin;
    }
    return locator;
}
exports.bscAssetLocatorFromAssetItem = bscAssetLocatorFromAssetItem;
function bscAssetLocatorForBsnAsset(assetType, bsnId, network, name, path, origin) {
    if (network === void 0) { network = ''; }
    if (name === void 0) { name = ''; }
    if (path === void 0) { path = ''; }
    var locator = {
        name: isNil(name) ? '' : name,
        path: isNil(path) ? '' : path,
        location: AssetLocation.Bsn,
        assetType: assetType,
        networkId: bsnId,
        scope: isNil(network) ? '' : network,
    };
    if (!isNil(origin)) {
        locator.origin = origin;
    }
    return locator;
}
exports.bscAssetLocatorForBsnAsset = bscAssetLocatorForBsnAsset;
function bscGetAssetName(locator) {
    if (locator.location === AssetLocation.Bsn && locator.assetType !== AssetType.Content) {
        return locator.name;
    }
    return isomorphic_path_1.default.basename(locator.name, isomorphic_path_1.default.extname(locator.name));
}
exports.bscGetAssetName = bscGetAssetName;
function bscGetAssetExtension(locator) {
    if (locator.location === AssetLocation.Local || locator.assetType === AssetType.Content) {
        return isomorphic_path_1.default.extname(locator.name);
    }
    return '';
}
exports.bscGetAssetExtension = bscGetAssetExtension;
var leadingSep = function (path, assetLocation) {
    var sep = isomorphic_path_1.default.sep;
    if (assetLocation === AssetLocation.Bsn) {
        sep = isomorphic_path_1.default.posix.sep;
    }
    return path.charAt(0) === sep ? '' : sep;
};
var trailingSep = function (path, assetLocation) {
    var sep = isomorphic_path_1.default.sep;
    if (assetLocation === AssetLocation.Bsn) {
        sep = isomorphic_path_1.default.posix.sep;
    }
    return !path || path.charAt(path.length - 1) === sep ? '' : sep;
};
function bscGetAssetFullPath(assetLocator) {
    if (assetLocator.location === AssetLocation.Local) {
        return isomorphic_path_1.default.join(assetLocator.path, assetLocator.name);
    }
    return assetLocator.path + trailingSep(assetLocator.path, assetLocator.location) + assetLocator.name;
}
exports.bscGetAssetFullPath = bscGetAssetFullPath;
function bscAssetLocatorForLocalAsset(assetType, fullPath, scope, origin) {
    if (scope === void 0) { scope = ''; }
    var dirName = isomorphic_path_1.default.dirname(fullPath);
    var locator = {
        name: isomorphic_path_1.default.basename(fullPath),
        path: dirName + trailingSep(dirName),
        location: AssetLocation.Local,
        assetType: assetType,
        networkId: 0,
        scope: isNil(scope) ? '' : scope,
    };
    if (!isNil(origin)) {
        locator.origin = origin;
    }
    return locator;
}
exports.bscAssetLocatorForLocalAsset = bscAssetLocatorForLocalAsset;
function bscGetAssetSpecification(location, assetType, fullPath) {
    var dirName = isomorphic_path_1.default.dirname(fullPath);
    return {
        name: isomorphic_path_1.default.basename(fullPath),
        path: dirName + trailingSep(dirName, location),
        location: location,
        assetType: assetType,
    };
}
exports.bscGetAssetSpecification = bscGetAssetSpecification;
function bscAssetItemFromBasicAssetInfo(assetType, fileName, fileDirPath, bsnId, mediaType, scope, origin) {
    if (fileDirPath === void 0) { fileDirPath = null; }
    if (bsnId === void 0) { bsnId = 0; }
    if (mediaType === void 0) { mediaType = null; }
    if (scope === void 0) { scope = ''; }
    var assetLocator;
    if (!fileDirPath) {
        fileDirPath = isomorphic_path_1.default.sep;
    }
    if (isNil(scope)) {
        scope = '';
    }
    if (bsnId) {
        assetLocator = bscAssetLocatorForBsnAsset(assetType, bsnId, scope);
        assetLocator.name = fileName;
        assetLocator.path = fileDirPath;
    }
    else if (fileName) {
        var fullPath = isomorphic_path_1.default.join(fileDirPath, fileName);
        assetLocator = bscAssetLocatorForLocalAsset(assetType, fullPath, scope);
    }
    if (assetLocator) {
        if (origin) {
            assetLocator.origin = origin;
        }
        var assetItem = bscAssetItemFromAssetLocator(assetLocator);
        if (assetType === AssetType.Content) {
            assetItem.mediaType = mediaType ? mediaType : bscGetFileMediaType(assetItem.name);
        }
        return assetItem;
    }
    return null;
}
exports.bscAssetItemFromBasicAssetInfo = bscAssetItemFromBasicAssetInfo;
function bscGenerateAssetLocatorKey(item) {
    switch (item.location) {
        case AssetLocation.Local:
        default:
            if (!isUndefined(item.path) && item.name) {
                return 'file://' + leadingSep(item.path) + item.path + trailingSep(item.path) + item.name;
            }
            break;
        case AssetLocation.Bsn:
            if (!isNil(item.assetType)) {
                return bscGetBsnAssetLocatorKey(item.networkId, item.assetType, item.name, item.path);
            }
            break;
        case AssetLocation.Blob:
            if (!isNil(item.name)) {
                var key = 'blob://' + item.name + '/';
                if (bscIsAssetItem(item)) {
                    if (!isNil(item.fileSize)) {
                        key = key + item.fileSize;
                    }
                    else {
                        key = key + '0';
                    }
                    if (!isNil(item.lastModifiedDate)) {
                        key = key + '/' + item.lastModifiedDate.toISOString();
                    }
                }
                return key;
            }
    }
    return '';
}
exports.bscGenerateAssetLocatorKey = bscGenerateAssetLocatorKey;
function bscGetLocalAssetLocatorKey(fullPath) {
    return fullPath ? 'file://' + leadingSep(fullPath) + fullPath : '';
}
exports.bscGetLocalAssetLocatorKey = bscGetLocalAssetLocatorKey;
function bscGetBsnAssetLocatorKey(bsnId, assetType, name, path) {
    if (bsnId > 0) {
        return 'bsn://' + assetType + '/' + bsnId;
    }
    else if (bsnId < 0 && name) {
        var key = 'bsn://' + name;
        if (path) {
            key = key + leadingSep(path, AssetLocation.Bsn) + path;
        }
        return key;
    }
    return '';
}
exports.bscGetBsnAssetLocatorKey = bscGetBsnAssetLocatorKey;
var NullAssetBaseName = '__null__';
function bscGetNullAssetItem(assetType, assetLocation, mediaType) {
    if (assetLocation === void 0) { assetLocation = AssetLocation.Local; }
    var nullAssetItem = {
        id: exports.BsAssetIdNone,
        name: NullAssetBaseName + assetType,
        path: '',
        location: assetLocation,
        assetType: assetType,
        networkId: -1,
        scope: '',
        locator: '',
    };
    if (assetType === AssetType.Content && mediaType) {
        nullAssetItem.name = NullAssetBaseName + mediaType;
        nullAssetItem.mediaType = mediaType;
    }
    return nullAssetItem;
}
exports.bscGetNullAssetItem = bscGetNullAssetItem;
function bscIsNullAssetItem(assetItem) {
    return bscIsAssetItem(assetItem)
        && assetItem.name.substr(0, NullAssetBaseName.length) === NullAssetBaseName
        && assetItem.networkId === -1;
}
exports.bscIsNullAssetItem = bscIsNullAssetItem;
var DefaultAssetBaseName = '__default__';
function bscGetDefaultAssetItem(assetType, assetLocation, mediaType, name, path, scope) {
    if (assetLocation === void 0) { assetLocation = AssetLocation.Local; }
    var defaultAssetItem = {
        id: exports.BsAssetIdNone,
        name: DefaultAssetBaseName + assetType,
        path: path ? path : '',
        location: assetLocation,
        assetType: assetType,
        networkId: -1,
        scope: scope ? scope : '',
        locator: '',
    };
    if (assetType === AssetType.Content && mediaType) {
        defaultAssetItem.name = DefaultAssetBaseName + mediaType;
        defaultAssetItem.mediaType = mediaType;
    }
    if (name) {
        defaultAssetItem.name = defaultAssetItem.name + '_' + name;
    }
    defaultAssetItem.locator = bscGenerateAssetLocatorKey(defaultAssetItem);
    return defaultAssetItem;
}
exports.bscGetDefaultAssetItem = bscGetDefaultAssetItem;
function bscIsDefaultAssetItem(assetItem) {
    return bscIsAssetItem(assetItem)
        && assetItem.name.substr(0, DefaultAssetBaseName.length) === DefaultAssetBaseName
        && assetItem.networkId === -1;
}
exports.bscIsDefaultAssetItem = bscIsDefaultAssetItem;
exports.imageFileSuffixes = new Set(['jpg', 'jpeg', 'png', 'bmp']);
exports.videoFileSuffixes = new Set(['mov', 'mp4', 'mpg', 'ts', 'vob', 'wmv', 'm2ts', 'mkv']);
exports.audioFileSuffixes = new Set(['mp3', 'wav', 'ogg', 'flac', 'm4a', 'aac']);
exports.textFileSuffixes = new Set(['txt']);
function bscGetFileExt(pathOrFileName) {
    var result = pathOrFileName.match(/\.([A-Z0-9]+)$/i);
    return result ? result[1].toLowerCase() : '';
}
function bscGetFileMediaType(pathOrFileName) {
    if (pathOrFileName) {
        var ext = bscGetFileExt(pathOrFileName);
        if (ext) {
            if (exports.imageFileSuffixes.has(ext)) {
                return metadata_1.MediaType.Image;
            }
            else if (exports.videoFileSuffixes.has(ext)) {
                return metadata_1.MediaType.Video;
            }
            else if (exports.audioFileSuffixes.has(ext)) {
                return metadata_1.MediaType.Audio;
            }
            else if (exports.textFileSuffixes.has(ext)) {
                return metadata_1.MediaType.Text;
            }
            else if (exports.fontFileSuffixes.has(ext)) {
                return metadata_1.MediaType.Font;
            }
            else if (exports.styleSheetFileSuffixes.has(ext)) {
                return metadata_1.MediaType.Css;
            }
        }
    }
    return metadata_1.MediaType.Auxiliary;
}
exports.bscGetFileMediaType = bscGetFileMediaType;
function bscIsMediaTypePlayable(mediaType) {
    return !isNil(mediaType) && metadata_1.PlayableMediaTypes.has(mediaType);
}
exports.bscIsMediaTypePlayable = bscIsMediaTypePlayable;
function bscIsAssetItemPlayableContent(assetItem) {
    return assetItem.assetType === AssetType.Content && bscIsMediaTypePlayable(assetItem.mediaType);
}
exports.bscIsAssetItemPlayableContent = bscIsAssetItemPlayableContent;
function bscStripFileExtension(pathOrFileName) {
    return pathOrFileName.replace(/\.[^/.]+$/, '');
}
exports.bscStripFileExtension = bscStripFileExtension;
exports.projectFileSuffixes = new Set(['bpfx']);
exports.scheduleFileSuffixes = new Set(['bpsx']);
exports.projectBpfFileSuffixes = new Set(['bpf']);
exports.htmlSiteFileSuffixes = new Set(['html', 'htm', 'js']);
exports.fontFileSuffixes = new Set(['ttf', 'otf']);
exports.styleSheetFileSuffixes = new Set(['css']);
exports.BsAllFileBasedAssetTypes = [
    AssetType.Content, AssetType.Project, AssetType.ProjectBpf, AssetType.Schedule,
    AssetType.HtmlSite, AssetType.BrightScript,
];
Object.freeze(exports.BsAllFileBasedAssetTypes);
function bscGetBscFileTypeInfo(pathOrFileName) {
    var typeInfo = {
        assetType: AssetType.Content,
        mediaType: bscGetFileMediaType(pathOrFileName),
    };
    if (typeInfo.mediaType === metadata_1.MediaType.Auxiliary) {
        var ext = bscGetFileExt(pathOrFileName);
        if (ext === 'bpfx') {
            typeInfo.assetType = AssetType.Project;
        }
        else if (ext === 'bpf') {
            typeInfo.assetType = AssetType.ProjectBpf;
        }
        else if (ext === 'bpsx') {
            typeInfo.assetType = AssetType.Schedule;
        }
        else if (exports.htmlSiteFileSuffixes.has(ext)) {
            typeInfo.assetType = AssetType.HtmlSite;
        }
        else if (ext === 'brs') {
            typeInfo.assetType = AssetType.BrightScript;
        }
        else {
            typeInfo.assetType = AssetType.Content;
        }
    }
    return typeInfo;
}
exports.bscGetBscFileTypeInfo = bscGetBscFileTypeInfo;


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ProbeContentResolutionType = (function () {
    function ProbeContentResolutionType() {
    }
    ProbeContentResolutionType.NA = 'N/A';
    ProbeContentResolutionType.FK = '4K';
    ProbeContentResolutionType.HD = 'HD';
    ProbeContentResolutionType.SD = 'SD';
    ProbeContentResolutionType.CIF = 'CIF';
    ProbeContentResolutionType.QCIF = 'QCIF';
    return ProbeContentResolutionType;
}());
exports.ProbeContentResolutionType = ProbeContentResolutionType;
Object.freeze(ProbeContentResolutionType);
var DecoderName = (function () {
    function DecoderName() {
    }
    DecoderName.HD1 = 'HD1';
    DecoderName.HD2 = 'HD2';
    DecoderName.FK = '4K';
    DecoderName.FK2 = '4K2';
    return DecoderName;
}());
exports.DecoderName = DecoderName;
Object.freeze(DecoderName);
var ImagePlayableStatus = (function () {
    function ImagePlayableStatus() {
    }
    ImagePlayableStatus.playable = 'playable';
    ImagePlayableStatus.playableSeamlessly = 'playableSeamlessly';
    ImagePlayableStatus.noMedia = 'noMedia';
    ImagePlayableStatus.imageSizeExceeded = 'imageSizeExceeded';
    ImagePlayableStatus.imageSizeUnknown = 'imageSizeUnknown';
    ImagePlayableStatus.imageIsCmyk = 'imageIsCmyk';
    return ImagePlayableStatus;
}());
exports.ImagePlayableStatus = ImagePlayableStatus;
Object.freeze(ImagePlayableStatus);
var ProbePlayableStatus = (function () {
    function ProbePlayableStatus() {
    }
    ProbePlayableStatus.cpPlayable = 0;
    ProbePlayableStatus.cpPlayableSeamlessly = 1;
    ProbePlayableStatus.cpPlayableMax = 99;
    ProbePlayableStatus.cpProbString = 100;
    ProbePlayableStatus.cpContainer = 200;
    ProbePlayableStatus.cpNoMedia = 300;
    ProbePlayableStatus.cpAudioSampleRate = 400;
    ProbePlayableStatus.cpAudioType = 401;
    ProbePlayableStatus.cpAudioChannels = 402;
    ProbePlayableStatus.cpVideoType = 501;
    ProbePlayableStatus.cpVideoResolution = 502;
    ProbePlayableStatus.cpVideoH265 = 503;
    return ProbePlayableStatus;
}());
exports.ProbePlayableStatus = ProbePlayableStatus;
Object.freeze(ProbePlayableStatus);


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(20);
__webpack_require__(19);
__export(__webpack_require__(0));
__export(__webpack_require__(1));
__export(__webpack_require__(3));
__export(__webpack_require__(12));
__export(__webpack_require__(17));
__export(__webpack_require__(18));
__export(__webpack_require__(14));
__export(__webpack_require__(4));
__export(__webpack_require__(15));
__export(__webpack_require__(5));
__export(__webpack_require__(13));
__export(__webpack_require__(8));
__export(__webpack_require__(7));
__export(__webpack_require__(11));
__export(__webpack_require__(9));
__export(__webpack_require__(10));
__export(__webpack_require__(16));


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var BDeploySortType = (function () {
    function BDeploySortType() {
    }
    BDeploySortType.ASC = 1;
    BDeploySortType.DESC = -1;
    return BDeploySortType;
}());
exports.BDeploySortType = BDeploySortType;
Object.freeze(BDeploySortType);


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var isNil = __webpack_require__(2);
var BsnPresentationType = (function () {
    function BsnPresentationType() {
    }
    BsnPresentationType.Simple = 'Simple';
    BsnPresentationType.Complete = 'Complete';
    return BsnPresentationType;
}());
exports.BsnPresentationType = BsnPresentationType;
var BsnPresentationStatus = (function () {
    function BsnPresentationStatus() {
    }
    BsnPresentationStatus.Draft = 'Draft';
    BsnPresentationStatus.Published = 'Published';
    return BsnPresentationStatus;
}());
exports.BsnPresentationStatus = BsnPresentationStatus;
var BsnPresentationReferenceType = (function () {
    function BsnPresentationReferenceType() {
    }
    BsnPresentationReferenceType.Presentation = 'Presentation';
    BsnPresentationReferenceType.BrightWallPresentation = 'BrightWallPresentation';
    return BsnPresentationReferenceType;
}());
exports.BsnPresentationReferenceType = BsnPresentationReferenceType;
var BsnObjectPermissionType = (function () {
    function BsnObjectPermissionType() {
    }
    BsnObjectPermissionType.Role = 'Role';
    BsnObjectPermissionType.User = 'User';
    return BsnObjectPermissionType;
}());
exports.BsnObjectPermissionType = BsnObjectPermissionType;
function bscCreateBsnObjectRolePermission(roleName, operationUid, isAllowed) {
    return {
        type: 'Role',
        roleName: roleName,
        operationUid: operationUid,
        isAllowed: isAllowed,
    };
}
exports.bscCreateBsnObjectRolePermission = bscCreateBsnObjectRolePermission;
function bscIsBsnObjectRolePermission(permission) {
    return !isNil(permission) && permission.type === BsnObjectPermissionType.Role;
}
exports.bscIsBsnObjectRolePermission = bscIsBsnObjectRolePermission;
function bscCreateBsnObjectUserPermission(login, operationUid, isAllowed) {
    return {
        type: 'User',
        login: login,
        operationUid: operationUid,
        isAllowed: isAllowed,
    };
}
exports.bscCreateBsnObjectUserPermission = bscCreateBsnObjectUserPermission;
function bscIsBsnObjectUserPermission(permission) {
    return !isNil(permission) && permission.type === BsnObjectPermissionType.User;
}
exports.bscIsBsnObjectUserPermission = bscIsBsnObjectUserPermission;
var BsnFilterType = (function () {
    function BsnFilterType() {
    }
    BsnFilterType.string = 'string';
    BsnFilterType.enum = 'enum';
    BsnFilterType.number = 'number';
    BsnFilterType.date = 'date';
    return BsnFilterType;
}());
exports.BsnFilterType = BsnFilterType;
var BsnStringFilterOperator = (function () {
    function BsnStringFilterOperator() {
    }
    BsnStringFilterOperator.Is = 'IS';
    BsnStringFilterOperator.IsNot = 'IS NOT';
    BsnStringFilterOperator.BeginsWith = 'BEGINS WITH';
    BsnStringFilterOperator.EndsWith = 'ENDS WITH';
    BsnStringFilterOperator.Contains = 'CONTAINS';
    BsnStringFilterOperator.ContainsAll = 'CONTAINS ALL';
    BsnStringFilterOperator.ContainsAny = 'CONTAINS ANY';
    BsnStringFilterOperator.IsIn = 'IS IN';
    BsnStringFilterOperator.IsNotIn = 'IS NOT IN';
    return BsnStringFilterOperator;
}());
exports.BsnStringFilterOperator = BsnStringFilterOperator;
var BsnNumberFilterOperator = (function () {
    function BsnNumberFilterOperator() {
    }
    BsnNumberFilterOperator.Is = 'IS';
    BsnNumberFilterOperator.IsNot = 'IS NOT';
    BsnNumberFilterOperator.IsGreaterThan = 'IS GREATER THAN';
    BsnNumberFilterOperator.IsLessThan = 'IS LESS THAN';
    BsnNumberFilterOperator.IsInTheRange = 'IS IN THE RANGE';
    BsnNumberFilterOperator.IsNotInTheRange = 'IS NOT IN THE RANGE';
    BsnNumberFilterOperator.IsIn = 'IS IN';
    BsnNumberFilterOperator.IsNotIn = 'IS NOT IN';
    return BsnNumberFilterOperator;
}());
exports.BsnNumberFilterOperator = BsnNumberFilterOperator;
var BsnFilterCombineType = (function () {
    function BsnFilterCombineType() {
    }
    BsnFilterCombineType.All = 'AND';
    BsnFilterCombineType.Any = 'OR';
    return BsnFilterCombineType;
}());
exports.BsnFilterCombineType = BsnFilterCombineType;
function bscCreateFilterComponent(type, property, operator, values) {
    var params;
    if (Array.isArray(values)) {
        params = values;
    }
    else {
        params = type === BsnFilterType.string ? [values] : [values];
    }
    return { type: type, property: property, operator: operator, params: params };
}
exports.bscCreateFilterComponent = bscCreateFilterComponent;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DeviceNetworkingConfiguration = (function () {
    function DeviceNetworkingConfiguration() {
    }
    DeviceNetworkingConfiguration.Standalone = 'standalone';
    DeviceNetworkingConfiguration.LocalFileNetworking = 'lfn';
    DeviceNetworkingConfiguration.LegacyLocalFileNetworking = 'legacyLfn';
    DeviceNetworkingConfiguration.SimpleFileNetworking = 'sfn';
    DeviceNetworkingConfiguration.BrightSignNetworking = 'bsn';
    DeviceNetworkingConfiguration.LocalToBrightSignNetworking = 'localToBsn';
    return DeviceNetworkingConfiguration;
}());
exports.DeviceNetworkingConfiguration = DeviceNetworkingConfiguration;
Object.freeze(DeviceNetworkingConfiguration);
var UnitNamingMethod = (function () {
    function UnitNamingMethod() {
    }
    UnitNamingMethod.UnitNameOnly = 'unitNameOnly';
    UnitNamingMethod.AppendUnitId = 'appendUnitIDToUnitName';
    return UnitNamingMethod;
}());
exports.UnitNamingMethod = UnitNamingMethod;
Object.freeze(UnitNamingMethod);
var TimeZone = (function () {
    function TimeZone() {
    }
    TimeZone.EST = 'EST';
    TimeZone.PST = 'PST';
    TimeZone.CST = 'CST';
    return TimeZone;
}());
exports.TimeZone = TimeZone;
Object.freeze(TimeZone);
var BsDsLwsConfiguration = (function () {
    function BsDsLwsConfiguration() {
    }
    BsDsLwsConfiguration.Content = 'content';
    BsDsLwsConfiguration.Status = 'status';
    BsDsLwsConfiguration.None = 'none';
    return BsDsLwsConfiguration;
}());
exports.BsDsLwsConfiguration = BsDsLwsConfiguration;
Object.freeze(BsDsLwsConfiguration);
var DeviceSetupProperties = (function () {
    function DeviceSetupProperties() {
    }
    DeviceSetupProperties.DeviceName = 'deviceName';
    DeviceSetupProperties.DeviceDescription = 'deviceDescription';
    DeviceSetupProperties.UnitNamingMethod = 'unitNamingMethod';
    DeviceSetupProperties.TimeZone = 'timeZone';
    DeviceSetupProperties.IdleScreenColor = 'idleScreenColor';
    DeviceSetupProperties.SetupType = 'setupType';
    DeviceSetupProperties.BsnDeviceRegistrationTokenEntity = 'bsnDeviceRegistrationTokenEntity';
    DeviceSetupProperties.BDeploy = 'bDeploy';
    DeviceSetupProperties.BsnGroupName = 'bsnGroupName';
    DeviceSetupProperties.TimeBetweenContentChecks = 'timeBetweenNetConnects';
    DeviceSetupProperties.TimeBetweenHeartbeats = 'timeBetweenHeartbeats';
    DeviceSetupProperties.SfnWebFolderUrl = 'sfnWebFolderUrl';
    DeviceSetupProperties.SfnUserName = 'sfnUserName';
    DeviceSetupProperties.SfnPassword = 'sfnPassword';
    DeviceSetupProperties.SfnEnableBasicAuthentication = 'sfnEnableBasicAuthentication';
    DeviceSetupProperties.TimeServer = 'timeServer';
    DeviceSetupProperties.UseWireless = 'useWireless';
    DeviceSetupProperties.SSID = 'ssid';
    DeviceSetupProperties.Passphrase = 'passphrase';
    DeviceSetupProperties.RemoteDwsEnabled = 'remoteDwsEnabled';
    DeviceSetupProperties.DwsEnabled = 'dwsEnabled';
    DeviceSetupProperties.DwsPassword = 'dwsPassword';
    DeviceSetupProperties.LwsEnabled = 'lwsEnabled';
    DeviceSetupProperties.LwsUserName = 'lwsUserName';
    DeviceSetupProperties.LwsPassword = 'lwsPassword';
    DeviceSetupProperties.LwsEnableUpdateNotifications = 'lwsEnableUpdateNotifications';
    DeviceSetupProperties.LwsConfig = 'lwsConfig';
    DeviceSetupProperties.BsnCloudEnabled = 'bsnCloudEnabled';
    DeviceSetupProperties.PlaybackLoggingEnabled = 'playbackLoggingEnabled';
    DeviceSetupProperties.EventLoggingEnabled = 'eventLoggingEnabled';
    DeviceSetupProperties.DiagnosticLoggingEnabled = 'diagnosticLoggingEnabled';
    DeviceSetupProperties.StateLoggingEnabled = 'stateLoggingEnabled';
    DeviceSetupProperties.VariableLoggingEnabled = 'variableLoggingEnabled';
    DeviceSetupProperties.UploadLogFilesAtBoot = 'uploadLogFilesAtBoot';
    DeviceSetupProperties.UploadLogFilesAtSpecificTime = 'uploadLogFilesAtSpecificTime';
    DeviceSetupProperties.UploadLogFilesTime = 'uploadLogFilesTime';
    DeviceSetupProperties.LogHandlerUrl = 'logHandlerUrl';
    DeviceSetupProperties.EnableRemoteSnapshot = 'enableRemoteSnapshot';
    DeviceSetupProperties.RemoteSnapshotInterval = 'remoteSnapshotInterval';
    DeviceSetupProperties.RemoteSnapshotMaxImages = 'remoteSnapshotMaxImages';
    DeviceSetupProperties.RemoteSnapshotJpegQualityLevel = 'remoteSnapshotJpegQualityLevel';
    DeviceSetupProperties.RemoteSnapshotScreenOrientation = 'remoteSnapshotScreenOrientation';
    DeviceSetupProperties.RemoteSnapshotHandlerUrl = 'remoteSnapshotHandlerUrl';
    DeviceSetupProperties.EnableSerialDebugging = 'enableSerialDebugging';
    DeviceSetupProperties.EnableSystemLogDebugging = 'enableSystemLogDebugging';
    DeviceSetupProperties.ContentDataTypeEnabledWired = 'contentDataTypeEnabledWired';
    DeviceSetupProperties.TextFeedsDataTypeEnabledWired = 'textFeedsDataTypeEnabledWired';
    DeviceSetupProperties.HealthDataTypeEnabledWired = 'healthDataTypeEnabledWired';
    DeviceSetupProperties.MediaFeedsDataTypeEnabledWired = 'mediaFeedsDataTypeEnabledWired';
    DeviceSetupProperties.LogUploadsXfersEnabledWired = 'logUploadsXfersEnabledWired';
    DeviceSetupProperties.ContentDataTypeEnabledWireless = 'contentDataTypeEnabledWireless';
    DeviceSetupProperties.TextFeedsDataTypeEnabledWireless = 'textFeedsDataTypeEnabledWireless';
    DeviceSetupProperties.HealthDataTypeEnabledWireless = 'healthDataTypeEnabledWireless';
    DeviceSetupProperties.MediaFeedsDataTypeEnabledWireless = 'mediaFeedsDataTypeEnabledWireless';
    DeviceSetupProperties.LogUploadsXfersEnabledWireless = 'logUploadsXfersEnabledWireless';
    DeviceSetupProperties.UseDhcp = 'useDHCP';
    DeviceSetupProperties.StaticIpAddress = 'staticIPAddress';
    DeviceSetupProperties.SubnetMask = 'subnetMask';
    DeviceSetupProperties.Gateway = 'gateway';
    DeviceSetupProperties.Dns1 = 'dns1';
    DeviceSetupProperties.Dns2 = 'dns2';
    DeviceSetupProperties.Dns3 = 'dns3';
    DeviceSetupProperties.RateLimitModeOutsideWindow = 'rateLimitModeOutsideWindow';
    DeviceSetupProperties.RateLimitRateOutsideWindow = 'rateLimitRateOutsideWindow';
    DeviceSetupProperties.RateLimitModeInWindow = 'rateLimitModeInWindow';
    DeviceSetupProperties.RateLimitRateInWindow = 'rateLimitRateInWindow';
    DeviceSetupProperties.RateLimitModeInitialDownloads = 'rateLimitModeInitialDownloads';
    DeviceSetupProperties.RateLimitRateInitialDownloads = 'rateLimitRateInitialDownloads';
    DeviceSetupProperties.UseDhcp2 = 'useDHCP_2';
    DeviceSetupProperties.StaticIpAddress2 = 'staticIPAddress_2';
    DeviceSetupProperties.SubnetMask2 = 'subnetMask_2';
    DeviceSetupProperties.Gateway2 = 'gateway_2';
    DeviceSetupProperties.Dns12 = 'dns1_2';
    DeviceSetupProperties.Dns22 = 'dns2_2';
    DeviceSetupProperties.Dns32 = 'dns3_2';
    DeviceSetupProperties.RateLimitModeOutsideWindow2 = 'rateLimitModeOutsideWindow_2';
    DeviceSetupProperties.RateLimitRateOutsideWindow2 = 'rateLimitRateOutsideWindow_2';
    DeviceSetupProperties.RateLimitModeInWindow2 = 'rateLimitModeInWindow_2';
    DeviceSetupProperties.RateLimitRateInWindow2 = 'rateLimitRateInWindow_2';
    DeviceSetupProperties.RateLimitModeInitialDownloads2 = 'rateLimitModeInitialDownloads_2';
    DeviceSetupProperties.RateLimitRateInitialDownloads2 = 'rateLimitRateInitialDownloads_2';
    DeviceSetupProperties.NetworkConnectionPriority = 'networkConnectionPriority';
    DeviceSetupProperties.SpecifyHostname = 'specifyHostname';
    DeviceSetupProperties.Hostname = 'hostname';
    DeviceSetupProperties.UseProxy = 'useProxy';
    DeviceSetupProperties.ProxyAddress = 'proxyAddress';
    DeviceSetupProperties.ProxyPort = 'proxyPort';
    DeviceSetupProperties.NetworkHosts = 'networkHosts';
    DeviceSetupProperties.NetworkDiagnosticsEnabled = 'networkDiagnosticsEnabled';
    DeviceSetupProperties.TestEthernetEnabled = 'testEthernetEnabled';
    DeviceSetupProperties.TestWirelessEnabled = 'testWirelessEnabled';
    DeviceSetupProperties.TestInternetEnabled = 'testInternetEnabled';
    DeviceSetupProperties.UseCustomSplashScreen = 'useCustomSplashScreen';
    DeviceSetupProperties.ContentDownloadsRestricted = 'contentDownloadsRestricted';
    DeviceSetupProperties.ContentDownloadRangeStart = 'contentDownloadRangeStart';
    DeviceSetupProperties.ContentDownloadRangeEnd = 'contentDownloadRangeEnd';
    DeviceSetupProperties.HeartbeatsRestricted = 'heartbeatsRestricted';
    DeviceSetupProperties.HeartbeatsRangeStart = 'heartbeatsRangeStart';
    DeviceSetupProperties.HeartbeatsRangeEnd = 'heartbeatsRangeEnd';
    DeviceSetupProperties.BrightWallNameKey = 'BrightWallName';
    DeviceSetupProperties.BrightWallScreenNumberKey = 'BrightWallScreenNumber';
    DeviceSetupProperties.UsbUpdatePassword = 'usbUpdatePassword';
    return DeviceSetupProperties;
}());
exports.DeviceSetupProperties = DeviceSetupProperties;
Object.freeze(DeviceSetupProperties);


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var isString = __webpack_require__(22);
var isNil = __webpack_require__(2);
var isNaN = __webpack_require__(21);
var convertFromBase31 = function (codePoint) {
    codePoint = codePoint % 31;
    if (codePoint < 10) {
        return String.fromCharCode(codePoint + 48);
    }
    if (codePoint === 10) {
        return 'A';
    }
    if (codePoint >= 11 && codePoint <= 16) {
        return String.fromCharCode(codePoint + 67 - 11);
    }
    if (codePoint >= 17 && codePoint <= 21) {
        return String.fromCharCode(codePoint + 74 - 17);
    }
    if (codePoint === 22) {
        return 'P';
    }
    if (codePoint >= 23 && codePoint <= 830) {
        return String.fromCharCode(codePoint + 82 - 23);
    }
    return null;
};
var convertToBase31 = function (infoUC, index) {
    if (isNil(index)) {
        index = 0;
    }
    var charVal = infoUC.charCodeAt(index);
    if (charVal >= 48 && charVal <= 57) {
        return charVal - 48;
    }
    if (charVal === 65) {
        return 10;
    }
    if (charVal >= 67 && charVal <= 72) {
        return charVal - 67 + 11;
    }
    if (charVal >= 74 && charVal <= 78) {
        return charVal - 74 + 17;
    }
    if (charVal === 80) {
        return 22;
    }
    if (charVal >= 82 && charVal <= 89) {
        return charVal - 82 + 23;
    }
    return NaN;
};
var getCheckChar = function (infoUC) {
    var i;
    var x;
    var valArray = [];
    for (i = 0; i < 12; i++) {
        x = convertToBase31(infoUC, i);
        if (isNaN(x)) {
            return null;
        }
        if (i !== 5) {
            valArray.push(x);
        }
    }
    for (i = 0; i < 11; i += 2) {
        x = valArray[i] * 2;
        if (x > 30) {
            x = (x % 31) + 1;
        }
        valArray[i] = x;
    }
    var sum = valArray.reduce(function (previousValue, currentValue) {
        return currentValue + previousValue;
    });
    return convertFromBase31(31 - sum % 31);
};
function bscValidateSerialNumber(serial) {
    if (!isString(serial)) {
        return false;
    }
    if (serial.length !== 12) {
        return false;
    }
    var upperCaseInfo = serial.toUpperCase();
    var checkChar = getCheckChar(upperCaseInfo);
    if (checkChar !== upperCaseInfo.charAt(5)) {
        return false;
    }
    return true;
}
exports.bscValidateSerialNumber = bscValidateSerialNumber;


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var isNil = __webpack_require__(2);
var FirmwareUpdateSource = (function () {
    function FirmwareUpdateSource() {
    }
    FirmwareUpdateSource.Production = 'production';
    FirmwareUpdateSource.Beta = 'beta';
    FirmwareUpdateSource.MinimumCompatible = 'compatible';
    FirmwareUpdateSource.SpecificFile = 'specific';
    FirmwareUpdateSource.SpecificUrl = 'specificUrl';
    FirmwareUpdateSource.None = 'none';
    FirmwareUpdateSource.Existing = 'existing';
    return FirmwareUpdateSource;
}());
exports.FirmwareUpdateSource = FirmwareUpdateSource;
Object.freeze(FirmwareUpdateSource);
var FirmwareUpdateType = (function () {
    function FirmwareUpdateType() {
    }
    FirmwareUpdateType.Standard = 'standard';
    FirmwareUpdateType.Different = 'different';
    FirmwareUpdateType.Newer = 'newer';
    FirmwareUpdateType.Save = 'save';
    return FirmwareUpdateType;
}());
exports.FirmwareUpdateType = FirmwareUpdateType;
Object.freeze(FirmwareUpdateType);
function bscGetFirmwareUpdateTargetFileName(firmWare, firmwareUpdateType) {
    switch (firmwareUpdateType) {
        case FirmwareUpdateType.Different:
            return firmWare.firmwareUpdateDifferentTargetFileName;
        case FirmwareUpdateType.Newer:
            return firmWare.firmwareUpdateNewerTargetFileName;
        case FirmwareUpdateType.Save:
            return firmWare.firmwareUpdateSaveTargetFileName;
        case FirmwareUpdateType.Standard:
        default:
            return firmWare.firmwareUpdateStandardTargetFileName;
    }
}
exports.bscGetFirmwareUpdateTargetFileName = bscGetFirmwareUpdateTargetFileName;
function bscGetFirmwareFileName(firmWare, firmwareUpdateType) {
    switch (firmwareUpdateType) {
        case FirmwareUpdateType.Different:
            return firmWare.firmwareUpdateDifferentTargetFileName;
        case FirmwareUpdateType.Newer:
            return firmWare.firmwareUpdateNewerTargetFileName;
        case FirmwareUpdateType.Save:
            return firmWare.firmwareUpdateSaveTargetFileName;
        case FirmwareUpdateType.Standard:
        default:
            return firmWare.firmwareUpdateStandardTargetFileName;
    }
}
exports.bscGetFirmwareFileName = bscGetFirmwareFileName;
function bscGetFirmwareSourceUrl(firmWare) {
    switch (firmWare.firmwareUpdateSource) {
        case FirmwareUpdateSource.Production:
        default: {
            return firmWare.productionReleaseURL;
        }
        case FirmwareUpdateSource.Beta: {
            return firmWare.betaReleaseURL;
        }
        case FirmwareUpdateSource.SpecificFile: {
            return firmWare.firmwareUpdateSourceFilePath;
        }
        case FirmwareUpdateSource.MinimumCompatible: {
            return firmWare.compatibleReleaseURL;
        }
        case FirmwareUpdateSource.SpecificUrl: {
            return firmWare.firmwareUpdateSourceUrl;
        }
    }
}
exports.bscGetFirmwareSourceUrl = bscGetFirmwareSourceUrl;
function bscCreatePublishFirmware(props) {
    if (!isNil(props)) {
        return {
            firmwareUpdateSource: !isNil(props.firmwareUpdateSource) ? props.firmwareUpdateSource : null,
            firmwareUpdateSourceFilePath: !isNil(props.firmwareUpdateSourceFilePath) ? props.firmwareUpdateSourceFilePath : '',
            firmwareUpdateSourceUrl: !isNil(props.firmwareUpdateSourceUrl) ? props.firmwareUpdateSourceUrl : '',
            firmwareUpdateStandardTargetFileName: !isNil(props.firmwareUpdateStandardTargetFileName) ? props.firmwareUpdateStandardTargetFileName : '',
            firmwareUpdateDifferentTargetFileName: !isNil(props.firmwareUpdateDifferentTargetFileName) ? props.firmwareUpdateDifferentTargetFileName : '',
            firmwareUpdateNewerTargetFileName: !isNil(props.firmwareUpdateNewerTargetFileName) ? props.firmwareUpdateNewerTargetFileName : '',
            firmwareUpdateSaveTargetFileName: !isNil(props.firmwareUpdateSaveTargetFileName) ? props.firmwareUpdateSaveTargetFileName : '',
            firmwareUpdateVersion: !isNil(props.firmwareUpdateVersion) ? props.firmwareUpdateVersion : '',
            productionReleaseURL: !isNil(props.productionReleaseURL) ? props.productionReleaseURL : '',
            betaReleaseURL: !isNil(props.betaReleaseURL) ? props.betaReleaseURL : '',
            compatibleReleaseURL: !isNil(props.compatibleReleaseURL) ? props.compatibleReleaseURL : '',
            productionVersion: !isNil(props.productionVersion) ? props.productionVersion : '',
            betaVersion: !isNil(props.betaVersion) ? props.betaVersion : '',
            compatibleVersion: !isNil(props.compatibleVersion) ? props.compatibleVersion : '',
            productionVersionNumber: !isNil(props.productionVersionNumber) ? props.productionVersionNumber : -1,
            betaVersionNumber: !isNil(props.betaVersionNumber) ? props.betaVersionNumber : -1,
            compatibleVersionNumber: !isNil(props.compatibleVersionNumber) ? props.compatibleVersionNumber : -1,
            productionReleaseSHA1: !isNil(props.productionReleaseSHA1) ? props.productionReleaseSHA1 : '',
            betaReleaseSHA1: !isNil(props.betaReleaseSHA1) ? props.betaReleaseSHA1 : '',
            compatibleReleaseSHA1: !isNil(props.compatibleReleaseSHA1) ? props.compatibleReleaseSHA1 : '',
            productionReleaseFileLength: !isNil(props.productionReleaseFileLength) ? props.productionReleaseFileLength : -1,
            betaReleaseFileLength: !isNil(props.betaReleaseFileLength) ? props.betaReleaseFileLength : -1,
            compatibleReleaseFileLength: !isNil(props.compatibleReleaseFileLength) ? props.compatibleReleaseFileLength : -1,
            existingFWContentID: !isNil(props.existingFWContentID) ? props.existingFWContentID : '',
        };
    }
    else {
        return {
            firmwareUpdateSource: null,
            firmwareUpdateSourceFilePath: '',
            firmwareUpdateSourceUrl: '',
            firmwareUpdateStandardTargetFileName: '',
            firmwareUpdateDifferentTargetFileName: '',
            firmwareUpdateNewerTargetFileName: '',
            firmwareUpdateSaveTargetFileName: '',
            firmwareUpdateVersion: '',
            productionReleaseURL: '',
            betaReleaseURL: '',
            compatibleReleaseURL: '',
            productionVersion: '',
            betaVersion: '',
            compatibleVersion: '',
            productionVersionNumber: -1,
            betaVersionNumber: -1,
            compatibleVersionNumber: -1,
            productionReleaseSHA1: '',
            betaReleaseSHA1: '',
            compatibleReleaseSHA1: '',
            productionReleaseFileLength: -1,
            betaReleaseFileLength: -1,
            compatibleReleaseFileLength: -1,
            existingFWContentID: '',
        };
    }
}
exports.bscCreatePublishFirmware = bscCreatePublishFirmware;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var playerModel_1 = __webpack_require__(1);
var probe_1 = __webpack_require__(5);
function bscGetPlayerCapabilities(model) {
    switch (model) {
        case playerModel_1.PlayerModel.XT1144:
        case playerModel_1.PlayerModel.XT244:
        case playerModel_1.PlayerModel.XT1143:
        case playerModel_1.PlayerModel.XT243:
            return {
                videoDecoderCount: 2,
                videoDecoder4kCount: 2,
                maxImageSize: { width: 4096, height: 2160 },
                maxVideoSize: { width: 4096, height: 2160 },
                maxVideoContentResolution: probe_1.ProbeContentResolutionType.FK,
            };
        case playerModel_1.PlayerModel.XT1043:
            return {
                videoDecoderCount: 2,
                videoDecoder4kCount: 1,
                maxImageSize: { width: 2048, height: 1080 },
                maxVideoSize: { width: 4096, height: 2160 },
                maxVideoContentResolution: probe_1.ProbeContentResolutionType.FK,
            };
        case playerModel_1.PlayerModel.FK1142:
        case playerModel_1.PlayerModel.FK1042:
        case playerModel_1.PlayerModel.FK242:
            return {
                videoDecoderCount: 2,
                videoDecoder4kCount: 1,
                maxImageSize: { width: 2048, height: 1080 },
                maxVideoSize: { width: 4096, height: 2160 },
                maxVideoContentResolution: probe_1.ProbeContentResolutionType.FK,
            };
        case playerModel_1.PlayerModel.XD1034:
        case playerModel_1.PlayerModel.XD234:
        case playerModel_1.PlayerModel.XD1033:
        case playerModel_1.PlayerModel.XD233:
        case playerModel_1.PlayerModel.HD1024:
        case playerModel_1.PlayerModel.HD224:
        case playerModel_1.PlayerModel.HS144:
            return {
                videoDecoderCount: 1,
                videoDecoder4kCount: 1,
                maxImageSize: { width: 2048, height: 1080 },
                maxVideoSize: { width: 4096, height: 2160 },
                maxVideoContentResolution: probe_1.ProbeContentResolutionType.FK,
            };
        case playerModel_1.PlayerModel.LS424:
        case playerModel_1.PlayerModel.HS124:
        case playerModel_1.PlayerModel.HD1023:
        case playerModel_1.PlayerModel.HD223:
        case playerModel_1.PlayerModel.HS123:
        case playerModel_1.PlayerModel.HO523:
        case playerModel_1.PlayerModel.LS423:
        default:
            return {
                videoDecoderCount: 1,
                videoDecoder4kCount: 0,
                maxImageSize: { width: 1920, height: 1080 },
                maxVideoSize: { width: 1920, height: 1200 },
                maxVideoContentResolution: probe_1.ProbeContentResolutionType.HD,
            };
    }
}
exports.bscGetPlayerCapabilities = bscGetPlayerCapabilities;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ScheduleRecurrencePattern = (function () {
    function ScheduleRecurrencePattern() {
    }
    ScheduleRecurrencePattern.AllDays = 'AllDays';
    ScheduleRecurrencePattern.Weekends = 'Weekends';
    ScheduleRecurrencePattern.Weekdays = 'Weekdays';
    ScheduleRecurrencePattern.Custom = 'Custom';
    return ScheduleRecurrencePattern;
}());
exports.ScheduleRecurrencePattern = ScheduleRecurrencePattern;
Object.freeze(ScheduleRecurrencePattern);
var StorageSpaceLimitUnits = (function () {
    function StorageSpaceLimitUnits() {
    }
    StorageSpaceLimitUnits.Percentage = 'Percentage';
    StorageSpaceLimitUnits.Megabyte = 'Megabyte';
    return StorageSpaceLimitUnits;
}());
exports.StorageSpaceLimitUnits = StorageSpaceLimitUnits;
exports.PublishDataKeys = [
    'hD920_970Firmware', 'hD922_972Firmware',
    'hdX10Firmware',
    'hdX20Firmware', 'hdX22Firmware', 'hdX23Firmware',
    'lsX22Firmware', 'lsX23Firmware',
    'hsX23Firmware', 'hoX23Firmware',
    'xdX30Firmware', 'xdX32Firmware', 'xdX33Firmware',
    'xtX43Firmware',
    'xdX34_XTX44Firmware',
    '4KX42Firmware',
    'enableSerialDebugging', 'enableSystemLogDebugging', 'enableStorageSpaceLimit',
    'storageSpaceLimitUnits', 'publishedDataSizeLimit', 'dynamicDataSizeLimit',
    'htmlDataSizeLimit', 'htmlLocalStorageSizeLimit', 'webDatabaseSizeLimit',
];


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var main_1 = __webpack_require__(6);
function bscCreatePercentageRect(x, y, width, height) {
    return { x: x, y: y, width: width, height: height, pct: true };
}
exports.bscCreatePercentageRect = bscCreatePercentageRect;
function bscCreateAbsoluteRect(x, y, width, height) {
    return { x: x, y: y, width: width, height: height, pct: false };
}
exports.bscCreateAbsoluteRect = bscCreateAbsoluteRect;
function bscGetAbsoluteRectForVideoMode(rect, mode) {
    var returnRect = rect;
    if (rect.pct) {
        var modeComponents = main_1.bscParseVideoModeComponents(mode);
        returnRect = bscCreateAbsoluteRect(Math.round(rect.x * modeComponents.width / 100), Math.round(rect.y * modeComponents.height / 100), Math.round(rect.width * modeComponents.width / 100), Math.round(rect.height * modeComponents.height / 100));
    }
    return returnRect;
}
exports.bscGetAbsoluteRectForVideoMode = bscGetAbsoluteRectForVideoMode;
function bscGetPercentageRectForVideoMode(rect, mode) {
    var returnRect = rect;
    if (!rect.pct) {
        var modeComponents = main_1.bscParseVideoModeComponents(mode);
        if (!(modeComponents.width && modeComponents.height)) {
            returnRect = bscCreatePercentageRect(0, 0, 0, 0);
        }
        else {
            returnRect = bscCreatePercentageRect(Math.round(rect.x * 10000 / modeComponents.width) / 100, Math.round(rect.y * 10000 / modeComponents.height) / 100, Math.round(rect.width * 10000 / modeComponents.width) / 100, Math.round(rect.height * 10000 / modeComponents.height) / 100);
        }
    }
    return returnRect;
}
exports.bscGetPercentageRectForVideoMode = bscGetPercentageRectForVideoMode;
exports.BsRectFull = { x: 0, y: 0, width: 100, height: 100, pct: true };
Object.freeze(exports.BsRectFull);


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var BsUploadItemStatus = (function () {
    function BsUploadItemStatus() {
    }
    BsUploadItemStatus.Pending = 'Pending';
    BsUploadItemStatus.Uploading = 'Uploading';
    BsUploadItemStatus.Uploaded = 'Uploaded';
    BsUploadItemStatus.Matched = 'Matched';
    BsUploadItemStatus.Cancelled = 'Cancelled';
    BsUploadItemStatus.Failed = 'Failed';
    return BsUploadItemStatus;
}());
exports.BsUploadItemStatus = BsUploadItemStatus;
Object.freeze(BsUploadItemStatus);
function bscCreateLocalFileBuffer(name, data, type, lastModifiedDate, hash) {
    var obj = {
        name: name, data: data,
        type: type.toLowerCase(),
        lastModifiedDate: lastModifiedDate ? lastModifiedDate : new Date(),
    };
    if (hash) {
        obj.hash = hash;
    }
    return obj;
}
exports.bscCreateLocalFileBuffer = bscCreateLocalFileBuffer;
function bscIsLocalFileBuffer(obj) {
    return obj != null
        && typeof obj === 'object'
        && obj.hasOwnProperty('name') && typeof obj.name === 'string'
        && obj.hasOwnProperty('data') && (obj.data instanceof Uint8Array)
        && obj.hasOwnProperty('type') && typeof obj.name === 'string';
}
exports.bscIsLocalFileBuffer = bscIsLocalFileBuffer;
var mimeTypeExtensionMap = {
    'image/jpeg': 'jpg',
    'image/jpg': 'jpg',
    'image/png': 'png',
    'image/bmp': 'bmp',
    'image/svg+xml': 'svg',
    'video/mp4': 'mp4',
    'video/h264': 'mp4',
    'video/h265': 'mp4',
    'video/quicktime': 'mov',
    'video/mpeg': 'mpg',
    'video/mp2t': 'ts',
    'video/x-ms-vob': 'vob',
    'video/x-ms-wmv': 'wmv',
    'video/x-matroska': 'mkv',
    'audio/mp3': 'mp3',
    'audio/wav': 'wav',
    'audio/x-wav': 'wav',
    'audio/mp4': 'm4a',
    'audio/x-m4a': 'm4a',
    'audio/x-aiff': 'aiff',
    'audio/aac': 'aac',
    'text/plain': 'txt',
    'text/html': 'html',
    'text/xml': 'xml',
    'text/css': 'css',
    'text/javascript': 'js',
    'text/brightscript': 'brs',
    'font/ttf': 'ttf',
    'font/otf': 'otf',
    'application/bpfx': 'bpfx',
    'application/bpf': 'bpf',
};
function bscGetFileExtensionForMimeType(mimeType) {
    var ext = mimeTypeExtensionMap[mimeType];
    return ext ? '.' + ext : null;
}
exports.bscGetFileExtensionForMimeType = bscGetFileExtensionForMimeType;
var extensionMimeTypeMap;
var buildExtMap = function () {
    extensionMimeTypeMap = {};
    Object.keys(mimeTypeExtensionMap).forEach(function (mimeType) {
        var ext = mimeTypeExtensionMap[mimeType];
        if (!extensionMimeTypeMap[ext]) {
            extensionMimeTypeMap[ext] = mimeType;
        }
    });
    extensionMimeTypeMap['htm'] = extensionMimeTypeMap['html'];
};
function bscGetMimeTypeForFileExtension(extension) {
    if (!extensionMimeTypeMap) {
        buildExtMap();
    }
    if (extension.charAt(0) === '.') {
        extension = extension.slice(1);
    }
    var type = extensionMimeTypeMap[extension];
    return type ? type : 'application/octet-stream';
}
exports.bscGetMimeTypeForFileExtension = bscGetMimeTypeForFileExtension;


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function bscReplaceTimeZoneWithUTC(time) {
    return new Date(Date.UTC(time.getFullYear(), time.getMonth(), time.getDate(), time.getHours(), time.getMinutes(), time.getSeconds()));
}
exports.bscReplaceTimeZoneWithUTC = bscReplaceTimeZoneWithUTC;


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var playerModel_1 = __webpack_require__(1);
var playerFeature_1 = __webpack_require__(3);
var metadata_1 = __webpack_require__(0);
var VideoResolution = (function () {
    function VideoResolution() {
    }
    VideoResolution.v4096x2160 = '4096x2160';
    VideoResolution.v3840x2160 = '3840x2160';
    VideoResolution.v3840x1080 = '3840x1080';
    VideoResolution.v3840x600 = '3840x600';
    VideoResolution.v3440x1440 = '3440x1440';
    VideoResolution.v2560x1600 = '2560x1600';
    VideoResolution.v2560x1440 = '2560x1440';
    VideoResolution.v2560x1080 = '2560x1080';
    VideoResolution.v2560x960 = '2560x960';
    VideoResolution.v2376x288 = '2376x288';
    VideoResolution.v2048x1152 = '2048x1152';
    VideoResolution.v1920x1200 = '1920x1200';
    VideoResolution.v1920x1080 = '1920x1080';
    VideoResolution.v1920x540 = '1920x540';
    VideoResolution.v1792x1344 = '1792x1344';
    VideoResolution.v1680x1050 = '1680x1050';
    VideoResolution.v1600x1200 = '1600x1200';
    VideoResolution.v1600x900 = '1600x900';
    VideoResolution.v1440x1088 = '1440x1088';
    VideoResolution.v1440x1080 = '1440x1080';
    VideoResolution.v1440x900 = '1440x900';
    VideoResolution.v1400x1050 = '1400x1050';
    VideoResolution.v1366x768 = '1366x768';
    VideoResolution.v1360x768 = '1360x768';
    VideoResolution.v1280x1024 = '1280x1024';
    VideoResolution.v1280x960 = '1280x960';
    VideoResolution.v1280x800 = '1280x800';
    VideoResolution.v1280x768 = '1280x768';
    VideoResolution.v1280x720 = '1280x720';
    VideoResolution.v1200x1920 = '1200x1920';
    VideoResolution.v1024x768 = '1024x768';
    VideoResolution.v960x960 = '960x960';
    VideoResolution.v848x480 = '848x480';
    VideoResolution.v800x1280 = '800x1280';
    VideoResolution.v800x600 = '800x600';
    VideoResolution.v720x576 = '720x576';
    VideoResolution.v720x480 = '720x480';
    VideoResolution.v640x480 = '640x480';
    VideoResolution.vNtscComponent = 'NTSC-COMPONENT';
    VideoResolution.vNtscM = 'NTSC-M';
    VideoResolution.vNtscMJpn = 'NTSC-M-JPN';
    VideoResolution.vPalComponent = 'PAL-COMPONENT';
    VideoResolution.vPalI = 'PAL-I';
    VideoResolution.vPalBG = 'PAL-BG';
    VideoResolution.vPalN = 'PAL-N';
    VideoResolution.vPalNC = 'PAL-NC';
    VideoResolution.vPalM = 'PAL-M';
    VideoResolution.vSecam = 'SECAM';
    return VideoResolution;
}());
exports.VideoResolution = VideoResolution;
var VideoFrameRate = (function () {
    function VideoFrameRate() {
    }
    VideoFrameRate.r75p = '75p';
    VideoFrameRate.r60p = '60p';
    VideoFrameRate.r59p = '59.94p';
    VideoFrameRate.r57p = '57p';
    VideoFrameRate.r50p = '50p';
    VideoFrameRate.r30p = '30p';
    VideoFrameRate.r29p = '29.97p';
    VideoFrameRate.r25p = '25p';
    VideoFrameRate.r24p = '24p';
    VideoFrameRate.r23p = '23.976p';
    VideoFrameRate.r60i = '60i';
    VideoFrameRate.r59i = '59.94i';
    VideoFrameRate.r50i = '50i';
    return VideoFrameRate;
}());
exports.VideoFrameRate = VideoFrameRate;
var VideoMode = (function () {
    function VideoMode() {
    }
    VideoMode.v4096x2160x60p = '4096x2160x60p';
    VideoMode.v4096x2160x59p = '4096x2160x59.94p';
    VideoMode.v4096x2160x50p = '4096x2160x50p';
    VideoMode.v4096x2160x30p = '4096x2160x30p';
    VideoMode.v4096x2160x29p = '4096x2160x29.97p';
    VideoMode.v4096x2160x25p = '4096x2160x25p';
    VideoMode.v4096x2160x24p = '4096x2160x24p';
    VideoMode.v4096x2160x23p = '4096x2160x23.976p';
    VideoMode.v3840x2160x60p = '3840x2160x60p';
    VideoMode.v3840x2160x59p = '3840x2160x59.94p';
    VideoMode.v3840x2160x50p = '3840x2160x50p';
    VideoMode.v3840x2160x30p = '3840x2160x30p';
    VideoMode.v3840x2160x29p = '3840x2160x29.97p';
    VideoMode.v3840x2160x25p = '3840x2160x25p';
    VideoMode.v3840x2160x24p = '3840x2160x24p';
    VideoMode.v3840x2160x23p = '3840x2160x23.976p';
    VideoMode.v3840x1080x60p = '3840x1080x60p';
    VideoMode.v3840x1080x50p = '3840x1080x50p';
    VideoMode.v3840x1080x30p = '3840x1080x30p';
    VideoMode.v3840x1080x25p = '3840x1080x25p';
    VideoMode.v3840x600x60p = '3840x600x60p';
    VideoMode.v3440x1440x60p = '3440x1440x60p';
    VideoMode.v3440x1440x50p = '3440x1440x50p';
    VideoMode.v3440x1440x30p = '3440x1440x30p';
    VideoMode.v2560x1600x60p = '2560x1600x60p';
    VideoMode.v2560x1440x60p = '2560x1440x60p';
    VideoMode.v2560x1440x30p = '2560x1440x30p';
    VideoMode.v2560x1080x60p = '2560x1080x60p';
    VideoMode.v2560x960x60p = '2560x960x60p';
    VideoMode.v2376x288x60p = '2376x288x60p';
    VideoMode.v2048x1152x60p = '2048x1152x60p';
    VideoMode.v1920x1200x60p = '1920x1200x60p';
    VideoMode.v1920x1200x50p = '1920x1200x50p';
    VideoMode.v1920x1080x60p = '1920x1080x60p';
    VideoMode.v1920x1080x59p = '1920x1080x59.94p';
    VideoMode.v1920x1080x50p = '1920x1080x50p';
    VideoMode.v1920x1080x30p = '1920x1080x30p';
    VideoMode.v1920x1080x29p = '1920x1080x29.97p';
    VideoMode.v1920x1080x25p = '1920x1080x25p';
    VideoMode.v1920x1080x24p = '1920x1080x24p';
    VideoMode.v1920x1080x23p = '1920x1080x23.976p';
    VideoMode.v1920x1080x60i = '1920x1080x60i';
    VideoMode.v1920x1080x59i = '1920x1080x59.94i';
    VideoMode.v1920x1080x50i = '1920x1080x50i';
    VideoMode.v1920x540x60p = '1920x540x60p';
    VideoMode.v1792x1344x60p = '1792x1344x60p';
    VideoMode.v1680x1050x60p = '1680x1050x60p';
    VideoMode.v1600x1200x60p = '1600x1200x60p';
    VideoMode.v1600x900x60p = '1600x900x60p';
    VideoMode.v1440x1088x57p = '1440x1088x57p';
    VideoMode.v1440x1080x60p = '1440x1080x60p';
    VideoMode.v1440x900x75p = '1440x900x75p';
    VideoMode.v1440x900x60p = '1440x900x60p';
    VideoMode.v1400x1050x75p = '1400x1050x75p';
    VideoMode.v1400x1050x60p = '1400x1050x60p';
    VideoMode.v1366x768x60p = '1366x768x60p';
    VideoMode.v1360x768x60p = '1360x768x60p';
    VideoMode.v1280x1024x75p = '1280x1024x75p';
    VideoMode.v1280x1024x60p = '1280x1024x60p';
    VideoMode.v1280x960x60p = '1280x960x60p';
    VideoMode.v1280x800x75p = '1280x800x75p';
    VideoMode.v1280x800x60p = '1280x800x60p';
    VideoMode.v1280x768x60p = '1280x768x60p';
    VideoMode.v1280x720x60p = '1280x720x60p';
    VideoMode.v1280x720x59p = '1280x720x59.94p';
    VideoMode.v1280x720x50p = '1280x720x50p';
    VideoMode.v1280x720x25p = '1280x720x25p';
    VideoMode.v1280x720x24p = '1280x720x24p';
    VideoMode.v1280x720x23p = '1280x720x23.976p';
    VideoMode.v1200x1920x60p = '1200x1920x60p';
    VideoMode.v1024x768x75p = '1024x768x75p';
    VideoMode.v1024x768x60p = '1024x768x60p';
    VideoMode.v960x960x60p = '960x960x60p';
    VideoMode.v848x480x60p = '848x480x60p';
    VideoMode.v800x1280x60p = '800x1280x60p';
    VideoMode.v800x600x75p = '800x600x75p';
    VideoMode.v800x600x60p = '800x600x60p';
    VideoMode.v720x576x50p = '720x576x50p';
    VideoMode.v720x576x50i = '720x576x50i';
    VideoMode.v720x480x60p = '720x480x60p';
    VideoMode.v720x480x59p = '720x480x59.94p';
    VideoMode.v720x480x60i = '720x480x60i';
    VideoMode.v640x480x60p = '640x480x60p';
    VideoMode.vNtscComponent = 'NTSC-COMPONENT';
    VideoMode.vNtscM = 'NTSC-M';
    VideoMode.vNtscMJpn = 'NTSC-M-JPN';
    VideoMode.vPalComponent = 'PAL-COMPONENT';
    VideoMode.vPalI = 'PAL-I';
    VideoMode.vPalBG = 'PAL-BG';
    VideoMode.vPalN = 'PAL-N';
    VideoMode.vPalNC = 'PAL-NC';
    VideoMode.vPalM = 'PAL-M';
    VideoMode.vSecam = 'SECAM';
    return VideoMode;
}());
exports.VideoMode = VideoMode;
function bscGetVideoMode(resolution, frameRate) {
    if (resolution[0] === 'N' || resolution[0] === 'P' || resolution[0] === 'S') {
        return resolution;
    }
    else {
        return resolution + 'x' + frameRate;
    }
}
exports.bscGetVideoMode = bscGetVideoMode;
exports.FourKVideoModeSpec = [
    { resolution: VideoResolution.v4096x2160, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r59p, VideoFrameRate.r50p, VideoFrameRate.r30p, VideoFrameRate.r29p,
            VideoFrameRate.r25p, VideoFrameRate.r24p, VideoFrameRate.r23p
        ] },
    { resolution: VideoResolution.v3840x2160, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r59p, VideoFrameRate.r50p, VideoFrameRate.r30p, VideoFrameRate.r29p,
            VideoFrameRate.r25p, VideoFrameRate.r24p, VideoFrameRate.r23p
        ] },
    { resolution: VideoResolution.v3840x1080, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r50p, VideoFrameRate.r30p, VideoFrameRate.r25p
        ] },
    { resolution: VideoResolution.v3840x600, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v3440x1440, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r50p, VideoFrameRate.r30p
        ] },
    { resolution: VideoResolution.v2560x1600, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v2560x1440, availableRates: [VideoFrameRate.r60p, VideoFrameRate.r30p] },
    { resolution: VideoResolution.v2560x1080, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v2560x960, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v2376x288, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v2048x1152, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1920x1200, availableRates: [VideoFrameRate.r60p, VideoFrameRate.r50p] },
    { resolution: VideoResolution.v1920x1080, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r59p, VideoFrameRate.r50p, VideoFrameRate.r30p, VideoFrameRate.r29p,
            VideoFrameRate.r25p, VideoFrameRate.r24p, VideoFrameRate.r23p,
            VideoFrameRate.r60i, VideoFrameRate.r59i, VideoFrameRate.r50i
        ] },
    { resolution: VideoResolution.v1920x540, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1792x1344, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1680x1050, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1600x1200, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1600x900, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1440x1088, availableRates: [VideoFrameRate.r57p] },
    { resolution: VideoResolution.v1440x1080, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1440x900, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1400x1050, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1366x768, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1360x768, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x1024, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x960, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x800, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x720, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r59p, VideoFrameRate.r50p,
            VideoFrameRate.r25p, VideoFrameRate.r24p, VideoFrameRate.r23p
        ] },
    { resolution: VideoResolution.v1200x1920, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1024x768, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v960x960, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v848x480, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v800x1280, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v800x600, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v720x576, availableRates: [VideoFrameRate.r50p, VideoFrameRate.r50i] },
    { resolution: VideoResolution.v720x480, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r60i, VideoFrameRate.r59p
        ] },
    { resolution: VideoResolution.v640x480, availableRates: [VideoFrameRate.r60p] },
];
exports.PanteraVideoModeSpec = [
    { resolution: VideoResolution.v1920x1200, availableRates: [VideoFrameRate.r60p, VideoFrameRate.r50p] },
    { resolution: VideoResolution.v1920x1080, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r59p, VideoFrameRate.r50p, VideoFrameRate.r30p, VideoFrameRate.r29p,
            VideoFrameRate.r25p, VideoFrameRate.r24p, VideoFrameRate.r23p,
            VideoFrameRate.r60i, VideoFrameRate.r59i, VideoFrameRate.r50i
        ] },
    { resolution: VideoResolution.v1920x540, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1680x1050, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1600x1200, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1600x900, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1440x1088, availableRates: [VideoFrameRate.r57p] },
    { resolution: VideoResolution.v1440x1080, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1440x900, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1400x1050, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1366x768, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1360x768, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x1024, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x960, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x800, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x768, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x720, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r59p, VideoFrameRate.r50p,
            VideoFrameRate.r25p, VideoFrameRate.r24p, VideoFrameRate.r23p
        ] },
    { resolution: VideoResolution.v1200x1920, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1024x768, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v960x960, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v848x480, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v800x1280, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v800x600, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v720x576, availableRates: [VideoFrameRate.r50p, VideoFrameRate.r50i] },
    { resolution: VideoResolution.v720x480, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r60i, VideoFrameRate.r59p
        ] },
    { resolution: VideoResolution.v640x480, availableRates: [VideoFrameRate.r60p] },
];
exports.LynxHdmiVideoModeSpec = [
    { resolution: VideoResolution.v3840x2160, availableRates: [
            VideoFrameRate.r30p, VideoFrameRate.r29p, VideoFrameRate.r25p, VideoFrameRate.r24p
        ] },
    { resolution: VideoResolution.v1920x1200, availableRates: [VideoFrameRate.r60p, VideoFrameRate.r50p] },
    { resolution: VideoResolution.v1920x1080, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r59p, VideoFrameRate.r50p, VideoFrameRate.r30p, VideoFrameRate.r29p,
            VideoFrameRate.r25p, VideoFrameRate.r24p, VideoFrameRate.r23p,
            VideoFrameRate.r60i, VideoFrameRate.r59i, VideoFrameRate.r50i
        ] },
    { resolution: VideoResolution.v1920x540, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1792x1344, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1680x1050, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1600x1200, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1440x1080, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1440x900, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1400x1050, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1360x768, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x1024, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x960, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x800, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x768, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x720, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r59p, VideoFrameRate.r50p,
            VideoFrameRate.r25p, VideoFrameRate.r24p, VideoFrameRate.r23p
        ] },
    { resolution: VideoResolution.v1024x768, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v960x960, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v848x480, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v800x600, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v720x576, availableRates: [VideoFrameRate.r50p] },
    { resolution: VideoResolution.v720x480, availableRates: [VideoFrameRate.r60p, VideoFrameRate.r59p] },
    { resolution: VideoResolution.v640x480, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.vSecam, availableRates: [VideoFrameRate.r50i] },
    { resolution: VideoResolution.vNtscComponent, availableRates: [VideoFrameRate.r59i] },
    { resolution: VideoResolution.vPalComponent, availableRates: [VideoFrameRate.r50i] },
    { resolution: VideoResolution.vNtscM, availableRates: [VideoFrameRate.r59i] },
    { resolution: VideoResolution.vNtscMJpn, availableRates: [VideoFrameRate.r59i] },
    { resolution: VideoResolution.vPalI, availableRates: [VideoFrameRate.r50i] },
    { resolution: VideoResolution.vPalBG, availableRates: [VideoFrameRate.r50i] },
    { resolution: VideoResolution.vPalN, availableRates: [VideoFrameRate.r50i] },
    { resolution: VideoResolution.vPalNC, availableRates: [VideoFrameRate.r50i] },
    { resolution: VideoResolution.vPalM, availableRates: [VideoFrameRate.r59i] },
];
exports.LynxComponentVideoModeSpec = [
    { resolution: VideoResolution.v1920x1080, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r59p, VideoFrameRate.r50p, VideoFrameRate.r30p, VideoFrameRate.r29p,
            VideoFrameRate.r25p, VideoFrameRate.r24p, VideoFrameRate.r23p,
            VideoFrameRate.r60i, VideoFrameRate.r59i, VideoFrameRate.r50i
        ] },
    { resolution: VideoResolution.v1792x1344, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x720, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r59p, VideoFrameRate.r50p,
            VideoFrameRate.r25p, VideoFrameRate.r24p, VideoFrameRate.r23p
        ] },
    { resolution: VideoResolution.v720x576, availableRates: [VideoFrameRate.r50p] },
    { resolution: VideoResolution.v720x480, availableRates: [VideoFrameRate.r60p, VideoFrameRate.r59p] },
    { resolution: VideoResolution.vNtscComponent, availableRates: [VideoFrameRate.r59i] },
    { resolution: VideoResolution.vPalComponent, availableRates: [VideoFrameRate.r50i] },
];
exports.LynxVgaVideoModeSpec = [
    { resolution: VideoResolution.v1920x1200, availableRates: [VideoFrameRate.r60p, VideoFrameRate.r50p] },
    { resolution: VideoResolution.v1680x1050, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1600x1200, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1440x1080, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1440x900, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1400x1050, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1360x768, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x1024, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x960, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x800, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x768, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1024x768, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v800x600, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v640x480, availableRates: [VideoFrameRate.r60p] },
];
exports.BobcatHdmiVideoModeSpec = [
    { resolution: VideoResolution.v3840x2160, availableRates: [
            VideoFrameRate.r30p, VideoFrameRate.r29p, VideoFrameRate.r25p, VideoFrameRate.r24p
        ] },
    { resolution: VideoResolution.v1920x1200, availableRates: [VideoFrameRate.r60p, VideoFrameRate.r50p] },
    { resolution: VideoResolution.v1920x1080, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r59p, VideoFrameRate.r50p, VideoFrameRate.r30p, VideoFrameRate.r29p,
            VideoFrameRate.r25p, VideoFrameRate.r24p, VideoFrameRate.r23p,
            VideoFrameRate.r60i, VideoFrameRate.r59i, VideoFrameRate.r50i
        ] },
    { resolution: VideoResolution.v1920x540, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1680x1050, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1600x1200, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1440x1080, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1440x900, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1360x768, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x1024, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x960, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x800, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x768, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x720, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r59p, VideoFrameRate.r50p,
            VideoFrameRate.r25p, VideoFrameRate.r24p, VideoFrameRate.r23p
        ] },
    { resolution: VideoResolution.v1024x768, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v960x960, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v848x480, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v800x600, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v720x576, availableRates: [VideoFrameRate.r50p, VideoFrameRate.r50i] },
    { resolution: VideoResolution.v720x480, availableRates: [VideoFrameRate.r60p, VideoFrameRate.r60i, VideoFrameRate.r59p] },
    { resolution: VideoResolution.v640x480, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.vSecam, availableRates: [VideoFrameRate.r50i] },
    { resolution: VideoResolution.vNtscComponent, availableRates: [VideoFrameRate.r59i] },
    { resolution: VideoResolution.vPalComponent, availableRates: [VideoFrameRate.r50i] },
    { resolution: VideoResolution.vNtscM, availableRates: [VideoFrameRate.r59i] },
    { resolution: VideoResolution.vNtscMJpn, availableRates: [VideoFrameRate.r59i] },
    { resolution: VideoResolution.vPalI, availableRates: [VideoFrameRate.r50i] },
    { resolution: VideoResolution.vPalBG, availableRates: [VideoFrameRate.r50i] },
    { resolution: VideoResolution.vPalN, availableRates: [VideoFrameRate.r50i] },
    { resolution: VideoResolution.vPalNC, availableRates: [VideoFrameRate.r50i] },
    { resolution: VideoResolution.vPalM, availableRates: [VideoFrameRate.r59i] },
];
exports.BobcatComponentVideoModeSpec = [
    { resolution: VideoResolution.v1920x1080, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r59p, VideoFrameRate.r50p, VideoFrameRate.r30p, VideoFrameRate.r29p,
            VideoFrameRate.r25p, VideoFrameRate.r24p, VideoFrameRate.r23p,
            VideoFrameRate.r60i, VideoFrameRate.r59i, VideoFrameRate.r50i
        ] },
    { resolution: VideoResolution.v1280x720, availableRates: [
            VideoFrameRate.r60p, VideoFrameRate.r59p, VideoFrameRate.r50p,
            VideoFrameRate.r25p, VideoFrameRate.r24p, VideoFrameRate.r23p
        ] },
    { resolution: VideoResolution.v720x576, availableRates: [VideoFrameRate.r50p] },
    { resolution: VideoResolution.v720x480, availableRates: [VideoFrameRate.r60p, VideoFrameRate.r59p] },
    { resolution: VideoResolution.vNtscComponent, availableRates: [VideoFrameRate.r59i] },
    { resolution: VideoResolution.vPalComponent, availableRates: [VideoFrameRate.r50i] },
];
exports.BobcatVgaVideoModeSpec = [
    { resolution: VideoResolution.v1920x1200, availableRates: [VideoFrameRate.r60p, VideoFrameRate.r50p] },
    { resolution: VideoResolution.v1680x1050, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1600x1200, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1440x1080, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1440x900, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1360x768, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x960, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x800, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1280x768, availableRates: [VideoFrameRate.r60p] },
    { resolution: VideoResolution.v1024x768, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v800x600, availableRates: [VideoFrameRate.r75p, VideoFrameRate.r60p] },
    { resolution: VideoResolution.v640x480, availableRates: [VideoFrameRate.r60p] },
];
exports.AllVideoConnectorTypeSpec = [
    metadata_1.VideoConnectorType.Hdmi,
    metadata_1.VideoConnectorType.Vga,
    metadata_1.VideoConnectorType.Component,
];
exports.HdmiVideoConnectorTypeSpec = [
    metadata_1.VideoConnectorType.Hdmi,
];
function bscGetPlayerVideoConnectorTypes(model) {
    switch (true) {
        case playerModel_1.Series4Models.has(model):
        case playerModel_1.Series3Models.has(model):
        case playerModel_1.TigerModels.has(model):
            return exports.HdmiVideoConnectorTypeSpec;
        case playerModel_1.LynxModels.has(model):
        case playerModel_1.BobcatModels.has(model):
        case playerModel_1.CheetahModels.has(model):
            return exports.AllVideoConnectorTypeSpec;
        case playerModel_1.PantherModels.has(model): {
            if (model !== playerModel_1.PlayerModel.LS322 && model !== playerModel_1.PlayerModel.AU320) {
                return model !== playerModel_1.PlayerModel.LS422 ? exports.AllVideoConnectorTypeSpec : exports.HdmiVideoConnectorTypeSpec;
            }
            else {
                return null;
            }
        }
        case playerModel_1.PumaModels.has(model): {
            if (model === playerModel_1.PlayerModel.HD920 || model === playerModel_1.PlayerModel.HD970) {
                return exports.AllVideoConnectorTypeSpec;
            }
            else {
                return exports.HdmiVideoConnectorTypeSpec;
            }
        }
        default:
            return null;
    }
}
exports.bscGetPlayerVideoConnectorTypes = bscGetPlayerVideoConnectorTypes;
function bscIsValidConnectorType(model, connectorType) {
    var validConnectorTypes = bscGetPlayerVideoConnectorTypes(model);
    if (validConnectorTypes !== null) {
        return validConnectorTypes.indexOf(connectorType) > -1;
    }
    else {
        return false;
    }
}
exports.bscIsValidConnectorType = bscIsValidConnectorType;
function bscGetPlayerVideoModeSpecs(model, connectorType) {
    switch (true) {
        case playerModel_1.MalibuModels.has(model):
        case playerModel_1.PaganiModels.has(model):
        case playerModel_1.ImpalaModels.has(model):
        case playerModel_1.TigerModels.has(model):
            return exports.FourKVideoModeSpec;
        case playerModel_1.PaganiHDModels.has(model):
        case playerModel_1.PanteraModels.has(model):
            return exports.PanteraVideoModeSpec;
        case playerModel_1.LynxModels.has(model): {
            switch (connectorType) {
                case metadata_1.VideoConnectorType.Hdmi: return exports.LynxHdmiVideoModeSpec;
                case metadata_1.VideoConnectorType.Vga: return exports.LynxVgaVideoModeSpec;
                case metadata_1.VideoConnectorType.Component: return exports.LynxComponentVideoModeSpec;
                default: return null;
            }
        }
        case playerModel_1.BobcatModels.has(model): {
            switch (connectorType) {
                case metadata_1.VideoConnectorType.Hdmi: return exports.BobcatHdmiVideoModeSpec;
                case metadata_1.VideoConnectorType.Vga: return exports.BobcatVgaVideoModeSpec;
                case metadata_1.VideoConnectorType.Component: return exports.BobcatComponentVideoModeSpec;
                default: return null;
            }
        }
        default:
            return null;
    }
}
exports.bscGetPlayerVideoModeSpecs = bscGetPlayerVideoModeSpecs;
function bscGetFrameRates(model, connectorType, resolution) {
    var videoModeOptions = bscGetPlayerVideoModeSpecs(model, connectorType);
    if (videoModeOptions !== null) {
        for (var _i = 0, videoModeOptions_1 = videoModeOptions; _i < videoModeOptions_1.length; _i++) {
            var videoModeOption = videoModeOptions_1[_i];
            if (resolution === videoModeOption.resolution) {
                return videoModeOption.availableRates;
            }
        }
    }
    return null;
}
exports.bscGetFrameRates = bscGetFrameRates;
function bscIsValidResolution(model, connectorType, resolution) {
    return bscGetFrameRates(model, connectorType, resolution) !== null;
}
exports.bscIsValidResolution = bscIsValidResolution;
function bscIsValidFrameRate(model, connectorType, resolution, frameRate) {
    var validFrameRates = bscGetFrameRates(model, connectorType, resolution);
    if (validFrameRates !== null) {
        return validFrameRates.indexOf(frameRate) > -1;
    }
    else {
        return false;
    }
}
exports.bscIsValidFrameRate = bscIsValidFrameRate;
function bscParseVideoModeComponents(mode) {
    var components = { width: 0, height: 0, frameRate: 0, interlaced: false };
    var matchResult = mode.match(/(\d*)x(\d*)x(.*|.*\..*)([ip])/);
    if (matchResult != null && matchResult.length === 5) {
        components.width = Number(matchResult[1]);
        components.height = Number(matchResult[2]);
        components.frameRate = Number(matchResult[3]);
        components.interlaced = matchResult[4] === 'i';
    }
    else if (mode.match(/NTSC/) || mode.match(/PAL-M/)) {
        components.width = 720;
        components.height = 480;
        components.frameRate = 59.94;
        components.interlaced = true;
    }
    else if (mode.match(/PAL/) || mode.match(/SECAM/)) {
        components.width = 720;
        components.height = 576;
        components.frameRate = 50;
        components.interlaced = true;
    }
    return components;
}
exports.bscParseVideoModeComponents = bscParseVideoModeComponents;
function bscParseVideoModeResolutionAndRate(mode) {
    var result = {
        resolution: VideoResolution.v1920x1080,
        frameRate: VideoFrameRate.r60p,
    };
    var matchResult = mode.match(/(\d*x\d*)x(.*|.*\..*[ip])/);
    if (matchResult != null && matchResult.length === 3) {
        result.resolution = matchResult[1];
        result.frameRate = matchResult[2];
    }
    else if (mode.match(/NTSC/) || mode.match(/PAL-M/)) {
        result.resolution = mode;
        result.frameRate = VideoFrameRate.r59i;
    }
    else if (mode.match(/PAL/) || mode.match(/SECAM/)) {
        result.resolution = mode;
        result.frameRate = VideoFrameRate.r50i;
    }
    else {
        return null;
    }
    return result;
}
exports.bscParseVideoModeResolutionAndRate = bscParseVideoModeResolutionAndRate;
var FiveMPix = 5242880;
var TwoPFiveMPix = 2621440;
var MaxHiResGfxFrameRate = 30;
function bscIsFullResGraphicsSupported(model, videoMode) {
    var supported = false;
    if (playerFeature_1.bscPlayerModelHasFeature(model, playerFeature_1.ModelFeature.FullResGraphics)) {
        var videoModeComponents = bscParseVideoModeComponents(videoMode);
        if (!videoModeComponents.interlaced) {
            var totalPixels = videoModeComponents.width * videoModeComponents.height;
            supported = ((totalPixels > TwoPFiveMPix && totalPixels <= FiveMPix)
                || (totalPixels > FiveMPix && videoModeComponents.frameRate <= MaxHiResGfxFrameRate));
        }
    }
    return supported;
}
exports.bscIsFullResGraphicsSupported = bscIsFullResGraphicsSupported;
function bscGetGraphicsResolution(mode, fullResGraphics) {
    var videoModeComponents = bscParseVideoModeComponents(mode);
    switch (mode) {
        case VideoMode.v4096x2160x60p:
        case VideoMode.v4096x2160x59p:
        case VideoMode.v4096x2160x50p:
        case VideoMode.v4096x2160x30p:
        case VideoMode.v4096x2160x29p:
        case VideoMode.v4096x2160x25p:
        case VideoMode.v4096x2160x24p:
        case VideoMode.v4096x2160x23p:
        case VideoMode.v3840x2160x60p:
        case VideoMode.v3840x2160x59p:
        case VideoMode.v3840x2160x50p:
        case VideoMode.v3840x2160x23p:
        case VideoMode.v3840x2160x30p:
        case VideoMode.v3840x2160x29p:
        case VideoMode.v3840x2160x25p:
        case VideoMode.v3840x2160x24p:
        case VideoMode.v3840x1080x60p:
        case VideoMode.v3840x1080x50p:
        case VideoMode.v3840x1080x30p:
        case VideoMode.v3840x1080x25p:
        case VideoMode.v3840x600x60p:
        case VideoMode.v3440x1440x60p:
        case VideoMode.v3440x1440x50p:
        case VideoMode.v3440x1440x30p:
        case VideoMode.v2560x1600x60p:
        case VideoMode.v2560x1440x60p:
        case VideoMode.v2560x1440x30p:
        case VideoMode.v2560x1080x60p:
        case VideoMode.v2560x960x60p:
        case VideoMode.v2048x1152x60p:
        case VideoMode.v1792x1344x60p: {
            if (!fullResGraphics) {
                return {
                    height: videoModeComponents.height / 2,
                    width: videoModeComponents.width / 2,
                };
            }
        }
        default: {
            return {
                height: videoModeComponents.height,
                width: videoModeComponents.width,
            };
        }
    }
}
exports.bscGetGraphicsResolution = bscGetGraphicsResolution;


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(0);
var playerFeature_1 = __webpack_require__(3);
function bscGetZoneLimit(type, player) {
    var result = null;
    if (type === metadata_1.ZoneType.BackgroundImage) {
        result = 1;
    }
    else if (type === metadata_1.ZoneType.VideoOrImages || type === metadata_1.ZoneType.VideoOnly) {
        result = playerFeature_1.bscPlayerModelHasFeature(player, playerFeature_1.ModelFeature.VideoZOrdering) ? 2 : 1;
    }
    else if (type === metadata_1.ZoneType.AudioOnly || type === metadata_1.ZoneType.EnhancedAudio) {
        result = 3;
    }
    return result;
}
exports.bscGetZoneLimit = bscGetZoneLimit;


/***/ }),
/* 19 */
/***/ (function(module, exports) {

module.exports = __webpack_require__(25);

/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = __webpack_require__(26);

/***/ }),
/* 21 */
/***/ (function(module, exports) {

/**
 * lodash 3.0.2 (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */

/** `Object#toString` result references. */
var numberTag = '[object Number]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is `NaN`.
 *
 * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)
 * which returns `true` for `undefined` and other non-numeric values.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 * @example
 *
 * _.isNaN(NaN);
 * // => true
 *
 * _.isNaN(new Number(NaN));
 * // => true
 *
 * isNaN(undefined);
 * // => true
 *
 * _.isNaN(undefined);
 * // => false
 */
function isNaN(value) {
  // An `NaN` primitive is the only value that is not equal to itself.
  // Perform the `toStringTag` check first to avoid errors with some ActiveX objects in IE.
  return isNumber(value) && value != +value;
}

/**
 * Checks if `value` is classified as a `Number` primitive or object.
 *
 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified
 * as numbers, use the `_.isFinite` method.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isNumber(3);
 * // => true
 *
 * _.isNumber(Number.MIN_VALUE);
 * // => true
 *
 * _.isNumber(Infinity);
 * // => true
 *
 * _.isNumber('3');
 * // => false
 */
function isNumber(value) {
  return typeof value == 'number' ||
    (isObjectLike(value) && objectToString.call(value) == numberTag);
}

module.exports = isNaN;


/***/ }),
/* 22 */
/***/ (function(module, exports) {

/**
 * lodash 4.0.1 (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */

/** `Object#toString` result references. */
var stringTag = '[object String]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @type Function
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */
function isString(value) {
  return typeof value == 'string' ||
    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
}

module.exports = isString;


/***/ }),
/* 23 */
/***/ (function(module, exports) {

/**
 * lodash 3.0.1 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern modularize exports="npm" -o ./`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */

/**
 * Checks if `value` is `undefined`.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
 * @example
 *
 * _.isUndefined(void 0);
 * // => true
 *
 * _.isUndefined(null);
 * // => false
 */
function isUndefined(value) {
  return value === undefined;
}

module.exports = isUndefined;


/***/ }),
/* 24 */
/***/ (function(module, exports) {

module.exports = __webpack_require__(56);

/***/ })
/******/ ]);
});
//# sourceMappingURL=bscore.js.map

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(118);
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),
/* 22 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),
/* 23 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 24 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__component__ = __webpack_require__(50);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__controller__ = __webpack_require__(222);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "e", function() { return __WEBPACK_IMPORTED_MODULE_1__controller__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model__ = __webpack_require__(51);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_2__model__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_2__model__["b"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "d", function() { return __WEBPACK_IMPORTED_MODULE_2__model__["d"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__selector__ = __webpack_require__(232);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utility__ = __webpack_require__(235);
/* unused harmony namespace reexport */







/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(82);
__webpack_require__(45);
__webpack_require__(83);
__webpack_require__(140);
module.exports = __webpack_require__(8).Set;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(45);
__webpack_require__(136);
module.exports = __webpack_require__(8).Array.from;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(6);
var core = __webpack_require__(8);
var hide = __webpack_require__(16);
var redefine = __webpack_require__(17);
var ctx = __webpack_require__(21);
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(70);
var defined = __webpack_require__(35);
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),
/* 30 */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const u = __webpack_require__(2).fromCallback
const rimraf = __webpack_require__(173)

module.exports = {
  remove: u(rimraf),
  removeSync: rimraf.sync
}


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.11';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });

        return result;
      }

      if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });

        return result;
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        if (isObject(srcValue)) {
          stack || (stack = new Stack);
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Gets the value at `key`, unless `key` is "__proto__".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function safeGet(object, key) {
      if (key == '__proto__') {
        return;
      }

      return object[key];
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      var sourceURL = '//# sourceURL=' +
        ('sourceURL' in options
          ? options.sourceURL
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = (lodashFunc.name + ''),
            names = realNames[key] || (realNames[key] = []);

        names.push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
      return _;
    }.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else if (freeModule) {
    // Export for Node.js.
    (freeModule.exports = _)._ = _;
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(111)(module)))

/***/ }),
/* 33 */
/***/ (function(module, exports) {

function _extends() {
  module.exports = _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

module.exports = _extends;

/***/ }),
/* 34 */
/***/ (function(module, exports) {

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

module.exports = _objectWithoutPropertiesLoose;

/***/ }),
/* 35 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(75);
var $export = __webpack_require__(27);
var redefine = __webpack_require__(17);
var hide = __webpack_require__(16);
var Iterators = __webpack_require__(23);
var $iterCreate = __webpack_require__(125);
var setToStringTag = __webpack_require__(38);
var getPrototypeOf = __webpack_require__(130);
var ITERATOR = __webpack_require__(4)('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(131);
var enumBugKeys = __webpack_require__(67);

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(12).f;
var has = __webpack_require__(15);
var TAG = __webpack_require__(4)('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(40)('keys');
var uid = __webpack_require__(30);
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(8);
var global = __webpack_require__(6);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(75) ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),
/* 41 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(41);
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(35);
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(10);
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(134)(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(36)(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const u = __webpack_require__(2).fromCallback
const jsonFile = __webpack_require__(176)

module.exports = {
  // jsonfile exports
  readJson: u(jsonFile.readFile),
  readJsonSync: jsonFile.readFileSync,
  writeJson: u(jsonFile.writeFile),
  writeJsonSync: jsonFile.writeFileSync
}


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = warning;

/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */


  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
    /* eslint-disable no-empty */
  } catch (e) {}
  /* eslint-enable no-empty */

}

/***/ }),
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__image__ = __webpack_require__(219);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__image__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__video__ = __webpack_require__(220);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_1__video__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mediaZone__ = __webpack_require__(103);
/* unused harmony reexport MediaZone */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__sign__ = __webpack_require__(104);
/* unused harmony reexport Sign */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app__ = __webpack_require__(218);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_4__app__["a"]; });







/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__activeMediaState__ = __webpack_require__(105);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "d", function() { return __WEBPACK_IMPORTED_MODULE_0__activeMediaState__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__baseAction__ = __webpack_require__(224);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_1__baseAction__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "e", function() { return __WEBPACK_IMPORTED_MODULE_1__baseAction__["b"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "f", function() { return __WEBPACK_IMPORTED_MODULE_1__baseAction__["c"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__baseReducer__ = __webpack_require__(225);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_2__baseReducer__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_2__baseReducer__["b"]; });
/** @module Model:index */





/***/ }),
/* 52 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return HSM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HState; });
/* harmony export (immutable) */ __webpack_exports__["b"] = STTopEventHandler;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(32);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);

var HSM = /** @class */ (function () {
    function HSM(dispatchEvent) {
        this.dispatchEvent = dispatchEvent;
        this.topState = null;
        this.activeState = null;
        this.constructorHandler = null;
        this.initialPseudoStateHandler = null;
    }
    HSM.prototype.constructorFunction = function () {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_lodash__["isNil"])(this.constructorHandler)) {
            this.constructorHandler();
        }
    };
    // TEDTODO - remove casts
    HSM.prototype.initialize = function () {
        var stateData = { nextState: null };
        // empty event used to get super states
        var emptyEvent = { EventType: 'EMPTY_SIGNAL' };
        // entry event
        var entryEvent = { EventType: 'ENTRY_SIGNAL' };
        // init event
        var initEvent = { EventType: 'INIT_SIGNAL' };
        // execute initial transition
        // this.activeState = this.initialPseudoStateHandler(...arguments);
        // TEDTODO - what is arguments here? do any initialPseudoStateHandler functions take an argument?
        var a = Array.prototype.slice.call(arguments)[0];
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_lodash__["isNil"])(this.initialPseudoStateHandler)) {
            this.activeState = this.initialPseudoStateHandler(a);
        }
        // if there is no activeState, the playlist is empty
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_lodash__["isNil"])(this.activeState)) {
            return;
        }
        var activeState = this.activeState;
        // start at the top state
        if (this.topState === null) {
            debugger;
        }
        var sourceState = this.topState;
        while (true) {
            var entryStates = [];
            var entryStateIndex = 0;
            // target of the initial transition
            entryStates[0] = activeState;
            // send an empty event to get the super state
            var status_1 = this.activeState.HStateEventHandler(emptyEvent, stateData);
            activeState = stateData.nextState;
            this.activeState = stateData.nextState;
            // walk up the tree until the current source state is hit
            while (activeState.id !== sourceState.id) {
                entryStateIndex = entryStateIndex + 1;
                entryStates[entryStateIndex] = activeState;
                status_1 = this.activeState.HStateEventHandler(emptyEvent, stateData);
                activeState = stateData.nextState;
                this.activeState = stateData.nextState;
            }
            // restore the target of the initial transition
            // activeState = entryStates[0];
            // retrace the entry path in reverse (desired) order
            while (entryStateIndex >= 0) {
                var entryState = entryStates[entryStateIndex];
                status_1 = entryState.HStateEventHandler(entryEvent, stateData);
                entryStateIndex = entryStateIndex - 1;
            }
            // new source state is the current state
            sourceState = entryStates[0];
            status_1 = sourceState.HStateEventHandler(initEvent, stateData);
            if (status_1 !== 'TRANSITION') {
                this.activeState = sourceState;
                return;
            }
            activeState = stateData.nextState;
            this.activeState = stateData.nextState;
        }
    };
    // TEDTODO - remove casts
    HSM.prototype.Dispatch = function (event) {
        // if there is no activeState, the playlist is empty
        if (this.activeState == null) {
            return;
        }
        var stateData = { nextState: null };
        // empty event used to get super states
        var emptyEvent = { EventType: 'EMPTY_SIGNAL' };
        // entry event
        var entryEvent = { EventType: 'ENTRY_SIGNAL' };
        // init event
        var initEvent = { EventType: 'INIT_SIGNAL' };
        // exit event
        var exitEvent = { EventType: 'EXIT_SIGNAL' };
        var t = this.activeState; // save the current state
        var status = 'SUPER';
        var s = this.activeState; // TODO - initialized to reduce ts errors. TEDTODO - legit?
        while (status === 'SUPER') {
            s = this.activeState;
            status = s.HStateEventHandler(event, stateData);
            this.activeState = stateData.nextState;
        }
        if (status === 'TRANSITION') {
            var path = [];
            path[0] = this.activeState; // save the target of the transition
            path[1] = t; // save the current state
            // exit from the current state to the transition s
            while (t.id !== s.id) {
                status = t.HStateEventHandler(exitEvent, stateData);
                if (status === 'HANDLED') {
                    status = t.HStateEventHandler(emptyEvent, stateData);
                }
                t = stateData.nextState;
            }
            t = path[0]; // target of the transition
            // s is the source of the transition
            var ip = -1; // TEDTODO - initialization legit?
            // check source == target (transition to self)
            if (s.id === t.id) {
                status = s.HStateEventHandler(exitEvent, stateData); // exit the source
                ip = 0;
            }
            else {
                status = t.HStateEventHandler(emptyEvent, stateData); // superstate of target
                t = stateData.nextState;
                if (s.id === t.id) {
                    ip = 0; // enter the target
                }
                else {
                    status = s.HStateEventHandler(emptyEvent, stateData); // superstate of source
                    // check source->super == target->super
                    if (stateData.nextState.id === t.id) {
                        status = s.HStateEventHandler(exitEvent, stateData); // exit the source
                        ip = 0; // enter the target
                    }
                    else {
                        if (stateData.nextState.id === path[0].id) {
                            // check source->super == target
                            status = s.HStateEventHandler(exitEvent, stateData); // exit the source
                        }
                        else {
                            var iq = 0; // indicate LCA not found
                            ip = 1; // enter target and its superstate
                            path[1] = t; // save the superstate of the target
                            t = stateData.nextState; // save source->super
                            // get target->super->super
                            status = path[1].HStateEventHandler(emptyEvent, stateData);
                            while (status === 'SUPER') {
                                ip = ip + 1;
                                path[ip] = stateData.nextState; // store the entry path
                                if (stateData.nextState.id === s.id) {
                                    iq = 1; // indicate that LCA found
                                    ip = ip - 1; // do not enter the source
                                    status = 'HANDLED'; // terminate the loop
                                }
                                else {
                                    status = stateData.nextState.HStateEventHandler(emptyEvent, stateData);
                                }
                            }
                            if (iq === 0) {
                                status = s.HStateEventHandler(exitEvent, stateData); // exit the source
                                // check the rest of source->super == target->super->super...
                                iq = ip;
                                status = 'IGNORED'; // indicate LCA not found
                                while (iq >= 0) {
                                    if (t.id === path[iq].id) {
                                        status = 'HANDLED'; // indicate LCA found
                                        ip = iq - 1; // do not enter LCA
                                        iq = -1; // terminate the loop
                                    }
                                    else {
                                        iq = iq - 1; // try lower superstate of target
                                    }
                                }
                                if (status !== 'HANDLED') {
                                    // check each source->super->... for each target->super...
                                    status = 'IGNORED'; // keep looping
                                    while (status !== 'HANDLED') {
                                        status = t.HStateEventHandler(exitEvent, stateData);
                                        if (status === 'HANDLED') {
                                            status = t.HStateEventHandler(emptyEvent, stateData);
                                        }
                                        t = stateData.nextState; // set to super of t
                                        iq = ip;
                                        while (iq > 0) {
                                            if (t.id === path[iq].id) {
                                                ip = iq - 1; // do not enter LCA
                                                iq = -1; // break inner
                                                status = 'HANDLED'; // break outer
                                            }
                                            else {
                                                iq = iq - 1;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            // retrace the entry path in reverse (desired) order...
            while (ip >= 0) {
                status = path[ip].HStateEventHandler(entryEvent, stateData); // enter path[ip]
                ip = ip - 1;
            }
            // stick the target into register */
            t = path[0];
            this.activeState = t; // update the current state */
            // drill into the target hierarchy...
            status = t.HStateEventHandler(initEvent, stateData);
            this.activeState = stateData.nextState;
            while (status === 'TRANSITION') {
                ip = 0;
                path[0] = this.activeState;
                status = this.activeState.HStateEventHandler(emptyEvent, stateData); // find superstate
                this.activeState = stateData.nextState;
                while (this.activeState.id !== t.id) {
                    ip = ip + 1;
                    path[ip] = this.activeState;
                    status = this.activeState.HStateEventHandler(emptyEvent, stateData); // find superstate
                    this.activeState = stateData.nextState;
                }
                this.activeState = path[0];
                while (ip >= 0) {
                    status = path[ip].HStateEventHandler(entryEvent, stateData);
                    ip = ip - 1;
                }
                t = path[0];
                status = t.HStateEventHandler(initEvent, stateData);
            }
        }
        // set the new state or restore the current state
        this.activeState = t;
    };
    return HSM;
}());

var HState = /** @class */ (function () {
    function HState(stateMachine, id) {
        this.topState = null;
        // filled in by HState instance
        // this.HStateEventHandler = null; TEDTODO - ts doesn't like this
        this.stateMachine = stateMachine;
        // filled in by HState instance
        // this.superState = null;  TEDTODO - ts doesn't like this
        this.id = id;
    }
    return HState;
}());

function STTopEventHandler(_, stateData) {
    stateData.nextState = null;
    return 'IGNORED';
}


/***/ }),
/* 53 */
/***/ (function(module, exports) {

module.exports = require("fs");

/***/ }),
/* 54 */
/***/ (function(module, exports) {

module.exports = require("util");

/***/ }),
/* 55 */
/***/ (function(module, exports) {

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

module.exports = _inheritsLoose;

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory(__webpack_require__(54));
	else if(typeof define === 'function' && define.amd)
		define(["util"], factory);
	else if(typeof exports === 'object')
		exports["isomorphic-path"] = factory(require("util"));
	else
		root["isomorphic-path"] = factory(root["util"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_5__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __webpack_require__(1);
const platform_1 = __webpack_require__(4);
const noop_1 = __webpack_require__(3);
const unsupportedMethods = {
    resolve: noop_1.noop,
    relative: noop_1.noop,
};
const win32Runtime = path_1.win32;
exports.win32 = win32Runtime;
const posixRuntime = path_1.posix;
exports.posix = posixRuntime;
let defaultExport = { win32: win32Runtime, posix: posixRuntime };
if (platform_1.isWin()) {
    defaultExport = Object.assign({}, defaultExport, win32Runtime);
}
else {
    defaultExport = Object.assign({}, defaultExport, posixRuntime);
}
let normalizeRuntime;
exports.normalize = normalizeRuntime;
let joinRuntime;
exports.join = joinRuntime;
let resolveRuntime;
exports.resolve = resolveRuntime;
let isAbsoluteRuntime;
exports.isAbsolute = isAbsoluteRuntime;
let relativeRuntime;
exports.relative = relativeRuntime;
let dirnameRuntime;
exports.dirname = dirnameRuntime;
let basenameRuntime;
exports.basename = basenameRuntime;
let extnameRuntime;
exports.extname = extnameRuntime;
let sepRuntime;
exports.sep = sepRuntime;
let delimiterRuntime;
exports.delimiter = delimiterRuntime;
let parseRuntime;
exports.parse = parseRuntime;
let formatRuntime;
exports.format = formatRuntime;
if (platform_1.isWin()) {
    exports.normalize = normalizeRuntime = win32Runtime.normalize;
    exports.join = joinRuntime = win32Runtime.join;
    exports.resolve = resolveRuntime = win32Runtime.resolve;
    exports.isAbsolute = isAbsoluteRuntime = win32Runtime.isAbsolute;
    exports.relative = relativeRuntime = win32Runtime.relative;
    exports.dirname = dirnameRuntime = win32Runtime.dirname;
    exports.basename = basenameRuntime = win32Runtime.basename;
    exports.extname = extnameRuntime = win32Runtime.extname;
    exports.sep = sepRuntime = win32Runtime.sep;
    exports.delimiter = delimiterRuntime = win32Runtime.delimiter;
    exports.parse = parseRuntime = win32Runtime.parse;
    exports.format = formatRuntime = win32Runtime.format;
}
else {
    exports.normalize = normalizeRuntime = posixRuntime.normalize;
    exports.join = joinRuntime = posixRuntime.join;
    exports.resolve = resolveRuntime = posixRuntime.resolve;
    exports.isAbsolute = isAbsoluteRuntime = posixRuntime.isAbsolute;
    exports.relative = relativeRuntime = posixRuntime.relative;
    exports.dirname = dirnameRuntime = posixRuntime.dirname;
    exports.basename = basenameRuntime = posixRuntime.basename;
    exports.extname = extnameRuntime = posixRuntime.extname;
    exports.sep = sepRuntime = posixRuntime.sep;
    exports.delimiter = delimiterRuntime = posixRuntime.delimiter;
    exports.parse = parseRuntime = posixRuntime.parse;
    exports.format = formatRuntime = posixRuntime.format;
}
exports.default = defaultExport;


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.




var isWindows = process.platform === 'win32';
var util = __webpack_require__(5);


// resolves . and .. elements in a path array with directory names there
// must be no slashes or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  var res = [];
  for (var i = 0; i < parts.length; i++) {
    var p = parts[i];

    // ignore empty parts
    if (!p || p === '.')
      continue;

    if (p === '..') {
      if (res.length && res[res.length - 1] !== '..') {
        res.pop();
      } else if (allowAboveRoot) {
        res.push('..');
      }
    } else {
      res.push(p);
    }
  }

  return res;
}

// returns an array with empty elements removed from either end of the input
// array or the original array if no elements need to be removed
function trimArray(arr) {
  var lastIndex = arr.length - 1;
  var start = 0;
  for (; start <= lastIndex; start++) {
    if (arr[start])
      break;
  }

  var end = lastIndex;
  for (; end >= 0; end--) {
    if (arr[end])
      break;
  }

  if (start === 0 && end === lastIndex)
    return arr;
  if (start > end)
    return [];
  return arr.slice(start, end + 1);
}

// Regex to split a windows path into three parts: [*, device, slash,
// tail] windows-only
var splitDeviceRe =
    /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/;

// Regex to split the tail part of the above into [*, dir, basename, ext]
var splitTailRe =
    /^([\s\S]*?)((?:\.{1,2}|[^\\\/]+?|)(\.[^.\/\\]*|))(?:[\\\/]*)$/;

var win32 = {};

// Function to split a filename into [root, dir, basename, ext]
function win32SplitPath(filename) {
  // Separate device+slash from tail
  var result = splitDeviceRe.exec(filename),
      device = (result[1] || '') + (result[2] || ''),
      tail = result[3] || '';
  // Split the tail into dir, basename and extension
  var result2 = splitTailRe.exec(tail),
      dir = result2[1],
      basename = result2[2],
      ext = result2[3];
  return [device, dir, basename, ext];
}

function win32StatPath(path) {
  var result = splitDeviceRe.exec(path),
      device = result[1] || '',
      isUnc = !!device && device[1] !== ':';
  return {
    device: device,
    isUnc: isUnc,
    isAbsolute: isUnc || !!result[2], // UNC paths are always absolute
    tail: result[3]
  };
}

function normalizeUNCRoot(device) {
  return '\\\\' + device.replace(/^[\\\/]+/, '').replace(/[\\\/]+/g, '\\');
}

// path.resolve([from ...], to)
win32.resolve = function() {
  var resolvedDevice = '',
      resolvedTail = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1; i--) {
    var path;
    if (i >= 0) {
      path = arguments[i];
    } else if (!resolvedDevice) {
      path = process.cwd();
    } else {
      // Windows has the concept of drive-specific current working
      // directories. If we've resolved a drive letter but not yet an
      // absolute path, get cwd for that drive. We're sure the device is not
      // an unc path at this points, because unc paths are always absolute.
      path = __webpack_require__.i({"NODE_ENV":"production","PUBLIC_URL":".","PLATFORM":"standalone"})['=' + resolvedDevice];
      // Verify that a drive-local cwd was found and that it actually points
      // to our drive. If not, default to the drive's root.
      if (!path || path.substr(0, 3).toLowerCase() !==
          resolvedDevice.toLowerCase() + '\\') {
        path = resolvedDevice + '\\';
      }
    }

    // Skip empty and invalid entries
    if (!util.isString(path)) {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    var result = win32StatPath(path),
        device = result.device,
        isUnc = result.isUnc,
        isAbsolute = result.isAbsolute,
        tail = result.tail;

    if (device &&
        resolvedDevice &&
        device.toLowerCase() !== resolvedDevice.toLowerCase()) {
      // This path points to another device so it is not applicable
      continue;
    }

    if (!resolvedDevice) {
      resolvedDevice = device;
    }
    if (!resolvedAbsolute) {
      resolvedTail = tail + '\\' + resolvedTail;
      resolvedAbsolute = isAbsolute;
    }

    if (resolvedDevice && resolvedAbsolute) {
      break;
    }
  }

  // Convert slashes to backslashes when `resolvedDevice` points to an UNC
  // root. Also squash multiple slashes into a single one where appropriate.
  if (isUnc) {
    resolvedDevice = normalizeUNCRoot(resolvedDevice);
  }

  // At this point the path should be resolved to a full absolute path,
  // but handle relative paths to be safe (might happen when process.cwd()
  // fails)

  // Normalize the tail path
  resolvedTail = normalizeArray(resolvedTail.split(/[\\\/]+/),
                                !resolvedAbsolute).join('\\');

  return (resolvedDevice + (resolvedAbsolute ? '\\' : '') + resolvedTail) ||
         '.';
};


win32.normalize = function(path) {
  var result = win32StatPath(path),
      device = result.device,
      isUnc = result.isUnc,
      isAbsolute = result.isAbsolute,
      tail = result.tail,
      trailingSlash = /[\\\/]$/.test(tail);

  // Normalize the tail path
  tail = normalizeArray(tail.split(/[\\\/]+/), !isAbsolute).join('\\');

  if (!tail && !isAbsolute) {
    tail = '.';
  }
  if (tail && trailingSlash) {
    tail += '\\';
  }

  // Convert slashes to backslashes when `device` points to an UNC root.
  // Also squash multiple slashes into a single one where appropriate.
  if (isUnc) {
    device = normalizeUNCRoot(device);
  }

  return device + (isAbsolute ? '\\' : '') + tail;
};


win32.isAbsolute = function(path) {
  return win32StatPath(path).isAbsolute;
};

win32.join = function() {
  var paths = [];
  for (var i = 0; i < arguments.length; i++) {
    var arg = arguments[i];
    if (!util.isString(arg)) {
      throw new TypeError('Arguments to path.join must be strings');
    }
    if (arg) {
      paths.push(arg);
    }
  }

  var joined = paths.join('\\');

  // Make sure that the joined path doesn't start with two slashes, because
  // normalize() will mistake it for an UNC path then.
  //
  // This step is skipped when it is very clear that the user actually
  // intended to point at an UNC path. This is assumed when the first
  // non-empty string arguments starts with exactly two slashes followed by
  // at least one more non-slash character.
  //
  // Note that for normalize() to treat a path as an UNC path it needs to
  // have at least 2 components, so we don't filter for that here.
  // This means that the user can use join to construct UNC paths from
  // a server name and a share name; for example:
  //   path.join('//server', 'share') -> '\\\\server\\share\')
  if (!/^[\\\/]{2}[^\\\/]/.test(paths[0])) {
    joined = joined.replace(/^[\\\/]{2,}/, '\\');
  }

  return win32.normalize(joined);
};


// path.relative(from, to)
// it will solve the relative path from 'from' to 'to', for instance:
// from = 'C:\\orandea\\test\\aaa'
// to = 'C:\\orandea\\impl\\bbb'
// The output of the function should be: '..\\..\\impl\\bbb'
win32.relative = function(from, to) {
  from = win32.resolve(from);
  to = win32.resolve(to);

  // windows is not case sensitive
  var lowerFrom = from.toLowerCase();
  var lowerTo = to.toLowerCase();

  var toParts = trimArray(to.split('\\'));

  var lowerFromParts = trimArray(lowerFrom.split('\\'));
  var lowerToParts = trimArray(lowerTo.split('\\'));

  var length = Math.min(lowerFromParts.length, lowerToParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (lowerFromParts[i] !== lowerToParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  if (samePartsLength == 0) {
    return to;
  }

  var outputParts = [];
  for (var i = samePartsLength; i < lowerFromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('\\');
};


win32._makeLong = function(path) {
  // Note: this will *probably* throw somewhere.
  if (!util.isString(path))
    return path;

  if (!path) {
    return '';
  }

  var resolvedPath = win32.resolve(path);

  if (/^[a-zA-Z]\:\\/.test(resolvedPath)) {
    // path is local filesystem path, which needs to be converted
    // to long UNC path.
    return '\\\\?\\' + resolvedPath;
  } else if (/^\\\\[^?.]/.test(resolvedPath)) {
    // path is network UNC path, which needs to be converted
    // to long UNC path.
    return '\\\\?\\UNC\\' + resolvedPath.substring(2);
  }

  return path;
};


win32.dirname = function(path) {
  var result = win32SplitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


win32.basename = function(path, ext) {
  var f = win32SplitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


win32.extname = function(path) {
  return win32SplitPath(path)[3];
};


win32.format = function(pathObject) {
  if (!util.isObject(pathObject)) {
    throw new TypeError(
        "Parameter 'pathObject' must be an object, not " + typeof pathObject
    );
  }

  var root = pathObject.root || '';

  if (!util.isString(root)) {
    throw new TypeError(
        "'pathObject.root' must be a string or undefined, not " +
        typeof pathObject.root
    );
  }

  var dir = pathObject.dir;
  var base = pathObject.base || '';
  if (!dir) {
    return base;
  }
  if (dir[dir.length - 1] === win32.sep) {
    return dir + base;
  }
  return dir + win32.sep + base;
};


win32.parse = function(pathString) {
  if (!util.isString(pathString)) {
    throw new TypeError(
        "Parameter 'pathString' must be a string, not " + typeof pathString
    );
  }
  var allParts = win32SplitPath(pathString);
  if (!allParts || allParts.length !== 4) {
    throw new TypeError("Invalid path '" + pathString + "'");
  }
  return {
    root: allParts[0],
    dir: allParts[0] + allParts[1].slice(0, -1),
    base: allParts[2],
    ext: allParts[3],
    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)
  };
};


win32.sep = '\\';
win32.delimiter = ';';


// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var posix = {};


function posixSplitPath(filename) {
  return splitPathRe.exec(filename).slice(1);
}


// path.resolve([from ...], to)
// posix version
posix.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (!util.isString(path)) {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path[0] === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(resolvedPath.split('/'),
                                !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
posix.normalize = function(path) {
  var isAbsolute = posix.isAbsolute(path),
      trailingSlash = path && path[path.length - 1] === '/';

  // Normalize the path
  path = normalizeArray(path.split('/'), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
posix.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
posix.join = function() {
  var path = '';
  for (var i = 0; i < arguments.length; i++) {
    var segment = arguments[i];
    if (!util.isString(segment)) {
      throw new TypeError('Arguments to path.join must be strings');
    }
    if (segment) {
      if (!path) {
        path += segment;
      } else {
        path += '/' + segment;
      }
    }
  }
  return posix.normalize(path);
};


// path.relative(from, to)
// posix version
posix.relative = function(from, to) {
  from = posix.resolve(from).substr(1);
  to = posix.resolve(to).substr(1);

  var fromParts = trimArray(from.split('/'));
  var toParts = trimArray(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};


posix._makeLong = function(path) {
  return path;
};


posix.dirname = function(path) {
  var result = posixSplitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


posix.basename = function(path, ext) {
  var f = posixSplitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


posix.extname = function(path) {
  return posixSplitPath(path)[3];
};


posix.format = function(pathObject) {
  if (!util.isObject(pathObject)) {
    throw new TypeError(
        "Parameter 'pathObject' must be an object, not " + typeof pathObject
    );
  }

  var root = pathObject.root || '';

  if (!util.isString(root)) {
    throw new TypeError(
        "'pathObject.root' must be a string or undefined, not " +
        typeof pathObject.root
    );
  }

  var dir = pathObject.dir ? pathObject.dir + posix.sep : '';
  var base = pathObject.base || '';
  return dir + base;
};


posix.parse = function(pathString) {
  if (!util.isString(pathString)) {
    throw new TypeError(
        "Parameter 'pathString' must be a string, not " + typeof pathString
    );
  }
  var allParts = posixSplitPath(pathString);
  if (!allParts || allParts.length !== 4) {
    throw new TypeError("Invalid path '" + pathString + "'");
  }
  allParts[1] = allParts[1] || '';
  allParts[2] = allParts[2] || '';
  allParts[3] = allParts[3] || '';

  return {
    root: allParts[0],
    dir: allParts[0] + allParts[1].slice(0, -1),
    base: allParts[2],
    ext: allParts[3],
    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)
  };
};


posix.sep = '/';
posix.delimiter = ':';


if (isWindows)
  module.exports = win32;
else /* posix */
  module.exports = posix;

module.exports.posix = posix;
module.exports.win32 = win32;


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(0));


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.noop = (from, to) => {
    throw Error('method unsupported in isomorphic-path');
};


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isMac = () => {
    if (process
        && typeof process.platform === 'string'
        && process.platform.toLowerCase() === 'darwin') {
        return true;
    }
    else if (typeof navigator !== 'undefined'
        && typeof navigator.platform === 'string'
        && navigator.platform.toLowerCase().indexOf('mac') > -1) {
        return true;
    }
    else {
        return false;
    }
};
exports.isWin = () => {
    if (process
        && typeof process.platform === 'string'
        && process.platform.toLowerCase() === 'win32') {
        return true;
    }
    else if (typeof navigator !== 'undefined'
        && typeof navigator.platform === 'string'
        && navigator.platform.toLowerCase().indexOf('win') > -1) {
        return true;
    }
    else {
        return false;
    }
};
exports.isBrowser = () => {
    return typeof window !== 'undefined';
};
exports.isNode = () => {
    return typeof window === 'undefined' && typeof process !== 'undefined';
};


/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = __webpack_require__(54);

/***/ })
/******/ ]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.defaultMemoize = defaultMemoize;
exports.createSelectorCreator = createSelectorCreator;
exports.createStructuredSelector = createStructuredSelector;

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function defaultEqualityCheck(a, b) {
  return a === b;
}

function defaultMemoize(func) {
  var equalityCheck = arguments.length <= 1 || arguments[1] === undefined ? defaultEqualityCheck : arguments[1];

  var lastArgs = null;
  var lastResult = null;
  return function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (lastArgs === null || lastArgs.length !== args.length || !args.every(function (value, index) {
      return equalityCheck(value, lastArgs[index]);
    })) {
      lastResult = func.apply(undefined, args);
    }
    lastArgs = args;
    return lastResult;
  };
}

function getDependencies(funcs) {
  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;

  if (!dependencies.every(function (dep) {
    return typeof dep === 'function';
  })) {
    var dependencyTypes = dependencies.map(function (dep) {
      return typeof dep;
    }).join(', ');
    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));
  }

  return dependencies;
}

function createSelectorCreator(memoize) {
  for (var _len2 = arguments.length, memoizeOptions = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    memoizeOptions[_key2 - 1] = arguments[_key2];
  }

  return function () {
    for (var _len3 = arguments.length, funcs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      funcs[_key3] = arguments[_key3];
    }

    var recomputations = 0;
    var resultFunc = funcs.pop();
    var dependencies = getDependencies(funcs);

    var memoizedResultFunc = memoize.apply(undefined, [function () {
      recomputations++;
      return resultFunc.apply(undefined, arguments);
    }].concat(memoizeOptions));

    var selector = function selector(state, props) {
      for (var _len4 = arguments.length, args = Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {
        args[_key4 - 2] = arguments[_key4];
      }

      var params = dependencies.map(function (dependency) {
        return dependency.apply(undefined, [state, props].concat(args));
      });
      return memoizedResultFunc.apply(undefined, _toConsumableArray(params));
    };

    selector.resultFunc = resultFunc;
    selector.recomputations = function () {
      return recomputations;
    };
    selector.resetRecomputations = function () {
      return recomputations = 0;
    };
    return selector;
  };
}

var createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);

function createStructuredSelector(selectors) {
  var selectorCreator = arguments.length <= 1 || arguments[1] === undefined ? createSelector : arguments[1];

  if (typeof selectors !== 'object') {
    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));
  }
  var objectKeys = Object.keys(selectors);
  return selectorCreator(objectKeys.map(function (key) {
    return selectors[key];
  }), function () {
    for (var _len5 = arguments.length, values = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
      values[_key5] = arguments[_key5];
    }

    return values.reduce(function (composition, value, index) {
      composition[objectKeys[index]] = value;
      return composition;
    }, {});
  });
}

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  for (var i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(82);
__webpack_require__(45);
__webpack_require__(83);
__webpack_require__(138);
module.exports = __webpack_require__(8).Map;


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(139);
module.exports = __webpack_require__(8).Object.assign;


/***/ }),
/* 61 */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(63);
var TAG = __webpack_require__(4)('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),
/* 63 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var dP = __webpack_require__(12).f;
var create = __webpack_require__(77);
var redefineAll = __webpack_require__(79);
var ctx = __webpack_require__(21);
var anInstance = __webpack_require__(61);
var forOf = __webpack_require__(68);
var $iterDefine = __webpack_require__(36);
var step = __webpack_require__(74);
var setSpecies = __webpack_require__(133);
var DESCRIPTORS = __webpack_require__(9);
var fastKey = __webpack_require__(76).fastKey;
var validate = __webpack_require__(44);
var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function (that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index];
  // frozen object case
  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;         // collection type
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while (entry && entry.r) entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function () {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var entry = getEntry(that, key);
    var prev, index;
    // change existing entry
    if (entry) {
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++;
      // add to index
      if (index !== 'F') that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function (C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target
      this._k = kind;                     // kind
      this._l = undefined;                // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l;
      // revert to the last existing entry
      while (entry && entry.r) entry = entry.p;
      // get next entry
      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(6);
var $export = __webpack_require__(27);
var redefine = __webpack_require__(17);
var redefineAll = __webpack_require__(79);
var meta = __webpack_require__(76);
var forOf = __webpack_require__(68);
var anInstance = __webpack_require__(61);
var isObject = __webpack_require__(10);
var fails = __webpack_require__(22);
var $iterDetect = __webpack_require__(73);
var setToStringTag = __webpack_require__(38);
var inheritIfRequired = __webpack_require__(124);

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  var fixMethod = function (KEY) {
    var fn = proto[KEY];
    redefine(proto, KEY,
      KEY == 'delete' ? function (a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'has' ? function has(a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'get' ? function get(a) {
        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }
        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }
    );
  };
  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    var instance = new C();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new C();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });
    if (!ACCEPT_ITERABLES) {
      C = wrapper(function (target, iterable) {
        anInstance(target, C, NAME);
        var that = inheritIfRequired(new Base(), target, C);
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
        return that;
      });
      C.prototype = proto;
      proto.constructor = C;
    }
    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }
    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
    // weak collections should not contains .clear method
    if (IS_WEAK && proto.clear) delete proto.clear;
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F * (C != Base), O);

  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

  return C;
};


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(10);
var document = __webpack_require__(6).document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),
/* 67 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(21);
var call = __webpack_require__(72);
var isArrayIter = __webpack_require__(71);
var anObject = __webpack_require__(14);
var toLength = __webpack_require__(42);
var getIterFn = __webpack_require__(81);
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(9) && !__webpack_require__(22)(function () {
  return Object.defineProperty(__webpack_require__(66)('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(63);
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__(23);
var ITERATOR = __webpack_require__(4)('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(14);
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__(4)('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),
/* 74 */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),
/* 75 */
/***/ (function(module, exports) {

module.exports = false;


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(30)('meta');
var isObject = __webpack_require__(10);
var has = __webpack_require__(15);
var setDesc = __webpack_require__(12).f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(22)(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(14);
var dPs = __webpack_require__(127);
var enumBugKeys = __webpack_require__(67);
var IE_PROTO = __webpack_require__(39)('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(66)('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(123).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 78 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__(17);
module.exports = function (target, src, safe) {
  for (var key in src) redefine(target, key, src[key], safe);
  return target;
};


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(10);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(62);
var ITERATOR = __webpack_require__(4)('iterator');
var Iterators = __webpack_require__(23);
module.exports = __webpack_require__(8).getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.3.6 Object.prototype.toString()
var classof = __webpack_require__(62);
var test = {};
test[__webpack_require__(4)('toStringTag')] = 'z';
if (test + '' != '[object z]') {
  __webpack_require__(17)(Object.prototype, 'toString', function toString() {
    return '[object ' + classof(this) + ']';
  }, true);
}


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

var $iterators = __webpack_require__(137);
var getKeys = __webpack_require__(37);
var redefine = __webpack_require__(17);
var global = __webpack_require__(6);
var hide = __webpack_require__(16);
var Iterators = __webpack_require__(23);
var wks = __webpack_require__(4);
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var emptyObject = {};

if (false) {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = {
  copySync: __webpack_require__(154)
}


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

// imported from ncp (this is temporary, will rewrite)

var fs = __webpack_require__(0)
var path = __webpack_require__(1)
var utimes = __webpack_require__(175)

function ncp (source, dest, options, callback) {
  if (!callback) {
    callback = options
    options = {}
  }

  var basePath = process.cwd()
  var currentPath = path.resolve(basePath, source)
  var targetPath = path.resolve(basePath, dest)

  var filter = options.filter
  var transform = options.transform
  var overwrite = options.overwrite
  // If overwrite is undefined, use clobber, otherwise default to true:
  if (overwrite === undefined) overwrite = options.clobber
  if (overwrite === undefined) overwrite = true
  var errorOnExist = options.errorOnExist
  var dereference = options.dereference
  var preserveTimestamps = options.preserveTimestamps === true

  var started = 0
  var finished = 0
  var running = 0

  var errored = false

  startCopy(currentPath)

  function startCopy (source) {
    started++
    if (filter) {
      if (filter instanceof RegExp) {
        console.warn('Warning: fs-extra: Passing a RegExp filter is deprecated, use a function')
        if (!filter.test(source)) {
          return doneOne(true)
        }
      } else if (typeof filter === 'function') {
        if (!filter(source, dest)) {
          return doneOne(true)
        }
      }
    }
    return getStats(source)
  }

  function getStats (source) {
    var stat = dereference ? fs.stat : fs.lstat
    running++
    stat(source, function (err, stats) {
      if (err) return onError(err)

      // We need to get the mode from the stats object and preserve it.
      var item = {
        name: source,
        mode: stats.mode,
        mtime: stats.mtime, // modified time
        atime: stats.atime, // access time
        stats: stats // temporary
      }

      if (stats.isDirectory()) {
        return onDir(item)
      } else if (stats.isFile() || stats.isCharacterDevice() || stats.isBlockDevice()) {
        return onFile(item)
      } else if (stats.isSymbolicLink()) {
        // Symlinks don't really need to know about the mode.
        return onLink(source)
      }
    })
  }

  function onFile (file) {
    var target = file.name.replace(currentPath, targetPath.replace('$', '$$$$')) // escapes '$' with '$$'
    isWritable(target, function (writable) {
      if (writable) {
        copyFile(file, target)
      } else {
        if (overwrite) {
          rmFile(target, function () {
            copyFile(file, target)
          })
        } else if (errorOnExist) {
          onError(new Error(target + ' already exists'))
        } else {
          doneOne()
        }
      }
    })
  }

  function copyFile (file, target) {
    var readStream = fs.createReadStream(file.name)
    var writeStream = fs.createWriteStream(target, { mode: file.mode })

    readStream.on('error', onError)
    writeStream.on('error', onError)

    if (transform) {
      transform(readStream, writeStream, file)
    } else {
      writeStream.on('open', function () {
        readStream.pipe(writeStream)
      })
    }

    writeStream.once('close', function () {
      fs.chmod(target, file.mode, function (err) {
        if (err) return onError(err)
        if (preserveTimestamps) {
          utimes.utimesMillis(target, file.atime, file.mtime, function (err) {
            if (err) return onError(err)
            return doneOne()
          })
        } else {
          doneOne()
        }
      })
    })
  }

  function rmFile (file, done) {
    fs.unlink(file, function (err) {
      if (err) return onError(err)
      return done()
    })
  }

  function onDir (dir) {
    var target = dir.name.replace(currentPath, targetPath.replace('$', '$$$$')) // escapes '$' with '$$'
    isWritable(target, function (writable) {
      if (writable) {
        return mkDir(dir, target)
      }
      copyDir(dir.name)
    })
  }

  function mkDir (dir, target) {
    fs.mkdir(target, dir.mode, function (err) {
      if (err) return onError(err)
      // despite setting mode in fs.mkdir, doesn't seem to work
      // so we set it here.
      fs.chmod(target, dir.mode, function (err) {
        if (err) return onError(err)
        copyDir(dir.name)
      })
    })
  }

  function copyDir (dir) {
    fs.readdir(dir, function (err, items) {
      if (err) return onError(err)
      items.forEach(function (item) {
        startCopy(path.join(dir, item))
      })
      return doneOne()
    })
  }

  function onLink (link) {
    var target = link.replace(currentPath, targetPath)
    fs.readlink(link, function (err, resolvedPath) {
      if (err) return onError(err)
      checkLink(resolvedPath, target)
    })
  }

  function checkLink (resolvedPath, target) {
    if (dereference) {
      resolvedPath = path.resolve(basePath, resolvedPath)
    }
    isWritable(target, function (writable) {
      if (writable) {
        return makeLink(resolvedPath, target)
      }
      fs.readlink(target, function (err, targetDest) {
        if (err) return onError(err)

        if (dereference) {
          targetDest = path.resolve(basePath, targetDest)
        }
        if (targetDest === resolvedPath) {
          return doneOne()
        }
        return rmFile(target, function () {
          makeLink(resolvedPath, target)
        })
      })
    })
  }

  function makeLink (linkPath, target) {
    fs.symlink(linkPath, target, function (err) {
      if (err) return onError(err)
      return doneOne()
    })
  }

  function isWritable (path, done) {
    fs.lstat(path, function (err) {
      if (err) {
        if (err.code === 'ENOENT') return done(true)
        return done(false)
      }
      return done(false)
    })
  }

  function onError (err) {
    // ensure callback is defined & called only once:
    if (!errored && callback !== undefined) {
      errored = true
      return callback(err)
    }
  }

  function doneOne (skipped) {
    if (!skipped) running--
    finished++
    if ((started === finished) && (running === 0)) {
      if (callback !== undefined) {
        return callback(null)
      }
    }
  }
}

module.exports = ncp


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

// This is adapted from https://github.com/normalize/mz
// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors
const u = __webpack_require__(2).fromCallback
const fs = __webpack_require__(0)

const api = [
  'access',
  'appendFile',
  'chmod',
  'chown',
  'close',
  'fchmod',
  'fchown',
  'fdatasync',
  'fstat',
  'fsync',
  'ftruncate',
  'futimes',
  'lchown',
  'link',
  'lstat',
  'mkdir',
  'open',
  'read',
  'readFile',
  'readdir',
  'readlink',
  'realpath',
  'rename',
  'rmdir',
  'stat',
  'symlink',
  'truncate',
  'unlink',
  'utimes',
  'write',
  'writeFile'
]
// fs.mkdtemp() was added in Node.js v5.10.0, so check if it exists
typeof fs.mkdtemp === 'function' && api.push('mkdtemp')

// Export all keys:
Object.keys(fs).forEach(key => {
  exports[key] = fs[key]
})

// Universalify async methods:
api.forEach(method => {
  exports[method] = u(fs[method])
})

// We differ from mz/fs in that we still ship the old, broken, fs.exists()
// since we are a drop-in replacement for the native module
exports.exists = function (filename, callback) {
  if (typeof callback === 'function') {
    return fs.exists(filename, callback)
  }
  return new Promise(resolve => {
    return fs.exists(filename, resolve)
  })
}


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const path = __webpack_require__(1)

// get drive on windows
function getRootPath (p) {
  p = path.normalize(path.resolve(p)).split(path.sep)
  if (p.length > 0) return p[0]
  return null
}

// http://stackoverflow.com/a/62888/10333 contains more accurate
// TODO: expand to include the rest
const INVALID_PATH_CHARS = /[<>:"|?*]/

function invalidWin32Path (p) {
  const rp = getRootPath(p)
  p = p.replace(rp, '')
  return INVALID_PATH_CHARS.test(p)
}

module.exports = {
  getRootPath,
  invalidWin32Path
}


/***/ }),
/* 89 */
/***/ (function(module, exports) {

/* eslint-disable node/no-deprecated-api */
module.exports = function (size) {
  if (typeof Buffer.allocUnsafe === 'function') {
    try {
      return Buffer.allocUnsafe(size)
    } catch (e) {
      return new Buffer(size)
    }
  }
  return new Buffer(size)
}


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["isomorphic-path.browser"] = factory();
	else
		root["isomorphic-path.browser"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 7);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path="../typings/path.d.ts" />
var path_1 = __webpack_require__(6);
var platform_1 = __webpack_require__(9);
var noop_1 = __webpack_require__(8);
var unsupportedMethods = {
    resolve: noop_1.noop,
    relative: noop_1.noop
};
var win32Runtime = Object.assign({}, path_1.win32, platform_1.isBrowser() ? unsupportedMethods : {});
exports.win32 = win32Runtime;
var posixRuntime = Object.assign({}, path_1.posix, platform_1.isBrowser() ? unsupportedMethods : {});
exports.posix = posixRuntime;
var basePath = {
    win32: win32Runtime,
    posix: posixRuntime
};
var defaultExport = Object.assign({}, platform_1.isPc() ? win32Runtime : posixRuntime, basePath);
exports.default = defaultExport;


/***/ }),
/* 1 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 2 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 3 */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}


/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = __webpack_require__(4);

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = __webpack_require__(3);

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.




var isWindows = process.platform === 'win32';
var util = __webpack_require__(5);


// resolves . and .. elements in a path array with directory names there
// must be no slashes or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  var res = [];
  for (var i = 0; i < parts.length; i++) {
    var p = parts[i];

    // ignore empty parts
    if (!p || p === '.')
      continue;

    if (p === '..') {
      if (res.length && res[res.length - 1] !== '..') {
        res.pop();
      } else if (allowAboveRoot) {
        res.push('..');
      }
    } else {
      res.push(p);
    }
  }

  return res;
}

// returns an array with empty elements removed from either end of the input
// array or the original array if no elements need to be removed
function trimArray(arr) {
  var lastIndex = arr.length - 1;
  var start = 0;
  for (; start <= lastIndex; start++) {
    if (arr[start])
      break;
  }

  var end = lastIndex;
  for (; end >= 0; end--) {
    if (arr[end])
      break;
  }

  if (start === 0 && end === lastIndex)
    return arr;
  if (start > end)
    return [];
  return arr.slice(start, end + 1);
}

// Regex to split a windows path into three parts: [*, device, slash,
// tail] windows-only
var splitDeviceRe =
    /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/;

// Regex to split the tail part of the above into [*, dir, basename, ext]
var splitTailRe =
    /^([\s\S]*?)((?:\.{1,2}|[^\\\/]+?|)(\.[^.\/\\]*|))(?:[\\\/]*)$/;

var win32 = {};

// Function to split a filename into [root, dir, basename, ext]
function win32SplitPath(filename) {
  // Separate device+slash from tail
  var result = splitDeviceRe.exec(filename),
      device = (result[1] || '') + (result[2] || ''),
      tail = result[3] || '';
  // Split the tail into dir, basename and extension
  var result2 = splitTailRe.exec(tail),
      dir = result2[1],
      basename = result2[2],
      ext = result2[3];
  return [device, dir, basename, ext];
}

function win32StatPath(path) {
  var result = splitDeviceRe.exec(path),
      device = result[1] || '',
      isUnc = !!device && device[1] !== ':';
  return {
    device: device,
    isUnc: isUnc,
    isAbsolute: isUnc || !!result[2], // UNC paths are always absolute
    tail: result[3]
  };
}

function normalizeUNCRoot(device) {
  return '\\\\' + device.replace(/^[\\\/]+/, '').replace(/[\\\/]+/g, '\\');
}

// path.resolve([from ...], to)
win32.resolve = function() {
  var resolvedDevice = '',
      resolvedTail = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1; i--) {
    var path;
    if (i >= 0) {
      path = arguments[i];
    } else if (!resolvedDevice) {
      path = process.cwd();
    } else {
      // Windows has the concept of drive-specific current working
      // directories. If we've resolved a drive letter but not yet an
      // absolute path, get cwd for that drive. We're sure the device is not
      // an unc path at this points, because unc paths are always absolute.
      path = process.env['=' + resolvedDevice];
      // Verify that a drive-local cwd was found and that it actually points
      // to our drive. If not, default to the drive's root.
      if (!path || path.substr(0, 3).toLowerCase() !==
          resolvedDevice.toLowerCase() + '\\') {
        path = resolvedDevice + '\\';
      }
    }

    // Skip empty and invalid entries
    if (!util.isString(path)) {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    var result = win32StatPath(path),
        device = result.device,
        isUnc = result.isUnc,
        isAbsolute = result.isAbsolute,
        tail = result.tail;

    if (device &&
        resolvedDevice &&
        device.toLowerCase() !== resolvedDevice.toLowerCase()) {
      // This path points to another device so it is not applicable
      continue;
    }

    if (!resolvedDevice) {
      resolvedDevice = device;
    }
    if (!resolvedAbsolute) {
      resolvedTail = tail + '\\' + resolvedTail;
      resolvedAbsolute = isAbsolute;
    }

    if (resolvedDevice && resolvedAbsolute) {
      break;
    }
  }

  // Convert slashes to backslashes when `resolvedDevice` points to an UNC
  // root. Also squash multiple slashes into a single one where appropriate.
  if (isUnc) {
    resolvedDevice = normalizeUNCRoot(resolvedDevice);
  }

  // At this point the path should be resolved to a full absolute path,
  // but handle relative paths to be safe (might happen when process.cwd()
  // fails)

  // Normalize the tail path
  resolvedTail = normalizeArray(resolvedTail.split(/[\\\/]+/),
                                !resolvedAbsolute).join('\\');

  return (resolvedDevice + (resolvedAbsolute ? '\\' : '') + resolvedTail) ||
         '.';
};


win32.normalize = function(path) {
  var result = win32StatPath(path),
      device = result.device,
      isUnc = result.isUnc,
      isAbsolute = result.isAbsolute,
      tail = result.tail,
      trailingSlash = /[\\\/]$/.test(tail);

  // Normalize the tail path
  tail = normalizeArray(tail.split(/[\\\/]+/), !isAbsolute).join('\\');

  if (!tail && !isAbsolute) {
    tail = '.';
  }
  if (tail && trailingSlash) {
    tail += '\\';
  }

  // Convert slashes to backslashes when `device` points to an UNC root.
  // Also squash multiple slashes into a single one where appropriate.
  if (isUnc) {
    device = normalizeUNCRoot(device);
  }

  return device + (isAbsolute ? '\\' : '') + tail;
};


win32.isAbsolute = function(path) {
  return win32StatPath(path).isAbsolute;
};

win32.join = function() {
  var paths = [];
  for (var i = 0; i < arguments.length; i++) {
    var arg = arguments[i];
    if (!util.isString(arg)) {
      throw new TypeError('Arguments to path.join must be strings');
    }
    if (arg) {
      paths.push(arg);
    }
  }

  var joined = paths.join('\\');

  // Make sure that the joined path doesn't start with two slashes, because
  // normalize() will mistake it for an UNC path then.
  //
  // This step is skipped when it is very clear that the user actually
  // intended to point at an UNC path. This is assumed when the first
  // non-empty string arguments starts with exactly two slashes followed by
  // at least one more non-slash character.
  //
  // Note that for normalize() to treat a path as an UNC path it needs to
  // have at least 2 components, so we don't filter for that here.
  // This means that the user can use join to construct UNC paths from
  // a server name and a share name; for example:
  //   path.join('//server', 'share') -> '\\\\server\\share\')
  if (!/^[\\\/]{2}[^\\\/]/.test(paths[0])) {
    joined = joined.replace(/^[\\\/]{2,}/, '\\');
  }

  return win32.normalize(joined);
};


// path.relative(from, to)
// it will solve the relative path from 'from' to 'to', for instance:
// from = 'C:\\orandea\\test\\aaa'
// to = 'C:\\orandea\\impl\\bbb'
// The output of the function should be: '..\\..\\impl\\bbb'
win32.relative = function(from, to) {
  from = win32.resolve(from);
  to = win32.resolve(to);

  // windows is not case sensitive
  var lowerFrom = from.toLowerCase();
  var lowerTo = to.toLowerCase();

  var toParts = trimArray(to.split('\\'));

  var lowerFromParts = trimArray(lowerFrom.split('\\'));
  var lowerToParts = trimArray(lowerTo.split('\\'));

  var length = Math.min(lowerFromParts.length, lowerToParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (lowerFromParts[i] !== lowerToParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  if (samePartsLength == 0) {
    return to;
  }

  var outputParts = [];
  for (var i = samePartsLength; i < lowerFromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('\\');
};


win32._makeLong = function(path) {
  // Note: this will *probably* throw somewhere.
  if (!util.isString(path))
    return path;

  if (!path) {
    return '';
  }

  var resolvedPath = win32.resolve(path);

  if (/^[a-zA-Z]\:\\/.test(resolvedPath)) {
    // path is local filesystem path, which needs to be converted
    // to long UNC path.
    return '\\\\?\\' + resolvedPath;
  } else if (/^\\\\[^?.]/.test(resolvedPath)) {
    // path is network UNC path, which needs to be converted
    // to long UNC path.
    return '\\\\?\\UNC\\' + resolvedPath.substring(2);
  }

  return path;
};


win32.dirname = function(path) {
  var result = win32SplitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


win32.basename = function(path, ext) {
  var f = win32SplitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


win32.extname = function(path) {
  return win32SplitPath(path)[3];
};


win32.format = function(pathObject) {
  if (!util.isObject(pathObject)) {
    throw new TypeError(
        "Parameter 'pathObject' must be an object, not " + typeof pathObject
    );
  }

  var root = pathObject.root || '';

  if (!util.isString(root)) {
    throw new TypeError(
        "'pathObject.root' must be a string or undefined, not " +
        typeof pathObject.root
    );
  }

  var dir = pathObject.dir;
  var base = pathObject.base || '';
  if (!dir) {
    return base;
  }
  if (dir[dir.length - 1] === win32.sep) {
    return dir + base;
  }
  return dir + win32.sep + base;
};


win32.parse = function(pathString) {
  if (!util.isString(pathString)) {
    throw new TypeError(
        "Parameter 'pathString' must be a string, not " + typeof pathString
    );
  }
  var allParts = win32SplitPath(pathString);
  if (!allParts || allParts.length !== 4) {
    throw new TypeError("Invalid path '" + pathString + "'");
  }
  return {
    root: allParts[0],
    dir: allParts[0] + allParts[1].slice(0, -1),
    base: allParts[2],
    ext: allParts[3],
    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)
  };
};


win32.sep = '\\';
win32.delimiter = ';';


// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var posix = {};


function posixSplitPath(filename) {
  return splitPathRe.exec(filename).slice(1);
}


// path.resolve([from ...], to)
// posix version
posix.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (!util.isString(path)) {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path[0] === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(resolvedPath.split('/'),
                                !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
posix.normalize = function(path) {
  var isAbsolute = posix.isAbsolute(path),
      trailingSlash = path && path[path.length - 1] === '/';

  // Normalize the path
  path = normalizeArray(path.split('/'), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
posix.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
posix.join = function() {
  var path = '';
  for (var i = 0; i < arguments.length; i++) {
    var segment = arguments[i];
    if (!util.isString(segment)) {
      throw new TypeError('Arguments to path.join must be strings');
    }
    if (segment) {
      if (!path) {
        path += segment;
      } else {
        path += '/' + segment;
      }
    }
  }
  return posix.normalize(path);
};


// path.relative(from, to)
// posix version
posix.relative = function(from, to) {
  from = posix.resolve(from).substr(1);
  to = posix.resolve(to).substr(1);

  var fromParts = trimArray(from.split('/'));
  var toParts = trimArray(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};


posix._makeLong = function(path) {
  return path;
};


posix.dirname = function(path) {
  var result = posixSplitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


posix.basename = function(path, ext) {
  var f = posixSplitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


posix.extname = function(path) {
  return posixSplitPath(path)[3];
};


posix.format = function(pathObject) {
  if (!util.isObject(pathObject)) {
    throw new TypeError(
        "Parameter 'pathObject' must be an object, not " + typeof pathObject
    );
  }

  var root = pathObject.root || '';

  if (!util.isString(root)) {
    throw new TypeError(
        "'pathObject.root' must be a string or undefined, not " +
        typeof pathObject.root
    );
  }

  var dir = pathObject.dir ? pathObject.dir + posix.sep : '';
  var base = pathObject.base || '';
  return dir + base;
};


posix.parse = function(pathString) {
  if (!util.isString(pathString)) {
    throw new TypeError(
        "Parameter 'pathString' must be a string, not " + typeof pathString
    );
  }
  var allParts = posixSplitPath(pathString);
  if (!allParts || allParts.length !== 4) {
    throw new TypeError("Invalid path '" + pathString + "'");
  }
  allParts[1] = allParts[1] || '';
  allParts[2] = allParts[2] || '';
  allParts[3] = allParts[3] || '';

  return {
    root: allParts[0],
    dir: allParts[0] + allParts[1].slice(0, -1),
    base: allParts[2],
    ext: allParts[3],
    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)
  };
};


posix.sep = '/';
posix.delimiter = ':';


if (isWindows)
  module.exports = win32;
else /* posix */
  module.exports = posix;

module.exports.posix = posix;
module.exports.win32 = win32;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var path_1 = __webpack_require__(0);
var path_2 = __webpack_require__(0);
exports.win32 = path_2.win32;
exports.posix = path_2.posix;
exports.default = path_1.default;


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.noop = function (from, to) {
    throw 'method unsupported in isomorphic-path';
};


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.isMac = function () {
    if (process
        && typeof process.platform === 'string'
        && process.platform.toLowerCase() === 'darwin') {
        return true;
    }
    else if (typeof navigator !== 'undefined'
        && typeof navigator.platform === 'string'
        && navigator.platform.toLowerCase().indexOf('mac') > -1) {
        return true;
    }
    else {
        return false;
    }
};
exports.isPc = function () {
    if (process
        && typeof process.platform === 'string'
        && process.platform.toLowerCase() === 'win32') {
        return true;
    }
    else if (typeof navigator !== 'undefined'
        && typeof navigator.platform === 'string'
        && navigator.platform.toLowerCase().indexOf('win') > -1) {
        return true;
    }
    else {
        return false;
    }
};
exports.isBrowser = function () {
    return typeof window !== 'undefined';
};
exports.isNode = function () {
    return typeof window === 'undefined' && typeof process !== 'undefined';
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ })
/******/ ]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(188);

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(182),
    getPrototype = __webpack_require__(184),
    isObjectLike = __webpack_require__(189);

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var asap = __webpack_require__(117);

function noop() {}

// States:
//
// 0 - pending
// 1 - fulfilled with _value
// 2 - rejected with _value
// 3 - adopted the state of another promise, _value
//
// once the state is no longer pending (0) it is immutable

// All `_` prefixed properties will be reduced to `_{random number}`
// at build time to obfuscate them and discourage their use.
// We don't use symbols or Object.defineProperty to fully hide them
// because the performance isn't good enough.


// to avoid using try/catch inside critical functions, we
// extract them to here.
var LAST_ERROR = null;
var IS_ERROR = {};
function getThen(obj) {
  try {
    return obj.then;
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}

function tryCallOne(fn, a) {
  try {
    return fn(a);
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}
function tryCallTwo(fn, a, b) {
  try {
    fn(a, b);
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}

module.exports = Promise;

function Promise(fn) {
  if (typeof this !== 'object') {
    throw new TypeError('Promises must be constructed via new');
  }
  if (typeof fn !== 'function') {
    throw new TypeError('Promise constructor\'s argument is not a function');
  }
  this._75 = 0;
  this._83 = 0;
  this._18 = null;
  this._38 = null;
  if (fn === noop) return;
  doResolve(fn, this);
}
Promise._47 = null;
Promise._71 = null;
Promise._44 = noop;

Promise.prototype.then = function(onFulfilled, onRejected) {
  if (this.constructor !== Promise) {
    return safeThen(this, onFulfilled, onRejected);
  }
  var res = new Promise(noop);
  handle(this, new Handler(onFulfilled, onRejected, res));
  return res;
};

function safeThen(self, onFulfilled, onRejected) {
  return new self.constructor(function (resolve, reject) {
    var res = new Promise(noop);
    res.then(resolve, reject);
    handle(self, new Handler(onFulfilled, onRejected, res));
  });
}
function handle(self, deferred) {
  while (self._83 === 3) {
    self = self._18;
  }
  if (Promise._47) {
    Promise._47(self);
  }
  if (self._83 === 0) {
    if (self._75 === 0) {
      self._75 = 1;
      self._38 = deferred;
      return;
    }
    if (self._75 === 1) {
      self._75 = 2;
      self._38 = [self._38, deferred];
      return;
    }
    self._38.push(deferred);
    return;
  }
  handleResolved(self, deferred);
}

function handleResolved(self, deferred) {
  asap(function() {
    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;
    if (cb === null) {
      if (self._83 === 1) {
        resolve(deferred.promise, self._18);
      } else {
        reject(deferred.promise, self._18);
      }
      return;
    }
    var ret = tryCallOne(cb, self._18);
    if (ret === IS_ERROR) {
      reject(deferred.promise, LAST_ERROR);
    } else {
      resolve(deferred.promise, ret);
    }
  });
}
function resolve(self, newValue) {
  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
  if (newValue === self) {
    return reject(
      self,
      new TypeError('A promise cannot be resolved with itself.')
    );
  }
  if (
    newValue &&
    (typeof newValue === 'object' || typeof newValue === 'function')
  ) {
    var then = getThen(newValue);
    if (then === IS_ERROR) {
      return reject(self, LAST_ERROR);
    }
    if (
      then === self.then &&
      newValue instanceof Promise
    ) {
      self._83 = 3;
      self._18 = newValue;
      finale(self);
      return;
    } else if (typeof then === 'function') {
      doResolve(then.bind(newValue), self);
      return;
    }
  }
  self._83 = 1;
  self._18 = newValue;
  finale(self);
}

function reject(self, newValue) {
  self._83 = 2;
  self._18 = newValue;
  if (Promise._71) {
    Promise._71(self, newValue);
  }
  finale(self);
}
function finale(self) {
  if (self._75 === 1) {
    handle(self, self._38);
    self._38 = null;
  }
  if (self._75 === 2) {
    for (var i = 0; i < self._38.length; i++) {
      handle(self, self._38[i]);
    }
    self._38 = null;
  }
}

function Handler(onFulfilled, onRejected, promise){
  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
  this.onRejected = typeof onRejected === 'function' ? onRejected : null;
  this.promise = promise;
}

/**
 * Take a potentially misbehaving resolver function and make sure
 * onFulfilled and onRejected are only called once.
 *
 * Makes no guarantees about asynchrony.
 */
function doResolve(fn, promise) {
  var done = false;
  var res = tryCallTwo(fn, function (value) {
    if (done) return;
    done = true;
    resolve(promise, value);
  }, function (reason) {
    if (done) return;
    done = true;
    reject(promise, reason);
  });
  if (!done && res === IS_ERROR) {
    done = true;
    reject(promise, LAST_ERROR);
  }
}


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (false) {
  var ReactIs = require('react-is');

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(193)();
}


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(199);
} else {
  module.exports = require('./cjs/react-is.development.js');
}


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(5);

exports.__esModule = true;
exports.default = connectAdvanced;

var _inheritsLoose2 = _interopRequireDefault(__webpack_require__(55));

var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(115));

var _extends2 = _interopRequireDefault(__webpack_require__(33));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(34));

var _hoistNonReactStatics = _interopRequireDefault(__webpack_require__(180));

var _invariant = _interopRequireDefault(__webpack_require__(181));

var _react = __webpack_require__(7);

var _reactIs = __webpack_require__(95);

var _Subscription = _interopRequireDefault(__webpack_require__(207));

var _PropTypes = __webpack_require__(98);

var hotReloadingVersion = 0;
var dummyState = {};

function noop() {}

function makeSelectorStateful(sourceSelector, store) {
  // wrap the selector in an object that tracks its results between runs.
  var selector = {
    run: function runComponentSelector(props) {
      try {
        var nextProps = sourceSelector(store.getState(), props);

        if (nextProps !== selector.props || selector.error) {
          selector.shouldComponentUpdate = true;
          selector.props = nextProps;
          selector.error = null;
        }
      } catch (error) {
        selector.shouldComponentUpdate = true;
        selector.error = error;
      }
    }
  };
  return selector;
}

function connectAdvanced(
/*
  selectorFactory is a func that is responsible for returning the selector function used to
  compute new props from state, props, and dispatch. For example:
     export default connectAdvanced((dispatch, options) => (state, props) => ({
      thing: state.things[props.thingId],
      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
    }))(YourComponent)
   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
  props. Do not use connectAdvanced directly without memoizing results between calls to your
  selector, otherwise the Connect component will re-render on every state or props change.
*/
selectorFactory, // options object:
_ref) {
  var _contextTypes, _childContextTypes;

  if (_ref === void 0) {
    _ref = {};
  }

  var _ref2 = _ref,
      _ref2$getDisplayName = _ref2.getDisplayName,
      getDisplayName = _ref2$getDisplayName === void 0 ? function (name) {
    return "ConnectAdvanced(" + name + ")";
  } : _ref2$getDisplayName,
      _ref2$methodName = _ref2.methodName,
      methodName = _ref2$methodName === void 0 ? 'connectAdvanced' : _ref2$methodName,
      _ref2$renderCountProp = _ref2.renderCountProp,
      renderCountProp = _ref2$renderCountProp === void 0 ? undefined : _ref2$renderCountProp,
      _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges,
      shouldHandleStateChanges = _ref2$shouldHandleSta === void 0 ? true : _ref2$shouldHandleSta,
      _ref2$storeKey = _ref2.storeKey,
      storeKey = _ref2$storeKey === void 0 ? 'store' : _ref2$storeKey,
      _ref2$withRef = _ref2.withRef,
      withRef = _ref2$withRef === void 0 ? false : _ref2$withRef,
      connectOptions = (0, _objectWithoutPropertiesLoose2.default)(_ref2, ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef"]);
  var subscriptionKey = storeKey + 'Subscription';
  var version = hotReloadingVersion++;
  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = _PropTypes.storeShape, _contextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _contextTypes);
  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _childContextTypes);
  return function wrapWithConnect(WrappedComponent) {
    (0, _invariant.default)((0, _reactIs.isValidElementType)(WrappedComponent), "You must pass a component to the function returned by " + (methodName + ". Instead received " + JSON.stringify(WrappedComponent)));
    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
    var displayName = getDisplayName(wrappedComponentName);
    var selectorFactoryOptions = (0, _extends2.default)({}, connectOptions, {
      getDisplayName: getDisplayName,
      methodName: methodName,
      renderCountProp: renderCountProp,
      shouldHandleStateChanges: shouldHandleStateChanges,
      storeKey: storeKey,
      withRef: withRef,
      displayName: displayName,
      wrappedComponentName: wrappedComponentName,
      WrappedComponent: WrappedComponent // TODO Actually fix our use of componentWillReceiveProps

      /* eslint-disable react/no-deprecated */

    });

    var Connect =
    /*#__PURE__*/
    function (_Component) {
      (0, _inheritsLoose2.default)(Connect, _Component);

      function Connect(props, context) {
        var _this;

        _this = _Component.call(this, props, context) || this;
        _this.version = version;
        _this.state = {};
        _this.renderCount = 0;
        _this.store = props[storeKey] || context[storeKey];
        _this.propsMode = Boolean(props[storeKey]);
        _this.setWrappedInstance = _this.setWrappedInstance.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));
        (0, _invariant.default)(_this.store, "Could not find \"" + storeKey + "\" in either the context or props of " + ("\"" + displayName + "\". Either wrap the root component in a <Provider>, ") + ("or explicitly pass \"" + storeKey + "\" as a prop to \"" + displayName + "\"."));

        _this.initSelector();

        _this.initSubscription();

        return _this;
      }

      var _proto = Connect.prototype;

      _proto.getChildContext = function getChildContext() {
        var _ref3;

        // If this component received store from props, its subscription should be transparent
        // to any descendants receiving store+subscription from context; it passes along
        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows
        // Connect to control ordering of notifications to flow top-down.
        var subscription = this.propsMode ? null : this.subscription;
        return _ref3 = {}, _ref3[subscriptionKey] = subscription || this.context[subscriptionKey], _ref3;
      };

      _proto.componentDidMount = function componentDidMount() {
        if (!shouldHandleStateChanges) return; // componentWillMount fires during server side rendering, but componentDidMount and
        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.
        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.
        // To handle the case where a child component may have triggered a state change by
        // dispatching an action in its componentWillMount, we have to re-run the select and maybe
        // re-render.

        this.subscription.trySubscribe();
        this.selector.run(this.props);
        if (this.selector.shouldComponentUpdate) this.forceUpdate();
      };

      _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
        this.selector.run(nextProps);
      };

      _proto.shouldComponentUpdate = function shouldComponentUpdate() {
        return this.selector.shouldComponentUpdate;
      };

      _proto.componentWillUnmount = function componentWillUnmount() {
        if (this.subscription) this.subscription.tryUnsubscribe();
        this.subscription = null;
        this.notifyNestedSubs = noop;
        this.store = null;
        this.selector.run = noop;
        this.selector.shouldComponentUpdate = false;
      };

      _proto.getWrappedInstance = function getWrappedInstance() {
        (0, _invariant.default)(withRef, "To access the wrapped instance, you need to specify " + ("{ withRef: true } in the options argument of the " + methodName + "() call."));
        return this.wrappedInstance;
      };

      _proto.setWrappedInstance = function setWrappedInstance(ref) {
        this.wrappedInstance = ref;
      };

      _proto.initSelector = function initSelector() {
        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);
        this.selector = makeSelectorStateful(sourceSelector, this.store);
        this.selector.run(this.props);
      };

      _proto.initSubscription = function initSubscription() {
        if (!shouldHandleStateChanges) return; // parentSub's source should match where store came from: props vs. context. A component
        // connected to the store via props shouldn't use subscription from context, or vice versa.

        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];
        this.subscription = new _Subscription.default(this.store, parentSub, this.onStateChange.bind(this)); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in
        // the middle of the notification loop, where `this.subscription` will then be null. An
        // extra null check every change can be avoided by copying the method onto `this` and then
        // replacing it with a no-op on unmount. This can probably be avoided if Subscription's
        // listeners logic is changed to not call listeners that have been unsubscribed in the
        // middle of the notification loop.

        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);
      };

      _proto.onStateChange = function onStateChange() {
        this.selector.run(this.props);

        if (!this.selector.shouldComponentUpdate) {
          this.notifyNestedSubs();
        } else {
          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;
          this.setState(dummyState);
        }
      };

      _proto.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {
        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it
        // needs to notify nested subs. Once called, it unimplements itself until further state
        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does
        // a boolean check every time avoids an extra method call most of the time, resulting
        // in some perf boost.
        this.componentDidUpdate = undefined;
        this.notifyNestedSubs();
      };

      _proto.isSubscribed = function isSubscribed() {
        return Boolean(this.subscription) && this.subscription.isSubscribed();
      };

      _proto.addExtraProps = function addExtraProps(props) {
        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props; // make a shallow copy so that fields added don't leak to the original selector.
        // this is especially important for 'ref' since that's a reference back to the component
        // instance. a singleton memoized selector would then be holding a reference to the
        // instance, preventing the instance from being garbage collected, and that would be bad

        var withExtras = (0, _extends2.default)({}, props);
        if (withRef) withExtras.ref = this.setWrappedInstance;
        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;
        return withExtras;
      };

      _proto.render = function render() {
        var selector = this.selector;
        selector.shouldComponentUpdate = false;

        if (selector.error) {
          throw selector.error;
        } else {
          return (0, _react.createElement)(WrappedComponent, this.addExtraProps(selector.props));
        }
      };

      return Connect;
    }(_react.Component);
    /* eslint-enable react/no-deprecated */


    Connect.WrappedComponent = WrappedComponent;
    Connect.displayName = displayName;
    Connect.childContextTypes = childContextTypes;
    Connect.contextTypes = contextTypes;
    Connect.propTypes = contextTypes;

    if (false) {
      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
        var _this2 = this;

        // We are hot reloading!
        if (this.version !== version) {
          this.version = version;
          this.initSelector(); // If any connected descendants don't hot reload (and resubscribe in the process), their
          // listeners will be lost when we unsubscribe. Unfortunately, by copying over all
          // listeners, this does mean that the old versions of connected descendants will still be
          // notified of state changes; however, their onStateChange function is a no-op so this
          // isn't a huge deal.

          var oldListeners = [];

          if (this.subscription) {
            oldListeners = this.subscription.listeners.get();
            this.subscription.tryUnsubscribe();
          }

          this.initSubscription();

          if (shouldHandleStateChanges) {
            this.subscription.trySubscribe();
            oldListeners.forEach(function (listener) {
              return _this2.subscription.listeners.subscribe(listener);
            });
          }
        }
      };
    }

    return (0, _hoistNonReactStatics.default)(Connect, WrappedComponent);
  };
}

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(5);

exports.__esModule = true;
exports.wrapMapToPropsConstant = wrapMapToPropsConstant;
exports.getDependsOnOwnProps = getDependsOnOwnProps;
exports.wrapMapToPropsFunc = wrapMapToPropsFunc;

var _verifyPlainObject = _interopRequireDefault(__webpack_require__(99));

function wrapMapToPropsConstant(getConstant) {
  return function initConstantSelector(dispatch, options) {
    var constant = getConstant(dispatch, options);

    function constantSelector() {
      return constant;
    }

    constantSelector.dependsOnOwnProps = false;
    return constantSelector;
  };
} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
// whether mapToProps needs to be invoked when props have changed.
// 
// A length of one signals that mapToProps does not depend on props from the parent component.
// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
// therefore not reporting its length accurately..


function getDependsOnOwnProps(mapToProps) {
  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
// this function wraps mapToProps in a proxy function which does several things:
// 
//  * Detects whether the mapToProps function being called depends on props, which
//    is used by selectorFactory to decide if it should reinvoke on props changes.
//    
//  * On first call, handles mapToProps if returns another function, and treats that
//    new function as the true mapToProps for subsequent calls.
//    
//  * On first call, verifies the first result is a plain object, in order to warn
//    the developer that their mapToProps function is not returning a valid result.
//    


function wrapMapToPropsFunc(mapToProps, methodName) {
  return function initProxySelector(dispatch, _ref) {
    var displayName = _ref.displayName;

    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
    }; // allow detectFactoryAndVerify to get ownProps


    proxy.dependsOnOwnProps = true;

    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
      proxy.mapToProps = mapToProps;
      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
      var props = proxy(stateOrDispatch, ownProps);

      if (typeof props === 'function') {
        proxy.mapToProps = props;
        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
        props = proxy(stateOrDispatch, ownProps);
      }

      if (false) (0, _verifyPlainObject.default)(props, displayName, methodName);
      return props;
    };

    return proxy;
  };
}

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(5);

exports.__esModule = true;
exports.storeShape = exports.subscriptionShape = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(94));

var subscriptionShape = _propTypes.default.shape({
  trySubscribe: _propTypes.default.func.isRequired,
  tryUnsubscribe: _propTypes.default.func.isRequired,
  notifyNestedSubs: _propTypes.default.func.isRequired,
  isSubscribed: _propTypes.default.func.isRequired
});

exports.subscriptionShape = subscriptionShape;

var storeShape = _propTypes.default.shape({
  subscribe: _propTypes.default.func.isRequired,
  dispatch: _propTypes.default.func.isRequired,
  getState: _propTypes.default.func.isRequired
});

exports.storeShape = storeShape;

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(5);

exports.__esModule = true;
exports.default = verifyPlainObject;

var _isPlainObject = _interopRequireDefault(__webpack_require__(208));

var _warning = _interopRequireDefault(__webpack_require__(49));

function verifyPlainObject(value, displayName, methodName) {
  if (!(0, _isPlainObject.default)(value)) {
    (0, _warning.default)(methodName + "() in " + displayName + " must return a plain object. Instead received " + value + ".");
  }
}

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports["default"] = compose;
/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */

function compose() {
  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(undefined, arguments));
    };
  });
}

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.ActionTypes = undefined;
exports['default'] = createStore;

var _isPlainObject = __webpack_require__(92);

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _symbolObservable = __webpack_require__(216);

var _symbolObservable2 = _interopRequireDefault(_symbolObservable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
var ActionTypes = exports.ActionTypes = {
  INIT: '@@redux/INIT'

  /**
   * Creates a Redux store that holds the state tree.
   * The only way to change the data in the store is to call `dispatch()` on it.
   *
   * There should only be a single store in your app. To specify how different
   * parts of the state tree respond to actions, you may combine several reducers
   * into a single reducer function by using `combineReducers`.
   *
   * @param {Function} reducer A function that returns the next state tree, given
   * the current state tree and the action to handle.
   *
   * @param {any} [preloadedState] The initial state. You may optionally specify it
   * to hydrate the state from the server in universal apps, or to restore a
   * previously serialized user session.
   * If you use `combineReducers` to produce the root reducer function, this must be
   * an object with the same shape as `combineReducers` keys.
   *
   * @param {Function} [enhancer] The store enhancer. You may optionally specify it
   * to enhance the store with third-party capabilities such as middleware,
   * time travel, persistence, etc. The only store enhancer that ships with Redux
   * is `applyMiddleware()`.
   *
   * @returns {Store} A Redux store that lets you read the state, dispatch actions
   * and subscribe to changes.
   */
};function createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error('Expected the enhancer to be a function.');
    }

    return enhancer(createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error('Expected the reducer to be a function.');
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }

  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */
  function getState() {
    return currentState;
  }

  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */
  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error('Expected listener to be a function.');
    }

    var isSubscribed = true;

    ensureCanMutateNextListeners();
    nextListeners.push(listener);

    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      isSubscribed = false;

      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
    };
  }

  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */
  function dispatch(action) {
    if (!(0, _isPlainObject2['default'])(action)) {
      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
    }

    if (typeof action.type === 'undefined') {
      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
    }

    if (isDispatching) {
      throw new Error('Reducers may not dispatch actions.');
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;
    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }

  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */
  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error('Expected the nextReducer to be a function.');
    }

    currentReducer = nextReducer;
    dispatch({ type: ActionTypes.INIT });
  }

  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */
  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object') {
          throw new TypeError('Expected the observer to be an object.');
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return { unsubscribe: unsubscribe };
      }
    }, _ref[_symbolObservable2['default']] = function () {
      return this;
    }, _ref;
  }

  // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.
  dispatch({ type: ActionTypes.INIT });

  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[_symbolObservable2['default']] = observable, _ref2;
}

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports['default'] = warning;
/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */
  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
    /* eslint-disable no-empty */
  } catch (e) {}
  /* eslint-enable no-empty */
}

/***/ }),
/* 103 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MediaZone; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_isomorphic_path__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_isomorphic_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_isomorphic_path__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__brightsign_bscore__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__brightsign_bscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__brightsign_bscore__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__brightsign_bsdatamodel__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__brightsign_bsdatamodel___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__brightsign_bsdatamodel__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__index__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_react_redux__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_react_redux___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_react_redux__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__selector_activeMediaState__ = __webpack_require__(107);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


// import {
//   ArEventType,
// } from '../types';
// import DesktopPlatformService from '../platform/desktop/DesktopPlatformService';
// import MrssDisplayItemContainer from '../containers/mrssDisplayItemContainer';
// import { getPoolFilePath } from '../utilities/utilities';


// import { BsAssetItem } from "@brightsign/bscore";


// import { ArEventType } from '../type/runtime';
// import { getPoolFilePath, postRuntimeMessage } from '../index';


// import { Dispatch } from 'redux';
// import { bindActionCreators } from 'redux';

// -----------------------------------------------------------------------
// Component
// -----------------------------------------------------------------------
var MediaZoneComponent = /** @class */ (function (_super) {
    __extends(MediaZoneComponent, _super);
    function MediaZoneComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // postBpEvent() {
    //   const event : ArEventType = {
    //     EventType : 'bpEvent',
    //   };
    //   this.props.postBSPMessage(event);
    // }
    // postTimeoutEvent()  {
    //   const event : ArEventType = {
    //     EventType : 'timeoutEvent',
    //   };
    //   this.props.postBSPMessage(event);
    // }
    MediaZoneComponent.prototype.postMediaEndEvent = function () {
        console.log('postMediaEndEvent');
        var event = {
            EventType: __WEBPACK_IMPORTED_MODULE_3__brightsign_bscore__["EventType"].MediaEnd,
        };
        this.props.postBSPMessage(event);
    };
    MediaZoneComponent.prototype.renderMediaItem = function (mediaState, contentItem) {
        var self = this;
        var mediaContentItem = contentItem;
        // const assetId: string = mediaContentItem.assetId;
        // const assetItem : BsAssetItem = dmGetAssetItemById(this.props.bsdm, { id : assetId }) as BsAssetItem;
        // TODO - near term (likely) fix
        // const fileId : string = assetItem.name;
        var fileId = mediaState.name;
        var poolFilePath = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__index__["e" /* getPoolFilePath */])(fileId);
        var src = __WEBPACK_IMPORTED_MODULE_1_isomorphic_path___default.a.join('file://', poolFilePath);
        var mediaType = mediaContentItem.type;
        switch (mediaType) {
            case 'Image': {
                return (__WEBPACK_IMPORTED_MODULE_0_react__["createElement"](__WEBPACK_IMPORTED_MODULE_2__index__["b" /* Image */], { width: this.props.width, height: this.props.height, src: src }));
            }
            case 'Video': {
                return (__WEBPACK_IMPORTED_MODULE_0_react__["createElement"](__WEBPACK_IMPORTED_MODULE_2__index__["c" /* Video */], { width: this.props.width, height: this.props.height, src: src, onVideoEnd: self.postMediaEndEvent.bind(this) }));
            }
            default: {
                debugger;
            }
        }
        return null;
    };
    MediaZoneComponent.prototype.getEvents = function (bsdm, mediaStateId) {
        var events = [];
        var eventIds = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__brightsign_bsdatamodel__["dmGetEventIdsForMediaState"])(bsdm, { id: mediaStateId });
        events = eventIds.map(function (eventId) {
            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__brightsign_bsdatamodel__["dmGetEventById"])(bsdm, { id: eventId });
        });
        return events;
    };
    MediaZoneComponent.prototype.render = function () {
        var mediaStateId = this.props.activeMediaStateId;
        var mediaState = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__brightsign_bsdatamodel__["dmGetMediaStateById"])(this.props.bsdm, { id: mediaStateId });
        var contentItem = mediaState.contentItem;
        switch (contentItem.type) {
            case 'Image': {
                return this.renderMediaItem(mediaState, contentItem);
            }
            case 'Video': {
                return this.renderMediaItem(mediaState, contentItem);
            }
            default: {
                break;
            }
        }
        return null;
    };
    return MediaZoneComponent;
}(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]));
/* unused harmony default export */ var _unused_webpack_default_export = (MediaZoneComponent);
// -----------------------------------------------------------------------
// Container
// -----------------------------------------------------------------------
// const mapDispatchToProps = (dispatch: Dispatch<any>) => {
//   return bindActionCreators({
//     postBSPMessage: postRuntimeMessage,
//   }, dispatch);
// };
// const mapStateToProps = (state: any, ownProps: undefined): Partial<ImageProps> => {
// const mapStateToProps = (state: any, ownProps: undefined): ImageProps => {
var mapStateToProps = function (state, ownProps) {
    return {
        key: state.key,
        bsdm: state.bsdm,
        zone: ownProps.zone,
        width: ownProps.width,
        height: ownProps.height,
        activeMediaStateId: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__selector_activeMediaState__["a" /* getActiveMediaStateId */])(state, ownProps.zone.id),
    };
};
// export const MediaZone = connect(mapStateToProps, mapDispatchToProps)(MediaZoneComponent);
var MediaZone = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_react_redux__["connect"])(mapStateToProps, null)(MediaZoneComponent);


/***/ }),
/* 104 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export SignComponent */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Sign; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__brightsign_bsdatamodel__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__brightsign_bsdatamodel___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__brightsign_bsdatamodel__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mediaZone__ = __webpack_require__(103);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_redux__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_redux___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react_redux__);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




// -----------------------------------------------------------------------
// Component
// -----------------------------------------------------------------------
var SignComponent = /** @class */ (function (_super) {
    __extends(SignComponent, _super);
    function SignComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SignComponent.prototype.getMediaZoneJSX = function (zone) {
        return (__WEBPACK_IMPORTED_MODULE_0_react__["createElement"]("div", { key: zone.id, style: {
                position: 'absolute',
                left: zone.absolutePosition.x,
                top: zone.absolutePosition.y,
                width: zone.absolutePosition.width,
                height: zone.absolutePosition.height,
            } },
            __WEBPACK_IMPORTED_MODULE_0_react__["createElement"](__WEBPACK_IMPORTED_MODULE_2__mediaZone__["a" /* MediaZone */], { key: zone.id, bsdm: this.props.bsdm, zone: zone, width: Number(zone.absolutePosition.width), height: Number(zone.absolutePosition.height), activeMediaStateId: '' })));
    };
    SignComponent.prototype.getZoneJSX = function (zoneId) {
        var zone = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__brightsign_bsdatamodel__["dmGetZoneById"])(this.props.bsdm, { id: zoneId });
        switch (zone.type) {
            case 'VideoOrImages': {
                return this.getMediaZoneJSX(zone);
            }
            default: {
                debugger;
            }
        }
        return null;
    };
    SignComponent.prototype.render = function () {
        var _this = this;
        var zoneIds = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__brightsign_bsdatamodel__["dmGetZonesForSign"])(this.props.bsdm);
        return (__WEBPACK_IMPORTED_MODULE_0_react__["createElement"]("div", null, zoneIds.map(function (zoneId) {
            return _this.getZoneJSX(zoneId);
        })));
    };
    return SignComponent;
}(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]));

// -----------------------------------------------------------------------
// Container
// -----------------------------------------------------------------------
// const mapDispatchToProps = (dispatch: Dispatch<any>) => {
//   return bindActionCreators({
//   }, dispatch);
// };
// const mapStateToProps = (state: any, ownProps: undefined): Partial<ImageProps> => {
// const mapStateToProps = (state: any, ownProps: undefined): ImageProps => {
var mapStateToProps = function (state, ownProps) {
    return {
        src: state.src,
        width: state.width,
        height: state.height,
    };
};
// export const Image = connect(mapStateToProps, mapDispatchToProps)(ImageComponent);
var Sign = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_react_redux__["connect"])(mapStateToProps)(SignComponent);


/***/ }),
/* 105 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export SET_ACTIVE_MEDIA_STATE */
/* harmony export (immutable) */ __webpack_exports__["b"] = setActiveMediaState;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return activeMediaStateReducer; });
// ------------------------------------
// Constants
// ------------------------------------
var SET_ACTIVE_MEDIA_STATE = 'SET_ACTIVE_MEDIA_STATE';
// ------------------------------------
// Actions
// ------------------------------------
function setActiveMediaState(zoneId, mediaStateId) {
    return {
        type: SET_ACTIVE_MEDIA_STATE,
        payload: {
            zoneId: zoneId,
            mediaStateId: mediaStateId,
        },
    };
}
// ------------------------------------
// Reducer
// ------------------------------------
var initialState = {
    activeMediaStateIdByZone: {},
};
var activeMediaStateReducer = function (state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case SET_ACTIVE_MEDIA_STATE: {
            var newState = Object.assign({}, state);
            var _a = action.payload, zoneId = _a.zoneId, mediaStateId = _a.mediaStateId;
            newState.activeMediaStateIdByZone[zoneId] = mediaStateId;
            console.log(newState);
            return newState;
        }
        default:
            return state;
    }
};


/***/ }),
/* 106 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MediaHState; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__HSM__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__brightsign_bscore__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__brightsign_bscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__brightsign_bscore__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__brightsign_bsdatamodel__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__brightsign_bsdatamodel___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__brightsign_bsdatamodel__);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



// import { dispatchPostMessage } from "../../index";
var MediaHState = /** @class */ (function (_super) {
    __extends(MediaHState, _super);
    function MediaHState() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.eventLUT = {};
        _this.timeout = null;
        return _this;
    }
    MediaHState.prototype.addEvents = function (zoneHSM, eventIds) {
        var _this = this;
        eventIds.forEach(function (eventId) {
            // generate eventKey
            var event = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__brightsign_bsdatamodel__["dmGetEventStateById"])(zoneHSM.autotronStore.getState().bsdm, { id: eventId });
            var eventKey = _this.getHStateEventKey(event);
            // not sure best way to do this, so do it this way for now
            if (event.type === __WEBPACK_IMPORTED_MODULE_1__brightsign_bscore__["EventType"].Timer) {
                var interval = event.data.interval;
                _this.timeoutInterval = interval;
            }
            // get transition
            var transitionIds = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__brightsign_bsdatamodel__["dmGetTransitionIdsForEvent"])(zoneHSM.autotronStore.getState().bsdm, { id: event.id });
            // TODO - only support a single transition per event for now
            if (transitionIds.length !== 1) {
                debugger;
            }
            var transition = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__brightsign_bsdatamodel__["dmGetTransitionById"])(zoneHSM.autotronStore.getState().bsdm, { id: transitionIds[0] });
            // TODO - limited functionality at the moment
            var targetMediaStateId = transition.targetMediaStateId;
            // TODO - may be bogus
            var mediaZoneHSM = zoneHSM;
            // TODO - use a function - don't use LUT directly
            var targetMediaHState = mediaZoneHSM.mediaStateIdToHState[targetMediaStateId];
            _this.eventLUT[eventKey] = targetMediaHState;
        });
    };
    MediaHState.prototype.mediaHStateEventHandler = function (event, stateData) {
        // iterate through the events for which this state has transitions - if any match the supplied event,
        // execute the associated transition
        // const eventList : DmcEvent[] = (this.mediaState as DmcMediaState).eventList;
        // for (let stateEvent of eventList) {
        var bsEventKey = this.getBsEventKey(event);
        // TODO - hack to workaround unfinished code
        if (bsEventKey !== '') {
            if (this.eventLUT.hasOwnProperty(bsEventKey)) {
                stateData.nextState = this.eventLUT[bsEventKey];
                return 'TRANSITION';
            }
        }
        // }
        stateData.nextState = this.superState;
        return 'SUPER';
    };
    MediaHState.prototype.mediaHStateExitHandler = function () {
        console.log(this.id + ': exit signal');
        if (this.timeout) {
            clearTimeout(this.timeout);
            this.timeout = null;
        }
    };
    MediaHState.prototype.getBsEventKey = function (bsEvent) {
        var bsEventKey = '';
        switch (bsEvent.EventType) {
            case __WEBPACK_IMPORTED_MODULE_1__brightsign_bscore__["EventType"].Bp: {
                bsEventKey = bsEvent.EventData.ButtonPanelName + '-' + bsEvent.EventData.ButtonIndex.toString();
                break;
            }
            case __WEBPACK_IMPORTED_MODULE_1__brightsign_bscore__["EventType"].Timer: {
                bsEventKey = 'timer-' + this.id;
                break;
            }
            case __WEBPACK_IMPORTED_MODULE_1__brightsign_bscore__["EventType"].MediaEnd: {
                bsEventKey = 'mediaEnd-' + this.id;
                break;
            }
            default: {
                break;
            }
        }
        ;
        return bsEventKey;
    };
    MediaHState.prototype.getHStateEventKey = function (event) {
        var eventKey = '';
        console.log('getHState, event type is: ' + event.type);
        switch (event.type) {
            case __WEBPACK_IMPORTED_MODULE_1__brightsign_bscore__["EventType"].Timer: {
                // const eventData : DmTimer = event.data as DmTimer;
                eventKey = 'timer-' + this.id;
                break;
            }
            case __WEBPACK_IMPORTED_MODULE_1__brightsign_bscore__["EventType"].MediaEnd: {
                eventKey = 'mediaEnd-' + this.id;
                break;
            }
        }
        return eventKey;
    };
    MediaHState.prototype.launchTimer = function () {
        if (this.timeoutInterval && this.timeoutInterval > 0) {
            this.timeout = setTimeout(this.timeoutHandler, this.timeoutInterval * 1000, this);
        }
    };
    MediaHState.prototype.timeoutHandler = function (mediaHState) {
        mediaHState.timeout = null;
        var eventKey = 'timer-' + mediaHState.id;
        if (mediaHState.eventLUT.hasOwnProperty(eventKey)) {
            // const targetHState : HState = mediaHState.eventLUT[eventKey];
            var event_1 = {
                EventType: __WEBPACK_IMPORTED_MODULE_1__brightsign_bscore__["EventType"].Timer,
            };
            mediaHState.stateMachine.dispatchEvent(event_1);
            // dispatchPostMessage(event);
        }
    };
    return MediaHState;
}(__WEBPACK_IMPORTED_MODULE_0__HSM__["a" /* HState */]));



/***/ }),
/* 107 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getActiveMediaStateId;
// ------------------------------------
// Selectors
// ------------------------------------
function getActiveMediaStateId(state, zoneId) {
    var activeMediaStateIdByZone = state.bsplayer.activeMediaStates.activeMediaStateIdByZone;
    return activeMediaStateIdByZone[zoneId];
}


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

var v1 = __webpack_require__(236);
var v4 = __webpack_require__(237);

var uuid = v4;
uuid.v1 = v1;
uuid.v4 = v4;

module.exports = uuid;


/***/ }),
/* 109 */
/***/ (function(module, exports) {

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */
var byteToHex = [];
for (var i = 0; i < 256; ++i) {
  byteToHex[i] = (i + 0x100).toString(16).substr(1);
}

function bytesToUuid(buf, offset) {
  var i = offset || 0;
  var bth = byteToHex;
  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4
  return ([bth[buf[i++]], bth[buf[i++]], 
	bth[buf[i++]], bth[buf[i++]], '-',
	bth[buf[i++]], bth[buf[i++]], '-',
	bth[buf[i++]], bth[buf[i++]], '-',
	bth[buf[i++]], bth[buf[i++]], '-',
	bth[buf[i++]], bth[buf[i++]],
	bth[buf[i++]], bth[buf[i++]],
	bth[buf[i++]], bth[buf[i++]]]).join('');
}

module.exports = bytesToUuid;


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

// Unique ID creation requires a high quality random # generator.  In node.js
// this is pretty straight-forward - we use the crypto API.

var crypto = __webpack_require__(240);

module.exports = function nodeRNG() {
  return crypto.randomBytes(16);
};


/***/ }),
/* 111 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 112 */
/***/ (function(module, exports) {

module.exports = require("assert");

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (typeof Promise === 'undefined') {
  // Rejection tracking prevents a common issue where React gets into an
  // inconsistent state due to an error, but it gets swallowed by a Promise,
  // and the user has no idea what causes React's erratic future behavior.
  __webpack_require__(192).enable();
  window.Promise = __webpack_require__(191);
}

// fetch() polyfill for making API calls.
__webpack_require__(238);
__webpack_require__(196);

// Object.assign() is commonly used with React.
// It will use the native implementation if it's present and isn't buggy.
Object.assign = __webpack_require__(48);


/***/ }),
/* 114 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(198);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_dom__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_redux__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_redux___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_redux__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_redux_thunk__ = __webpack_require__(212);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_redux_thunk___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_redux_thunk__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_redux__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_redux___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_react_redux__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_redux_devtools_extension__ = __webpack_require__(211);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_redux_devtools_extension___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_redux_devtools_extension__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__asset_bootstrap_css__ = __webpack_require__(144);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__asset_bootstrap_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__asset_bootstrap_css__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_normalize_css_normalize_css__ = __webpack_require__(143);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_normalize_css_normalize_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_normalize_css_normalize_css__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_flexboxgrid_dist_flexboxgrid_min_css__ = __webpack_require__(141);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_flexboxgrid_dist_flexboxgrid_min_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_flexboxgrid_dist_flexboxgrid_min_css__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_font_awesome_css_font_awesome_min_css__ = __webpack_require__(142);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_font_awesome_css_font_awesome_min_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_font_awesome_css_font_awesome_min_css__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__index__ = __webpack_require__(24);











var store = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_redux__["createStore"])(__WEBPACK_IMPORTED_MODULE_10__index__["a" /* bsBspReducer */], __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_redux_devtools_extension__["composeWithDevTools"])(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_redux__["applyMiddleware"])(__WEBPACK_IMPORTED_MODULE_3_redux_thunk___default.a)));
__WEBPACK_IMPORTED_MODULE_1_react_dom__["render"](__WEBPACK_IMPORTED_MODULE_0_react__["createElement"](__WEBPACK_IMPORTED_MODULE_4_react_redux__["Provider"], { store: store },
    __WEBPACK_IMPORTED_MODULE_0_react__["createElement"](__WEBPACK_IMPORTED_MODULE_10__index__["b" /* App */], null)), document.getElementById('root'));


/***/ }),
/* 115 */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;

/***/ }),
/* 116 */
/***/ (function(module, exports) {

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};

          if (desc.get || desc.set) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
    }

    newObj["default"] = obj;
    return newObj;
  }
}

module.exports = _interopRequireWildcard;

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var domain; // The domain module is executed on demand
var hasSetImmediate = typeof setImmediate === "function";

// Use the fastest means possible to execute a task in its own turn, with
// priority over other events including network IO events in Node.js.
//
// An exception thrown by a task will permanently interrupt the processing of
// subsequent tasks. The higher level `asap` function ensures that if an
// exception is thrown by a task, that the task queue will continue flushing as
// soon as possible, but if you use `rawAsap` directly, you are responsible to
// either ensure that no exceptions are thrown from your task, or to manually
// call `rawAsap.requestFlush` if an exception is thrown.
module.exports = rawAsap;
function rawAsap(task) {
    if (!queue.length) {
        requestFlush();
        flushing = true;
    }
    // Avoids a function call
    queue[queue.length] = task;
}

var queue = [];
// Once a flush has been requested, no further calls to `requestFlush` are
// necessary until the next `flush` completes.
var flushing = false;
// The position of the next task to execute in the task queue. This is
// preserved between calls to `flush` so that it can be resumed if
// a task throws an exception.
var index = 0;
// If a task schedules additional tasks recursively, the task queue can grow
// unbounded. To prevent memory excaustion, the task queue will periodically
// truncate already-completed tasks.
var capacity = 1024;

// The flush function processes all tasks that have been scheduled with
// `rawAsap` unless and until one of those tasks throws an exception.
// If a task throws an exception, `flush` ensures that its state will remain
// consistent and will resume where it left off when called again.
// However, `flush` does not make any arrangements to be called again if an
// exception is thrown.
function flush() {
    while (index < queue.length) {
        var currentIndex = index;
        // Advance the index before calling the task. This ensures that we will
        // begin flushing on the next task the task throws an error.
        index = index + 1;
        queue[currentIndex].call();
        // Prevent leaking memory for long chains of recursive calls to `asap`.
        // If we call `asap` within tasks scheduled by `asap`, the queue will
        // grow, but to avoid an O(n) walk for every task we execute, we don't
        // shift tasks off the queue after they have been executed.
        // Instead, we periodically shift 1024 tasks off the queue.
        if (index > capacity) {
            // Manually shift all values starting at the index back to the
            // beginning of the queue.
            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {
                queue[scan] = queue[scan + index];
            }
            queue.length -= index;
            index = 0;
        }
    }
    queue.length = 0;
    index = 0;
    flushing = false;
}

rawAsap.requestFlush = requestFlush;
function requestFlush() {
    // Ensure flushing is not bound to any domain.
    // It is not sufficient to exit the domain, because domains exist on a stack.
    // To execute code outside of any domain, the following dance is necessary.
    var parentDomain = process.domain;
    if (parentDomain) {
        if (!domain) {
            // Lazy execute the domain module.
            // Only employed if the user elects to use domains.
            domain = __webpack_require__(241);
        }
        domain.active = process.domain = null;
    }

    // `setImmediate` is slower that `process.nextTick`, but `process.nextTick`
    // cannot handle recursion.
    // `requestFlush` will only be called recursively from `asap.js`, to resume
    // flushing after an error is thrown into a domain.
    // Conveniently, `setImmediate` was introduced in the same version
    // `process.nextTick` started throwing recursion errors.
    if (flushing && hasSetImmediate) {
        setImmediate(flush);
    } else {
        process.nextTick(flush);
    }

    if (parentDomain) {
        domain.active = process.domain = parentDomain;
    }
}


/***/ }),
/* 118 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__(4)('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(16)(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(29);
var toLength = __webpack_require__(42);
var toAbsoluteIndex = __webpack_require__(135);
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $defineProperty = __webpack_require__(12);
var createDesc = __webpack_require__(28);

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(40)('native-function-to-string', Function.toString);


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(6).document;
module.exports = document && document.documentElement;


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(10);
var setPrototypeOf = __webpack_require__(132).set;
module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(77);
var descriptor = __webpack_require__(28);
var setToStringTag = __webpack_require__(38);
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(16)(IteratorPrototype, __webpack_require__(4)('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var DESCRIPTORS = __webpack_require__(9);
var getKeys = __webpack_require__(37);
var gOPS = __webpack_require__(129);
var pIE = __webpack_require__(78);
var toObject = __webpack_require__(43);
var IObject = __webpack_require__(70);
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(22)(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(12);
var anObject = __webpack_require__(14);
var getKeys = __webpack_require__(37);

module.exports = __webpack_require__(9) ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(78);
var createDesc = __webpack_require__(28);
var toIObject = __webpack_require__(29);
var toPrimitive = __webpack_require__(80);
var has = __webpack_require__(15);
var IE8_DOM_DEFINE = __webpack_require__(69);
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(9) ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),
/* 129 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(15);
var toObject = __webpack_require__(43);
var IE_PROTO = __webpack_require__(39)('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(15);
var toIObject = __webpack_require__(29);
var arrayIndexOf = __webpack_require__(120)(false);
var IE_PROTO = __webpack_require__(39)('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(10);
var anObject = __webpack_require__(14);
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(21)(Function.call, __webpack_require__(128).f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(6);
var dP = __webpack_require__(12);
var DESCRIPTORS = __webpack_require__(9);
var SPECIES = __webpack_require__(4)('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(41);
var defined = __webpack_require__(35);
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(41);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ctx = __webpack_require__(21);
var $export = __webpack_require__(27);
var toObject = __webpack_require__(43);
var call = __webpack_require__(72);
var isArrayIter = __webpack_require__(71);
var toLength = __webpack_require__(42);
var createProperty = __webpack_require__(121);
var getIterFn = __webpack_require__(81);

$export($export.S + $export.F * !__webpack_require__(73)(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(119);
var step = __webpack_require__(74);
var Iterators = __webpack_require__(23);
var toIObject = __webpack_require__(29);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(36)(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var strong = __webpack_require__(64);
var validate = __webpack_require__(44);
var MAP = 'Map';

// 23.1 Map Objects
module.exports = __webpack_require__(65)(MAP, function (get) {
  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key) {
    var entry = strong.getEntry(validate(this, MAP), key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value) {
    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
  }
}, strong, true);


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(27);

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(126) });


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var strong = __webpack_require__(64);
var validate = __webpack_require__(44);
var SET = 'Set';

// 23.2 Set Objects
module.exports = __webpack_require__(65)(SET, function (get) {
  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.2.3.1 Set.prototype.add(value)
  add: function add(value) {
    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
  }
}, strong);


/***/ }),
/* 141 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 142 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 143 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 144 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var emptyFunction = __webpack_require__(46);

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function listen(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function remove() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function capture(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    } else {
      if (false) {
        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
      }
      return {
        remove: emptyFunction
      };
    }
  },

  registerDefault: function registerDefault() {}
};

module.exports = EventListener;

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

var isTextNode = __webpack_require__(151);

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * @param {DOMElement} node input/textarea to focus
 */

function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch (e) {}
}

module.exports = focusNode;

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 *
 * @param {?DOMDocument} doc Defaults to current document.
 * @return {?DOMElement}
 */
function getActiveElement(doc) /*?DOMElement*/{
  doc = doc || (typeof document !== 'undefined' ? document : undefined);
  if (typeof doc === 'undefined') {
    return null;
  }
  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

module.exports = getActiveElement;

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var isNode = __webpack_require__(150);

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */



var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const fs = __webpack_require__(0)

const BUF_LENGTH = 64 * 1024
const _buff = __webpack_require__(89)(BUF_LENGTH)

function copyFileSync (srcFile, destFile, options) {
  const overwrite = options.overwrite
  const errorOnExist = options.errorOnExist
  const preserveTimestamps = options.preserveTimestamps

  if (fs.existsSync(destFile)) {
    if (overwrite) {
      fs.unlinkSync(destFile)
    } else if (errorOnExist) {
      throw new Error(`${destFile} already exists`)
    } else return
  }

  const fdr = fs.openSync(srcFile, 'r')
  const stat = fs.fstatSync(fdr)
  const fdw = fs.openSync(destFile, 'w', stat.mode)
  let bytesRead = 1
  let pos = 0

  while (bytesRead > 0) {
    bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos)
    fs.writeSync(fdw, _buff, 0, bytesRead)
    pos += bytesRead
  }

  if (preserveTimestamps) {
    fs.futimesSync(fdw, stat.atime, stat.mtime)
  }

  fs.closeSync(fdr)
  fs.closeSync(fdw)
}

module.exports = copyFileSync


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const fs = __webpack_require__(0)
const path = __webpack_require__(1)
const copyFileSync = __webpack_require__(153)
const mkdir = __webpack_require__(3)

function copySync (src, dest, options) {
  if (typeof options === 'function' || options instanceof RegExp) {
    options = {filter: options}
  }

  options = options || {}
  options.recursive = !!options.recursive

  // default to true for now
  options.clobber = 'clobber' in options ? !!options.clobber : true
  // overwrite falls back to clobber
  options.overwrite = 'overwrite' in options ? !!options.overwrite : options.clobber
  options.dereference = 'dereference' in options ? !!options.dereference : false
  options.preserveTimestamps = 'preserveTimestamps' in options ? !!options.preserveTimestamps : false

  options.filter = options.filter || function () { return true }

  // Warn about using preserveTimestamps on 32-bit node:
  if (options.preserveTimestamps && process.arch === 'ia32') {
    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\n
    see https://github.com/jprichardson/node-fs-extra/issues/269`)
  }

  const stats = (options.recursive && !options.dereference) ? fs.lstatSync(src) : fs.statSync(src)
  const destFolder = path.dirname(dest)
  const destFolderExists = fs.existsSync(destFolder)
  let performCopy = false

  if (options.filter instanceof RegExp) {
    console.warn('Warning: fs-extra: Passing a RegExp filter is deprecated, use a function')
    performCopy = options.filter.test(src)
  } else if (typeof options.filter === 'function') performCopy = options.filter(src, dest)

  if (stats.isFile() && performCopy) {
    if (!destFolderExists) mkdir.mkdirsSync(destFolder)
    copyFileSync(src, dest, {
      overwrite: options.overwrite,
      errorOnExist: options.errorOnExist,
      preserveTimestamps: options.preserveTimestamps
    })
  } else if (stats.isDirectory() && performCopy) {
    if (!fs.existsSync(dest)) mkdir.mkdirsSync(dest)
    const contents = fs.readdirSync(src)
    contents.forEach(content => {
      const opts = options
      opts.recursive = true
      copySync(path.join(src, content), path.join(dest, content), opts)
    })
  } else if (options.recursive && stats.isSymbolicLink() && performCopy) {
    const srcPath = fs.readlinkSync(src)
    fs.symlinkSync(srcPath, dest)
  }
}

module.exports = copySync


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const fs = __webpack_require__(0)
const path = __webpack_require__(1)
const ncp = __webpack_require__(86)
const mkdir = __webpack_require__(3)
const pathExists = __webpack_require__(11).pathExists

function copy (src, dest, options, callback) {
  if (typeof options === 'function' && !callback) {
    callback = options
    options = {}
  } else if (typeof options === 'function' || options instanceof RegExp) {
    options = {filter: options}
  }
  callback = callback || function () {}
  options = options || {}

  // Warn about using preserveTimestamps on 32-bit node:
  if (options.preserveTimestamps && process.arch === 'ia32') {
    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\n
    see https://github.com/jprichardson/node-fs-extra/issues/269`)
  }

  // don't allow src and dest to be the same
  const basePath = process.cwd()
  const currentPath = path.resolve(basePath, src)
  const targetPath = path.resolve(basePath, dest)
  if (currentPath === targetPath) return callback(new Error('Source and destination must not be the same.'))

  fs.lstat(src, (err, stats) => {
    if (err) return callback(err)

    let dir = null
    if (stats.isDirectory()) {
      const parts = dest.split(path.sep)
      parts.pop()
      dir = parts.join(path.sep)
    } else {
      dir = path.dirname(dest)
    }

    pathExists(dir, (err, dirExists) => {
      if (err) return callback(err)
      if (dirExists) return ncp(src, dest, options, callback)
      mkdir.mkdirs(dir, err => {
        if (err) return callback(err)
        ncp(src, dest, options, callback)
      })
    })
  })
}

module.exports = copy


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

const u = __webpack_require__(2).fromCallback
module.exports = {
  copy: u(__webpack_require__(155))
}


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const u = __webpack_require__(2).fromCallback
const fs = __webpack_require__(53)
const path = __webpack_require__(1)
const mkdir = __webpack_require__(3)
const remove = __webpack_require__(31)

const emptyDir = u(function emptyDir (dir, callback) {
  callback = callback || function () {}
  fs.readdir(dir, (err, items) => {
    if (err) return mkdir.mkdirs(dir, callback)

    items = items.map(item => path.join(dir, item))

    deleteItem()

    function deleteItem () {
      const item = items.pop()
      if (!item) return callback()
      remove.remove(item, err => {
        if (err) return callback(err)
        deleteItem()
      })
    }
  })
})

function emptyDirSync (dir) {
  let items
  try {
    items = fs.readdirSync(dir)
  } catch (err) {
    return mkdir.mkdirsSync(dir)
  }

  items.forEach(item => {
    item = path.join(dir, item)
    remove.removeSync(item)
  })
}

module.exports = {
  emptyDirSync,
  emptydirSync: emptyDirSync,
  emptyDir,
  emptydir: emptyDir
}


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const u = __webpack_require__(2).fromCallback
const path = __webpack_require__(1)
const fs = __webpack_require__(0)
const mkdir = __webpack_require__(3)
const pathExists = __webpack_require__(11).pathExists

function createFile (file, callback) {
  function makeFile () {
    fs.writeFile(file, '', err => {
      if (err) return callback(err)
      callback()
    })
  }

  pathExists(file, (err, fileExists) => {
    if (err) return callback(err)
    if (fileExists) return callback()
    const dir = path.dirname(file)
    pathExists(dir, (err, dirExists) => {
      if (err) return callback(err)
      if (dirExists) return makeFile()
      mkdir.mkdirs(dir, err => {
        if (err) return callback(err)
        makeFile()
      })
    })
  })
}

function createFileSync (file) {
  if (fs.existsSync(file)) return

  const dir = path.dirname(file)
  if (!fs.existsSync(dir)) {
    mkdir.mkdirsSync(dir)
  }

  fs.writeFileSync(file, '')
}

module.exports = {
  createFile: u(createFile),
  createFileSync
}


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const file = __webpack_require__(158)
const link = __webpack_require__(160)
const symlink = __webpack_require__(163)

module.exports = {
  // file
  createFile: file.createFile,
  createFileSync: file.createFileSync,
  ensureFile: file.createFile,
  ensureFileSync: file.createFileSync,
  // link
  createLink: link.createLink,
  createLinkSync: link.createLinkSync,
  ensureLink: link.createLink,
  ensureLinkSync: link.createLinkSync,
  // symlink
  createSymlink: symlink.createSymlink,
  createSymlinkSync: symlink.createSymlinkSync,
  ensureSymlink: symlink.createSymlink,
  ensureSymlinkSync: symlink.createSymlinkSync
}


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const u = __webpack_require__(2).fromCallback
const path = __webpack_require__(1)
const fs = __webpack_require__(0)
const mkdir = __webpack_require__(3)
const pathExists = __webpack_require__(11).pathExists

function createLink (srcpath, dstpath, callback) {
  function makeLink (srcpath, dstpath) {
    fs.link(srcpath, dstpath, err => {
      if (err) return callback(err)
      callback(null)
    })
  }

  pathExists(dstpath, (err, destinationExists) => {
    if (err) return callback(err)
    if (destinationExists) return callback(null)
    fs.lstat(srcpath, (err, stat) => {
      if (err) {
        err.message = err.message.replace('lstat', 'ensureLink')
        return callback(err)
      }

      const dir = path.dirname(dstpath)
      pathExists(dir, (err, dirExists) => {
        if (err) return callback(err)
        if (dirExists) return makeLink(srcpath, dstpath)
        mkdir.mkdirs(dir, err => {
          if (err) return callback(err)
          makeLink(srcpath, dstpath)
        })
      })
    })
  })
}

function createLinkSync (srcpath, dstpath, callback) {
  const destinationExists = fs.existsSync(dstpath)
  if (destinationExists) return undefined

  try {
    fs.lstatSync(srcpath)
  } catch (err) {
    err.message = err.message.replace('lstat', 'ensureLink')
    throw err
  }

  const dir = path.dirname(dstpath)
  const dirExists = fs.existsSync(dir)
  if (dirExists) return fs.linkSync(srcpath, dstpath)
  mkdir.mkdirsSync(dir)

  return fs.linkSync(srcpath, dstpath)
}

module.exports = {
  createLink: u(createLink),
  createLinkSync
}


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const path = __webpack_require__(1)
const fs = __webpack_require__(0)
const pathExists = __webpack_require__(11).pathExists

/**
 * Function that returns two types of paths, one relative to symlink, and one
 * relative to the current working directory. Checks if path is absolute or
 * relative. If the path is relative, this function checks if the path is
 * relative to symlink or relative to current working directory. This is an
 * initiative to find a smarter `srcpath` to supply when building symlinks.
 * This allows you to determine which path to use out of one of three possible
 * types of source paths. The first is an absolute path. This is detected by
 * `path.isAbsolute()`. When an absolute path is provided, it is checked to
 * see if it exists. If it does it's used, if not an error is returned
 * (callback)/ thrown (sync). The other two options for `srcpath` are a
 * relative url. By default Node's `fs.symlink` works by creating a symlink
 * using `dstpath` and expects the `srcpath` to be relative to the newly
 * created symlink. If you provide a `srcpath` that does not exist on the file
 * system it results in a broken symlink. To minimize this, the function
 * checks to see if the 'relative to symlink' source file exists, and if it
 * does it will use it. If it does not, it checks if there's a file that
 * exists that is relative to the current working directory, if does its used.
 * This preserves the expectations of the original fs.symlink spec and adds
 * the ability to pass in `relative to current working direcotry` paths.
 */

function symlinkPaths (srcpath, dstpath, callback) {
  if (path.isAbsolute(srcpath)) {
    return fs.lstat(srcpath, (err, stat) => {
      if (err) {
        err.message = err.message.replace('lstat', 'ensureSymlink')
        return callback(err)
      }
      return callback(null, {
        'toCwd': srcpath,
        'toDst': srcpath
      })
    })
  } else {
    const dstdir = path.dirname(dstpath)
    const relativeToDst = path.join(dstdir, srcpath)
    return pathExists(relativeToDst, (err, exists) => {
      if (err) return callback(err)
      if (exists) {
        return callback(null, {
          'toCwd': relativeToDst,
          'toDst': srcpath
        })
      } else {
        return fs.lstat(srcpath, (err, stat) => {
          if (err) {
            err.message = err.message.replace('lstat', 'ensureSymlink')
            return callback(err)
          }
          return callback(null, {
            'toCwd': srcpath,
            'toDst': path.relative(dstdir, srcpath)
          })
        })
      }
    })
  }
}

function symlinkPathsSync (srcpath, dstpath) {
  let exists
  if (path.isAbsolute(srcpath)) {
    exists = fs.existsSync(srcpath)
    if (!exists) throw new Error('absolute srcpath does not exist')
    return {
      'toCwd': srcpath,
      'toDst': srcpath
    }
  } else {
    const dstdir = path.dirname(dstpath)
    const relativeToDst = path.join(dstdir, srcpath)
    exists = fs.existsSync(relativeToDst)
    if (exists) {
      return {
        'toCwd': relativeToDst,
        'toDst': srcpath
      }
    } else {
      exists = fs.existsSync(srcpath)
      if (!exists) throw new Error('relative srcpath does not exist')
      return {
        'toCwd': srcpath,
        'toDst': path.relative(dstdir, srcpath)
      }
    }
  }
}

module.exports = {
  symlinkPaths,
  symlinkPathsSync
}


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const fs = __webpack_require__(0)

function symlinkType (srcpath, type, callback) {
  callback = (typeof type === 'function') ? type : callback
  type = (typeof type === 'function') ? false : type
  if (type) return callback(null, type)
  fs.lstat(srcpath, (err, stats) => {
    if (err) return callback(null, 'file')
    type = (stats && stats.isDirectory()) ? 'dir' : 'file'
    callback(null, type)
  })
}

function symlinkTypeSync (srcpath, type) {
  let stats

  if (type) return type
  try {
    stats = fs.lstatSync(srcpath)
  } catch (e) {
    return 'file'
  }
  return (stats && stats.isDirectory()) ? 'dir' : 'file'
}

module.exports = {
  symlinkType,
  symlinkTypeSync
}


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const u = __webpack_require__(2).fromCallback
const path = __webpack_require__(1)
const fs = __webpack_require__(0)
const _mkdirs = __webpack_require__(3)
const mkdirs = _mkdirs.mkdirs
const mkdirsSync = _mkdirs.mkdirsSync

const _symlinkPaths = __webpack_require__(161)
const symlinkPaths = _symlinkPaths.symlinkPaths
const symlinkPathsSync = _symlinkPaths.symlinkPathsSync

const _symlinkType = __webpack_require__(162)
const symlinkType = _symlinkType.symlinkType
const symlinkTypeSync = _symlinkType.symlinkTypeSync

const pathExists = __webpack_require__(11).pathExists

function createSymlink (srcpath, dstpath, type, callback) {
  callback = (typeof type === 'function') ? type : callback
  type = (typeof type === 'function') ? false : type

  pathExists(dstpath, (err, destinationExists) => {
    if (err) return callback(err)
    if (destinationExists) return callback(null)
    symlinkPaths(srcpath, dstpath, (err, relative) => {
      if (err) return callback(err)
      srcpath = relative.toDst
      symlinkType(relative.toCwd, type, (err, type) => {
        if (err) return callback(err)
        const dir = path.dirname(dstpath)
        pathExists(dir, (err, dirExists) => {
          if (err) return callback(err)
          if (dirExists) return fs.symlink(srcpath, dstpath, type, callback)
          mkdirs(dir, err => {
            if (err) return callback(err)
            fs.symlink(srcpath, dstpath, type, callback)
          })
        })
      })
    })
  })
}

function createSymlinkSync (srcpath, dstpath, type, callback) {
  callback = (typeof type === 'function') ? type : callback
  type = (typeof type === 'function') ? false : type

  const destinationExists = fs.existsSync(dstpath)
  if (destinationExists) return undefined

  const relative = symlinkPathsSync(srcpath, dstpath)
  srcpath = relative.toDst
  type = symlinkTypeSync(relative.toCwd, type)
  const dir = path.dirname(dstpath)
  const exists = fs.existsSync(dir)
  if (exists) return fs.symlinkSync(srcpath, dstpath, type)
  mkdirsSync(dir)
  return fs.symlinkSync(srcpath, dstpath, type)
}

module.exports = {
  createSymlink: u(createSymlink),
  createSymlinkSync
}


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const assign = __webpack_require__(174)

const fs = {}

// Export graceful-fs:
assign(fs, __webpack_require__(87))
// Export extra methods:
assign(fs, __webpack_require__(156))
assign(fs, __webpack_require__(85))
assign(fs, __webpack_require__(3))
assign(fs, __webpack_require__(31))
assign(fs, __webpack_require__(165))
assign(fs, __webpack_require__(171))
assign(fs, __webpack_require__(170))
assign(fs, __webpack_require__(157))
assign(fs, __webpack_require__(159))
assign(fs, __webpack_require__(172))
assign(fs, __webpack_require__(11))

module.exports = fs


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const u = __webpack_require__(2).fromCallback
const jsonFile = __webpack_require__(47)

jsonFile.outputJsonSync = __webpack_require__(166)
jsonFile.outputJson = u(__webpack_require__(167))
// aliases
jsonFile.outputJSONSync = jsonFile.outputJSONSync
jsonFile.outputJSON = jsonFile.outputJson
jsonFile.writeJSON = jsonFile.writeJson
jsonFile.writeJSONSync = jsonFile.writeJsonSync
jsonFile.readJSON = jsonFile.readJson
jsonFile.readJSONSync = jsonFile.readJsonSync

module.exports = jsonFile


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const fs = __webpack_require__(0)
const path = __webpack_require__(1)
const mkdir = __webpack_require__(3)
const jsonFile = __webpack_require__(47)

function outputJsonSync (file, data, options) {
  const dir = path.dirname(file)

  if (!fs.existsSync(dir)) {
    mkdir.mkdirsSync(dir)
  }

  jsonFile.writeJsonSync(file, data, options)
}

module.exports = outputJsonSync


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const path = __webpack_require__(1)
const mkdir = __webpack_require__(3)
const pathExists = __webpack_require__(11).pathExists
const jsonFile = __webpack_require__(47)

function outputJson (file, data, options, callback) {
  if (typeof options === 'function') {
    callback = options
    options = {}
  }

  const dir = path.dirname(file)

  pathExists(dir, (err, itDoes) => {
    if (err) return callback(err)
    if (itDoes) return jsonFile.writeJson(file, data, options, callback)

    mkdir.mkdirs(dir, err => {
      if (err) return callback(err)
      jsonFile.writeJson(file, data, options, callback)
    })
  })
}

module.exports = outputJson


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const fs = __webpack_require__(0)
const path = __webpack_require__(1)
const invalidWin32Path = __webpack_require__(88).invalidWin32Path

const o777 = parseInt('0777', 8)

function mkdirsSync (p, opts, made) {
  if (!opts || typeof opts !== 'object') {
    opts = { mode: opts }
  }

  let mode = opts.mode
  const xfs = opts.fs || fs

  if (process.platform === 'win32' && invalidWin32Path(p)) {
    const errInval = new Error(p + ' contains invalid WIN32 path characters.')
    errInval.code = 'EINVAL'
    throw errInval
  }

  if (mode === undefined) {
    mode = o777 & (~process.umask())
  }
  if (!made) made = null

  p = path.resolve(p)

  try {
    xfs.mkdirSync(p, mode)
    made = made || p
  } catch (err0) {
    switch (err0.code) {
      case 'ENOENT':
        if (path.dirname(p) === p) throw err0
        made = mkdirsSync(path.dirname(p), opts, made)
        mkdirsSync(p, opts, made)
        break

      // In the case of any other error, just see if there's a dir
      // there already.  If so, then hooray!  If not, then something
      // is borked.
      default:
        let stat
        try {
          stat = xfs.statSync(p)
        } catch (err1) {
          throw err0
        }
        if (!stat.isDirectory()) throw err0
        break
    }
  }

  return made
}

module.exports = mkdirsSync


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const fs = __webpack_require__(0)
const path = __webpack_require__(1)
const invalidWin32Path = __webpack_require__(88).invalidWin32Path

const o777 = parseInt('0777', 8)

function mkdirs (p, opts, callback, made) {
  if (typeof opts === 'function') {
    callback = opts
    opts = {}
  } else if (!opts || typeof opts !== 'object') {
    opts = { mode: opts }
  }

  if (process.platform === 'win32' && invalidWin32Path(p)) {
    const errInval = new Error(p + ' contains invalid WIN32 path characters.')
    errInval.code = 'EINVAL'
    return callback(errInval)
  }

  let mode = opts.mode
  const xfs = opts.fs || fs

  if (mode === undefined) {
    mode = o777 & (~process.umask())
  }
  if (!made) made = null

  callback = callback || function () {}
  p = path.resolve(p)

  xfs.mkdir(p, mode, er => {
    if (!er) {
      made = made || p
      return callback(null, made)
    }
    switch (er.code) {
      case 'ENOENT':
        if (path.dirname(p) === p) return callback(er)
        mkdirs(path.dirname(p), opts, (er, made) => {
          if (er) callback(er, made)
          else mkdirs(p, opts, callback, made)
        })
        break

      // In the case of any other error, just see if there's a dir
      // there already.  If so, then hooray!  If not, then something
      // is borked.
      default:
        xfs.stat(p, (er2, stat) => {
          // if the stat fails, then that's super weird.
          // let the original error be the failure reason.
          if (er2 || !stat.isDirectory()) callback(er, made)
          else callback(null, made)
        })
        break
    }
  })
}

module.exports = mkdirs


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const fs = __webpack_require__(0)
const path = __webpack_require__(1)
const copySync = __webpack_require__(85).copySync
const removeSync = __webpack_require__(31).removeSync
const mkdirpSync = __webpack_require__(3).mkdirsSync
const buffer = __webpack_require__(89)

function moveSync (src, dest, options) {
  options = options || {}
  const overwrite = options.overwrite || options.clobber || false

  src = path.resolve(src)
  dest = path.resolve(dest)

  if (src === dest) return fs.accessSync(src)

  if (isSrcSubdir(src, dest)) throw new Error(`Cannot move '${src}' into itself '${dest}'.`)

  mkdirpSync(path.dirname(dest))
  tryRenameSync()

  function tryRenameSync () {
    if (overwrite) {
      try {
        return fs.renameSync(src, dest)
      } catch (err) {
        if (err.code === 'ENOTEMPTY' || err.code === 'EEXIST' || err.code === 'EPERM') {
          removeSync(dest)
          options.overwrite = false // just overwriteed it, no need to do it again
          return moveSync(src, dest, options)
        }

        if (err.code !== 'EXDEV') throw err
        return moveSyncAcrossDevice(src, dest, overwrite)
      }
    } else {
      try {
        fs.linkSync(src, dest)
        return fs.unlinkSync(src)
      } catch (err) {
        if (err.code === 'EXDEV' || err.code === 'EISDIR' || err.code === 'EPERM' || err.code === 'ENOTSUP') {
          return moveSyncAcrossDevice(src, dest, overwrite)
        }
        throw err
      }
    }
  }
}

function moveSyncAcrossDevice (src, dest, overwrite) {
  const stat = fs.statSync(src)

  if (stat.isDirectory()) {
    return moveDirSyncAcrossDevice(src, dest, overwrite)
  } else {
    return moveFileSyncAcrossDevice(src, dest, overwrite)
  }
}

function moveFileSyncAcrossDevice (src, dest, overwrite) {
  const BUF_LENGTH = 64 * 1024
  const _buff = buffer(BUF_LENGTH)

  const flags = overwrite ? 'w' : 'wx'

  const fdr = fs.openSync(src, 'r')
  const stat = fs.fstatSync(fdr)
  const fdw = fs.openSync(dest, flags, stat.mode)
  let bytesRead = 1
  let pos = 0

  while (bytesRead > 0) {
    bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos)
    fs.writeSync(fdw, _buff, 0, bytesRead)
    pos += bytesRead
  }

  fs.closeSync(fdr)
  fs.closeSync(fdw)
  return fs.unlinkSync(src)
}

function moveDirSyncAcrossDevice (src, dest, overwrite) {
  const options = {
    overwrite: false
  }

  if (overwrite) {
    removeSync(dest)
    tryCopySync()
  } else {
    tryCopySync()
  }

  function tryCopySync () {
    copySync(src, dest, options)
    return removeSync(src)
  }
}

// return true if dest is a subdir of src, otherwise false.
// extract dest base dir and check if that is the same as src basename
function isSrcSubdir (src, dest) {
  try {
    return fs.statSync(src).isDirectory() &&
           src !== dest &&
           dest.indexOf(src) > -1 &&
           dest.split(path.dirname(src) + path.sep)[1].split(path.sep)[0] === path.basename(src)
  } catch (e) {
    return false
  }
}

module.exports = {
  moveSync
}


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// most of this code was written by Andrew Kelley
// licensed under the BSD license: see
// https://github.com/andrewrk/node-mv/blob/master/package.json

// this needs a cleanup

const u = __webpack_require__(2).fromCallback
const fs = __webpack_require__(0)
const ncp = __webpack_require__(86)
const path = __webpack_require__(1)
const remove = __webpack_require__(31).remove
const mkdirp = __webpack_require__(3).mkdirs

function move (source, dest, options, callback) {
  if (typeof options === 'function') {
    callback = options
    options = {}
  }

  const shouldMkdirp = ('mkdirp' in options) ? options.mkdirp : true
  const overwrite = options.overwrite || options.clobber || false

  if (shouldMkdirp) {
    mkdirs()
  } else {
    doRename()
  }

  function mkdirs () {
    mkdirp(path.dirname(dest), err => {
      if (err) return callback(err)
      doRename()
    })
  }

  function doRename () {
    if (path.resolve(source) === path.resolve(dest)) {
      fs.access(source, callback)
    } else if (overwrite) {
      fs.rename(source, dest, err => {
        if (!err) return callback()

        if (err.code === 'ENOTEMPTY' || err.code === 'EEXIST') {
          remove(dest, err => {
            if (err) return callback(err)
            options.overwrite = false // just overwriteed it, no need to do it again
            move(source, dest, options, callback)
          })
          return
        }

        // weird Windows shit
        if (err.code === 'EPERM') {
          setTimeout(() => {
            remove(dest, err => {
              if (err) return callback(err)
              options.overwrite = false
              move(source, dest, options, callback)
            })
          }, 200)
          return
        }

        if (err.code !== 'EXDEV') return callback(err)
        moveAcrossDevice(source, dest, overwrite, callback)
      })
    } else {
      fs.link(source, dest, err => {
        if (err) {
          if (err.code === 'EXDEV' || err.code === 'EISDIR' || err.code === 'EPERM' || err.code === 'ENOTSUP') {
            moveAcrossDevice(source, dest, overwrite, callback)
            return
          }
          callback(err)
          return
        }
        fs.unlink(source, callback)
      })
    }
  }
}

function moveAcrossDevice (source, dest, overwrite, callback) {
  fs.stat(source, (err, stat) => {
    if (err) {
      callback(err)
      return
    }

    if (stat.isDirectory()) {
      moveDirAcrossDevice(source, dest, overwrite, callback)
    } else {
      moveFileAcrossDevice(source, dest, overwrite, callback)
    }
  })
}

function moveFileAcrossDevice (source, dest, overwrite, callback) {
  const flags = overwrite ? 'w' : 'wx'
  const ins = fs.createReadStream(source)
  const outs = fs.createWriteStream(dest, { flags })

  ins.on('error', err => {
    ins.destroy()
    outs.destroy()
    outs.removeListener('close', onClose)

    // may want to create a directory but `out` line above
    // creates an empty file for us: See #108
    // don't care about error here
    fs.unlink(dest, () => {
      // note: `err` here is from the input stream errror
      if (err.code === 'EISDIR' || err.code === 'EPERM') {
        moveDirAcrossDevice(source, dest, overwrite, callback)
      } else {
        callback(err)
      }
    })
  })

  outs.on('error', err => {
    ins.destroy()
    outs.destroy()
    outs.removeListener('close', onClose)
    callback(err)
  })

  outs.once('close', onClose)
  ins.pipe(outs)

  function onClose () {
    fs.unlink(source, callback)
  }
}

function moveDirAcrossDevice (source, dest, overwrite, callback) {
  const options = {
    overwrite: false
  }

  if (overwrite) {
    remove(dest, err => {
      if (err) return callback(err)
      startNcp()
    })
  } else {
    startNcp()
  }

  function startNcp () {
    ncp(source, dest, options, err => {
      if (err) return callback(err)
      remove(source, callback)
    })
  }
}

module.exports = {
  move: u(move)
}


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const u = __webpack_require__(2).fromCallback
const fs = __webpack_require__(0)
const path = __webpack_require__(1)
const mkdir = __webpack_require__(3)
const pathExists = __webpack_require__(11).pathExists

function outputFile (file, data, encoding, callback) {
  if (typeof encoding === 'function') {
    callback = encoding
    encoding = 'utf8'
  }

  const dir = path.dirname(file)
  pathExists(dir, (err, itDoes) => {
    if (err) return callback(err)
    if (itDoes) return fs.writeFile(file, data, encoding, callback)

    mkdir.mkdirs(dir, err => {
      if (err) return callback(err)

      fs.writeFile(file, data, encoding, callback)
    })
  })
}

function outputFileSync (file, data, encoding) {
  const dir = path.dirname(file)
  if (fs.existsSync(dir)) {
    return fs.writeFileSync.apply(fs, arguments)
  }
  mkdir.mkdirsSync(dir)
  fs.writeFileSync.apply(fs, arguments)
}

module.exports = {
  outputFile: u(outputFile),
  outputFileSync
}


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const fs = __webpack_require__(0)
const path = __webpack_require__(1)
const assert = __webpack_require__(112)

const isWindows = (process.platform === 'win32')

function defaults (options) {
  const methods = [
    'unlink',
    'chmod',
    'stat',
    'lstat',
    'rmdir',
    'readdir'
  ]
  methods.forEach(m => {
    options[m] = options[m] || fs[m]
    m = m + 'Sync'
    options[m] = options[m] || fs[m]
  })

  options.maxBusyTries = options.maxBusyTries || 3
}

function rimraf (p, options, cb) {
  let busyTries = 0

  if (typeof options === 'function') {
    cb = options
    options = {}
  }

  assert(p, 'rimraf: missing path')
  assert.equal(typeof p, 'string', 'rimraf: path should be a string')
  assert.equal(typeof cb, 'function', 'rimraf: callback function required')
  assert(options, 'rimraf: invalid options argument provided')
  assert.equal(typeof options, 'object', 'rimraf: options should be object')

  defaults(options)

  rimraf_(p, options, function CB (er) {
    if (er) {
      if (isWindows && (er.code === 'EBUSY' || er.code === 'ENOTEMPTY' || er.code === 'EPERM') &&
          busyTries < options.maxBusyTries) {
        busyTries++
        let time = busyTries * 100
        // try again, with the same exact callback as this one.
        return setTimeout(() => rimraf_(p, options, CB), time)
      }

      // already gone
      if (er.code === 'ENOENT') er = null
    }

    cb(er)
  })
}

// Two possible strategies.
// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR
// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR
//
// Both result in an extra syscall when you guess wrong.  However, there
// are likely far more normal files in the world than directories.  This
// is based on the assumption that a the average number of files per
// directory is >= 1.
//
// If anyone ever complains about this, then I guess the strategy could
// be made configurable somehow.  But until then, YAGNI.
function rimraf_ (p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  // sunos lets the root user unlink directories, which is... weird.
  // so we have to lstat here and make sure it's not a dir.
  options.lstat(p, (er, st) => {
    if (er && er.code === 'ENOENT') {
      return cb(null)
    }

    // Windows can EPERM on stat.  Life is suffering.
    if (er && er.code === 'EPERM' && isWindows) {
      return fixWinEPERM(p, options, er, cb)
    }

    if (st && st.isDirectory()) {
      return rmdir(p, options, er, cb)
    }

    options.unlink(p, er => {
      if (er) {
        if (er.code === 'ENOENT') {
          return cb(null)
        }
        if (er.code === 'EPERM') {
          return (isWindows)
            ? fixWinEPERM(p, options, er, cb)
            : rmdir(p, options, er, cb)
        }
        if (er.code === 'EISDIR') {
          return rmdir(p, options, er, cb)
        }
      }
      return cb(er)
    })
  })
}

function fixWinEPERM (p, options, er, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')
  if (er) {
    assert(er instanceof Error)
  }

  options.chmod(p, 666, er2 => {
    if (er2) {
      cb(er2.code === 'ENOENT' ? null : er)
    } else {
      options.stat(p, (er3, stats) => {
        if (er3) {
          cb(er3.code === 'ENOENT' ? null : er)
        } else if (stats.isDirectory()) {
          rmdir(p, options, er, cb)
        } else {
          options.unlink(p, cb)
        }
      })
    }
  })
}

function fixWinEPERMSync (p, options, er) {
  let stats

  assert(p)
  assert(options)
  if (er) {
    assert(er instanceof Error)
  }

  try {
    options.chmodSync(p, 666)
  } catch (er2) {
    if (er2.code === 'ENOENT') {
      return
    } else {
      throw er
    }
  }

  try {
    stats = options.statSync(p)
  } catch (er3) {
    if (er3.code === 'ENOENT') {
      return
    } else {
      throw er
    }
  }

  if (stats.isDirectory()) {
    rmdirSync(p, options, er)
  } else {
    options.unlinkSync(p)
  }
}

function rmdir (p, options, originalEr, cb) {
  assert(p)
  assert(options)
  if (originalEr) {
    assert(originalEr instanceof Error)
  }
  assert(typeof cb === 'function')

  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)
  // if we guessed wrong, and it's not a directory, then
  // raise the original error.
  options.rmdir(p, er => {
    if (er && (er.code === 'ENOTEMPTY' || er.code === 'EEXIST' || er.code === 'EPERM')) {
      rmkids(p, options, cb)
    } else if (er && er.code === 'ENOTDIR') {
      cb(originalEr)
    } else {
      cb(er)
    }
  })
}

function rmkids (p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  options.readdir(p, (er, files) => {
    if (er) return cb(er)

    let n = files.length
    let errState

    if (n === 0) return options.rmdir(p, cb)

    files.forEach(f => {
      rimraf(path.join(p, f), options, er => {
        if (errState) {
          return
        }
        if (er) return cb(errState = er)
        if (--n === 0) {
          options.rmdir(p, cb)
        }
      })
    })
  })
}

// this looks simpler, and is strictly *faster*, but will
// tie up the JavaScript thread and fail on excessively
// deep directory trees.
function rimrafSync (p, options) {
  let st

  options = options || {}
  defaults(options)

  assert(p, 'rimraf: missing path')
  assert.equal(typeof p, 'string', 'rimraf: path should be a string')
  assert(options, 'rimraf: missing options')
  assert.equal(typeof options, 'object', 'rimraf: options should be object')

  try {
    st = options.lstatSync(p)
  } catch (er) {
    if (er.code === 'ENOENT') {
      return
    }

    // Windows can EPERM on stat.  Life is suffering.
    if (er.code === 'EPERM' && isWindows) {
      fixWinEPERMSync(p, options, er)
    }
  }

  try {
    // sunos lets the root user unlink directories, which is... weird.
    if (st && st.isDirectory()) {
      rmdirSync(p, options, null)
    } else {
      options.unlinkSync(p)
    }
  } catch (er) {
    if (er.code === 'ENOENT') {
      return
    } else if (er.code === 'EPERM') {
      return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)
    } else if (er.code !== 'EISDIR') {
      throw er
    }
    rmdirSync(p, options, er)
  }
}

function rmdirSync (p, options, originalEr) {
  assert(p)
  assert(options)
  if (originalEr) {
    assert(originalEr instanceof Error)
  }

  try {
    options.rmdirSync(p)
  } catch (er) {
    if (er.code === 'ENOTDIR') {
      throw originalEr
    } else if (er.code === 'ENOTEMPTY' || er.code === 'EEXIST' || er.code === 'EPERM') {
      rmkidsSync(p, options)
    } else if (er.code !== 'ENOENT') {
      throw er
    }
  }
}

function rmkidsSync (p, options) {
  assert(p)
  assert(options)
  options.readdirSync(p).forEach(f => rimrafSync(path.join(p, f), options))
  options.rmdirSync(p, options)
}

module.exports = rimraf
rimraf.sync = rimrafSync


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// simple mutable assign
function assign () {
  const args = [].slice.call(arguments).filter(i => i)
  const dest = args.shift()
  args.forEach(src => {
    Object.keys(src).forEach(key => {
      dest[key] = src[key]
    })
  })

  return dest
}

module.exports = assign


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const fs = __webpack_require__(0)
const os = __webpack_require__(242)
const path = __webpack_require__(1)

// HFS, ext{2,3}, FAT do not, Node.js v0.10 does not
function hasMillisResSync () {
  let tmpfile = path.join('millis-test-sync' + Date.now().toString() + Math.random().toString().slice(2))
  tmpfile = path.join(os.tmpdir(), tmpfile)

  // 550 millis past UNIX epoch
  const d = new Date(1435410243862)
  fs.writeFileSync(tmpfile, 'https://github.com/jprichardson/node-fs-extra/pull/141')
  const fd = fs.openSync(tmpfile, 'r+')
  fs.futimesSync(fd, d, d)
  fs.closeSync(fd)
  return fs.statSync(tmpfile).mtime > 1435410243000
}

function hasMillisRes (callback) {
  let tmpfile = path.join('millis-test' + Date.now().toString() + Math.random().toString().slice(2))
  tmpfile = path.join(os.tmpdir(), tmpfile)

  // 550 millis past UNIX epoch
  const d = new Date(1435410243862)
  fs.writeFile(tmpfile, 'https://github.com/jprichardson/node-fs-extra/pull/141', err => {
    if (err) return callback(err)
    fs.open(tmpfile, 'r+', (err, fd) => {
      if (err) return callback(err)
      fs.futimes(fd, d, d, err => {
        if (err) return callback(err)
        fs.close(fd, err => {
          if (err) return callback(err)
          fs.stat(tmpfile, (err, stats) => {
            if (err) return callback(err)
            callback(null, stats.mtime > 1435410243000)
          })
        })
      })
    })
  })
}

function timeRemoveMillis (timestamp) {
  if (typeof timestamp === 'number') {
    return Math.floor(timestamp / 1000) * 1000
  } else if (timestamp instanceof Date) {
    return new Date(Math.floor(timestamp.getTime() / 1000) * 1000)
  } else {
    throw new Error('fs-extra: timeRemoveMillis() unknown parameter type')
  }
}

function utimesMillis (path, atime, mtime, callback) {
  // if (!HAS_MILLIS_RES) return fs.utimes(path, atime, mtime, callback)
  fs.open(path, 'r+', (err, fd) => {
    if (err) return callback(err)
    fs.futimes(fd, atime, mtime, futimesErr => {
      fs.close(fd, closeErr => {
        if (callback) callback(futimesErr || closeErr)
      })
    })
  })
}

module.exports = {
  hasMillisRes,
  hasMillisResSync,
  timeRemoveMillis,
  utimesMillis
}


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

var _fs
try {
  _fs = __webpack_require__(0)
} catch (_) {
  _fs = __webpack_require__(53)
}

function readFile (file, options, callback) {
  if (callback == null) {
    callback = options
    options = {}
  }

  if (typeof options === 'string') {
    options = {encoding: options}
  }

  options = options || {}
  var fs = options.fs || _fs

  var shouldThrow = true
  // DO NOT USE 'passParsingErrors' THE NAME WILL CHANGE!!!, use 'throws' instead
  if ('passParsingErrors' in options) {
    shouldThrow = options.passParsingErrors
  } else if ('throws' in options) {
    shouldThrow = options.throws
  }

  fs.readFile(file, options, function (err, data) {
    if (err) return callback(err)

    data = stripBom(data)

    var obj
    try {
      obj = JSON.parse(data, options ? options.reviver : null)
    } catch (err2) {
      if (shouldThrow) {
        err2.message = file + ': ' + err2.message
        return callback(err2)
      } else {
        return callback(null, null)
      }
    }

    callback(null, obj)
  })
}

function readFileSync (file, options) {
  options = options || {}
  if (typeof options === 'string') {
    options = {encoding: options}
  }

  var fs = options.fs || _fs

  var shouldThrow = true
  // DO NOT USE 'passParsingErrors' THE NAME WILL CHANGE!!!, use 'throws' instead
  if ('passParsingErrors' in options) {
    shouldThrow = options.passParsingErrors
  } else if ('throws' in options) {
    shouldThrow = options.throws
  }

  try {
    var content = fs.readFileSync(file, options)
    content = stripBom(content)
    return JSON.parse(content, options.reviver)
  } catch (err) {
    if (shouldThrow) {
      err.message = file + ': ' + err.message
      throw err
    } else {
      return null
    }
  }
}

function writeFile (file, obj, options, callback) {
  if (callback == null) {
    callback = options
    options = {}
  }
  options = options || {}
  var fs = options.fs || _fs

  var spaces = typeof options === 'object' && options !== null
    ? 'spaces' in options
    ? options.spaces : this.spaces
    : this.spaces

  var str = ''
  try {
    str = JSON.stringify(obj, options ? options.replacer : null, spaces) + '\n'
  } catch (err) {
    // Need to return whether a callback was passed or not
    if (callback) callback(err, null)
    return
  }

  fs.writeFile(file, str, options, callback)
}

function writeFileSync (file, obj, options) {
  options = options || {}
  var fs = options.fs || _fs

  var spaces = typeof options === 'object' && options !== null
    ? 'spaces' in options
    ? options.spaces : this.spaces
    : this.spaces

  var str = JSON.stringify(obj, options.replacer, spaces) + '\n'
  // not sure if fs.writeFileSync returns anything, but just in case
  return fs.writeFileSync(file, str, options)
}

function stripBom (content) {
  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified
  if (Buffer.isBuffer(content)) content = content.toString('utf8')
  content = content.replace(/^\uFEFF/, '')
  return content
}

var jsonfile = {
  spaces: null,
  readFile: readFile,
  readFileSync: readFileSync,
  writeFile: writeFile,
  writeFileSync: writeFileSync
}

module.exports = jsonfile


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = clone

function clone (obj) {
  if (obj === null || typeof obj !== 'object')
    return obj

  if (obj instanceof Object)
    var copy = { __proto__: obj.__proto__ }
  else
    var copy = Object.create(null)

  Object.getOwnPropertyNames(obj).forEach(function (key) {
    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))
  })

  return copy
}


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

var Stream = __webpack_require__(243).Stream

module.exports = legacy

function legacy (fs) {
  return {
    ReadStream: ReadStream,
    WriteStream: WriteStream
  }

  function ReadStream (path, options) {
    if (!(this instanceof ReadStream)) return new ReadStream(path, options);

    Stream.call(this);

    var self = this;

    this.path = path;
    this.fd = null;
    this.readable = true;
    this.paused = false;

    this.flags = 'r';
    this.mode = 438; /*=0666*/
    this.bufferSize = 64 * 1024;

    options = options || {};

    // Mixin options into this
    var keys = Object.keys(options);
    for (var index = 0, length = keys.length; index < length; index++) {
      var key = keys[index];
      this[key] = options[key];
    }

    if (this.encoding) this.setEncoding(this.encoding);

    if (this.start !== undefined) {
      if ('number' !== typeof this.start) {
        throw TypeError('start must be a Number');
      }
      if (this.end === undefined) {
        this.end = Infinity;
      } else if ('number' !== typeof this.end) {
        throw TypeError('end must be a Number');
      }

      if (this.start > this.end) {
        throw new Error('start must be <= end');
      }

      this.pos = this.start;
    }

    if (this.fd !== null) {
      process.nextTick(function() {
        self._read();
      });
      return;
    }

    fs.open(this.path, this.flags, this.mode, function (err, fd) {
      if (err) {
        self.emit('error', err);
        self.readable = false;
        return;
      }

      self.fd = fd;
      self.emit('open', fd);
      self._read();
    })
  }

  function WriteStream (path, options) {
    if (!(this instanceof WriteStream)) return new WriteStream(path, options);

    Stream.call(this);

    this.path = path;
    this.fd = null;
    this.writable = true;

    this.flags = 'w';
    this.encoding = 'binary';
    this.mode = 438; /*=0666*/
    this.bytesWritten = 0;

    options = options || {};

    // Mixin options into this
    var keys = Object.keys(options);
    for (var index = 0, length = keys.length; index < length; index++) {
      var key = keys[index];
      this[key] = options[key];
    }

    if (this.start !== undefined) {
      if ('number' !== typeof this.start) {
        throw TypeError('start must be a Number');
      }
      if (this.start < 0) {
        throw new Error('start must be >= zero');
      }

      this.pos = this.start;
    }

    this.busy = false;
    this._queue = [];

    if (this.fd === null) {
      this._open = fs.open;
      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);
      this.flush();
    }
  }
}


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

var constants = __webpack_require__(239)

var origCwd = process.cwd
var cwd = null

var platform = __webpack_require__.i({"NODE_ENV":"production","PUBLIC_URL":".","PLATFORM":"standalone"}).GRACEFUL_FS_PLATFORM || process.platform

process.cwd = function() {
  if (!cwd)
    cwd = origCwd.call(process)
  return cwd
}
try {
  process.cwd()
} catch (er) {}

var chdir = process.chdir
process.chdir = function(d) {
  cwd = null
  chdir.call(process, d)
}

module.exports = patch

function patch (fs) {
  // (re-)implement some things that are known busted or missing.

  // lchmod, broken prior to 0.6.2
  // back-port the fix here.
  if (constants.hasOwnProperty('O_SYMLINK') &&
      process.version.match(/^v0\.6\.[0-2]|^v0\.5\./)) {
    patchLchmod(fs)
  }

  // lutimes implementation, or no-op
  if (!fs.lutimes) {
    patchLutimes(fs)
  }

  // https://github.com/isaacs/node-graceful-fs/issues/4
  // Chown should not fail on einval or eperm if non-root.
  // It should not fail on enosys ever, as this just indicates
  // that a fs doesn't support the intended operation.

  fs.chown = chownFix(fs.chown)
  fs.fchown = chownFix(fs.fchown)
  fs.lchown = chownFix(fs.lchown)

  fs.chmod = chmodFix(fs.chmod)
  fs.fchmod = chmodFix(fs.fchmod)
  fs.lchmod = chmodFix(fs.lchmod)

  fs.chownSync = chownFixSync(fs.chownSync)
  fs.fchownSync = chownFixSync(fs.fchownSync)
  fs.lchownSync = chownFixSync(fs.lchownSync)

  fs.chmodSync = chmodFixSync(fs.chmodSync)
  fs.fchmodSync = chmodFixSync(fs.fchmodSync)
  fs.lchmodSync = chmodFixSync(fs.lchmodSync)

  fs.stat = statFix(fs.stat)
  fs.fstat = statFix(fs.fstat)
  fs.lstat = statFix(fs.lstat)

  fs.statSync = statFixSync(fs.statSync)
  fs.fstatSync = statFixSync(fs.fstatSync)
  fs.lstatSync = statFixSync(fs.lstatSync)

  // if lchmod/lchown do not exist, then make them no-ops
  if (!fs.lchmod) {
    fs.lchmod = function (path, mode, cb) {
      if (cb) process.nextTick(cb)
    }
    fs.lchmodSync = function () {}
  }
  if (!fs.lchown) {
    fs.lchown = function (path, uid, gid, cb) {
      if (cb) process.nextTick(cb)
    }
    fs.lchownSync = function () {}
  }

  // on Windows, A/V software can lock the directory, causing this
  // to fail with an EACCES or EPERM if the directory contains newly
  // created files.  Try again on failure, for up to 60 seconds.

  // Set the timeout this long because some Windows Anti-Virus, such as Parity
  // bit9, may lock files for up to a minute, causing npm package install
  // failures. Also, take care to yield the scheduler. Windows scheduling gives
  // CPU to a busy looping process, which can cause the program causing the lock
  // contention to be starved of CPU by node, so the contention doesn't resolve.
  if (platform === "win32") {
    fs.rename = (function (fs$rename) { return function (from, to, cb) {
      var start = Date.now()
      var backoff = 0;
      fs$rename(from, to, function CB (er) {
        if (er
            && (er.code === "EACCES" || er.code === "EPERM")
            && Date.now() - start < 60000) {
          setTimeout(function() {
            fs.stat(to, function (stater, st) {
              if (stater && stater.code === "ENOENT")
                fs$rename(from, to, CB);
              else
                cb(er)
            })
          }, backoff)
          if (backoff < 100)
            backoff += 10;
          return;
        }
        if (cb) cb(er)
      })
    }})(fs.rename)
  }

  // if read() returns EAGAIN, then just try it again.
  fs.read = (function (fs$read) { return function (fd, buffer, offset, length, position, callback_) {
    var callback
    if (callback_ && typeof callback_ === 'function') {
      var eagCounter = 0
      callback = function (er, _, __) {
        if (er && er.code === 'EAGAIN' && eagCounter < 10) {
          eagCounter ++
          return fs$read.call(fs, fd, buffer, offset, length, position, callback)
        }
        callback_.apply(this, arguments)
      }
    }
    return fs$read.call(fs, fd, buffer, offset, length, position, callback)
  }})(fs.read)

  fs.readSync = (function (fs$readSync) { return function (fd, buffer, offset, length, position) {
    var eagCounter = 0
    while (true) {
      try {
        return fs$readSync.call(fs, fd, buffer, offset, length, position)
      } catch (er) {
        if (er.code === 'EAGAIN' && eagCounter < 10) {
          eagCounter ++
          continue
        }
        throw er
      }
    }
  }})(fs.readSync)

  function patchLchmod (fs) {
    fs.lchmod = function (path, mode, callback) {
      fs.open( path
             , constants.O_WRONLY | constants.O_SYMLINK
             , mode
             , function (err, fd) {
        if (err) {
          if (callback) callback(err)
          return
        }
        // prefer to return the chmod error, if one occurs,
        // but still try to close, and report closing errors if they occur.
        fs.fchmod(fd, mode, function (err) {
          fs.close(fd, function(err2) {
            if (callback) callback(err || err2)
          })
        })
      })
    }

    fs.lchmodSync = function (path, mode) {
      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)

      // prefer to return the chmod error, if one occurs,
      // but still try to close, and report closing errors if they occur.
      var threw = true
      var ret
      try {
        ret = fs.fchmodSync(fd, mode)
        threw = false
      } finally {
        if (threw) {
          try {
            fs.closeSync(fd)
          } catch (er) {}
        } else {
          fs.closeSync(fd)
        }
      }
      return ret
    }
  }

  function patchLutimes (fs) {
    if (constants.hasOwnProperty("O_SYMLINK")) {
      fs.lutimes = function (path, at, mt, cb) {
        fs.open(path, constants.O_SYMLINK, function (er, fd) {
          if (er) {
            if (cb) cb(er)
            return
          }
          fs.futimes(fd, at, mt, function (er) {
            fs.close(fd, function (er2) {
              if (cb) cb(er || er2)
            })
          })
        })
      }

      fs.lutimesSync = function (path, at, mt) {
        var fd = fs.openSync(path, constants.O_SYMLINK)
        var ret
        var threw = true
        try {
          ret = fs.futimesSync(fd, at, mt)
          threw = false
        } finally {
          if (threw) {
            try {
              fs.closeSync(fd)
            } catch (er) {}
          } else {
            fs.closeSync(fd)
          }
        }
        return ret
      }

    } else {
      fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }
      fs.lutimesSync = function () {}
    }
  }

  function chmodFix (orig) {
    if (!orig) return orig
    return function (target, mode, cb) {
      return orig.call(fs, target, mode, function (er) {
        if (chownErOk(er)) er = null
        if (cb) cb.apply(this, arguments)
      })
    }
  }

  function chmodFixSync (orig) {
    if (!orig) return orig
    return function (target, mode) {
      try {
        return orig.call(fs, target, mode)
      } catch (er) {
        if (!chownErOk(er)) throw er
      }
    }
  }


  function chownFix (orig) {
    if (!orig) return orig
    return function (target, uid, gid, cb) {
      return orig.call(fs, target, uid, gid, function (er) {
        if (chownErOk(er)) er = null
        if (cb) cb.apply(this, arguments)
      })
    }
  }

  function chownFixSync (orig) {
    if (!orig) return orig
    return function (target, uid, gid) {
      try {
        return orig.call(fs, target, uid, gid)
      } catch (er) {
        if (!chownErOk(er)) throw er
      }
    }
  }


  function statFix (orig) {
    if (!orig) return orig
    // Older versions of Node erroneously returned signed integers for
    // uid + gid.
    return function (target, cb) {
      return orig.call(fs, target, function (er, stats) {
        if (!stats) return cb.apply(this, arguments)
        if (stats.uid < 0) stats.uid += 0x100000000
        if (stats.gid < 0) stats.gid += 0x100000000
        if (cb) cb.apply(this, arguments)
      })
    }
  }

  function statFixSync (orig) {
    if (!orig) return orig
    // Older versions of Node erroneously returned signed integers for
    // uid + gid.
    return function (target) {
      var stats = orig.call(fs, target)
      if (stats.uid < 0) stats.uid += 0x100000000
      if (stats.gid < 0) stats.gid += 0x100000000
      return stats;
    }
  }

  // ENOSYS means that the fs doesn't support the op. Just ignore
  // that, because it doesn't matter.
  //
  // if there's no getuid, or if getuid() is something other
  // than 0, and the error is EINVAL or EPERM, then just ignore
  // it.
  //
  // This specific case is a silent failure in cp, install, tar,
  // and most other unix tools that manage permissions.
  //
  // When running as root, or if other types of errors are
  // encountered, then it's strict.
  function chownErOk (er) {
    if (!er)
      return true

    if (er.code === "ENOSYS")
      return true

    var nonroot = !process.getuid || process.getuid() !== 0
    if (nonroot) {
      if (er.code === "EINVAL" || er.code === "EPERM")
        return true
    }

    return false
  }
}


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var ReactIs = __webpack_require__(95);
var REACT_STATICS = {
    childContextTypes: true,
    contextType: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromError: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
};

var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
};

var FORWARD_REF_STATICS = {
    '$$typeof': true,
    render: true,
    defaultProps: true,
    displayName: true,
    propTypes: true
};

var MEMO_STATICS = {
    '$$typeof': true,
    compare: true,
    defaultProps: true,
    displayName: true,
    propTypes: true,
    type: true
};

var TYPE_STATICS = {};
TYPE_STATICS[ReactIs.ForwardRef] = FORWARD_REF_STATICS;

function getStatics(component) {
    if (ReactIs.isMemo(component)) {
        return MEMO_STATICS;
    }
    return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;

function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') {
        // don't hoist over string (html) components

        if (objectPrototype) {
            var inheritedComponent = getPrototypeOf(sourceComponent);
            if (inheritedComponent && inheritedComponent !== objectPrototype) {
                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
            }
        }

        var keys = getOwnPropertyNames(sourceComponent);

        if (getOwnPropertySymbols) {
            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }

        var targetStatics = getStatics(targetComponent);
        var sourceStatics = getStatics(sourceComponent);

        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                try {
                    // Avoid failures from read-only properties
                    defineProperty(targetComponent, key, descriptor);
                } catch (e) {}
            }
        }

        return targetComponent;
    }

    return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function(condition, format, a, b, c, d, e, f) {
  if (false) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error(
        'Minified exception occurred; use the non-minified dev environment ' +
        'for the full error message and additional helpful warnings.'
      );
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(
        format.replace(/%s/g, function() { return args[argIndex++]; })
      );
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
};

module.exports = invariant;


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(91),
    getRawTag = __webpack_require__(185),
    objectToString = __webpack_require__(186);

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),
/* 183 */
/***/ (function(module, exports) {

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(187);

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(91);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),
/* 186 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),
/* 187 */
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__(183);

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),
/* 189 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),
/* 190 */
/***/ (function(module, exports) {

// Generated by CoffeeScript 1.12.2
(function() {
  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
    module.exports = function() {
      return performance.now();
    };
  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
    module.exports = function() {
      return (getNanoSeconds() - nodeLoadTime) / 1e6;
    };
    hrtime = process.hrtime;
    getNanoSeconds = function() {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };
    moduleLoadTime = getNanoSeconds();
    upTime = process.uptime() * 1e9;
    nodeLoadTime = moduleLoadTime - upTime;
  } else if (Date.now) {
    module.exports = function() {
      return Date.now() - loadTime;
    };
    loadTime = Date.now();
  } else {
    module.exports = function() {
      return new Date().getTime() - loadTime;
    };
    loadTime = new Date().getTime();
  }

}).call(this);

//# sourceMappingURL=performance-now.js.map


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


//This file contains the ES6 extensions to the core Promises/A+ API

var Promise = __webpack_require__(93);

module.exports = Promise;

/* Static Functions */

var TRUE = valuePromise(true);
var FALSE = valuePromise(false);
var NULL = valuePromise(null);
var UNDEFINED = valuePromise(undefined);
var ZERO = valuePromise(0);
var EMPTYSTRING = valuePromise('');

function valuePromise(value) {
  var p = new Promise(Promise._44);
  p._83 = 1;
  p._18 = value;
  return p;
}
Promise.resolve = function (value) {
  if (value instanceof Promise) return value;

  if (value === null) return NULL;
  if (value === undefined) return UNDEFINED;
  if (value === true) return TRUE;
  if (value === false) return FALSE;
  if (value === 0) return ZERO;
  if (value === '') return EMPTYSTRING;

  if (typeof value === 'object' || typeof value === 'function') {
    try {
      var then = value.then;
      if (typeof then === 'function') {
        return new Promise(then.bind(value));
      }
    } catch (ex) {
      return new Promise(function (resolve, reject) {
        reject(ex);
      });
    }
  }
  return valuePromise(value);
};

Promise.all = function (arr) {
  var args = Array.prototype.slice.call(arr);

  return new Promise(function (resolve, reject) {
    if (args.length === 0) return resolve([]);
    var remaining = args.length;
    function res(i, val) {
      if (val && (typeof val === 'object' || typeof val === 'function')) {
        if (val instanceof Promise && val.then === Promise.prototype.then) {
          while (val._83 === 3) {
            val = val._18;
          }
          if (val._83 === 1) return res(i, val._18);
          if (val._83 === 2) reject(val._18);
          val.then(function (val) {
            res(i, val);
          }, reject);
          return;
        } else {
          var then = val.then;
          if (typeof then === 'function') {
            var p = new Promise(then.bind(val));
            p.then(function (val) {
              res(i, val);
            }, reject);
            return;
          }
        }
      }
      args[i] = val;
      if (--remaining === 0) {
        resolve(args);
      }
    }
    for (var i = 0; i < args.length; i++) {
      res(i, args[i]);
    }
  });
};

Promise.reject = function (value) {
  return new Promise(function (resolve, reject) {
    reject(value);
  });
};

Promise.race = function (values) {
  return new Promise(function (resolve, reject) {
    values.forEach(function(value){
      Promise.resolve(value).then(resolve, reject);
    });
  });
};

/* Prototype Methods */

Promise.prototype['catch'] = function (onRejected) {
  return this.then(null, onRejected);
};


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Promise = __webpack_require__(93);

var DEFAULT_WHITELIST = [
  ReferenceError,
  TypeError,
  RangeError
];

var enabled = false;
exports.disable = disable;
function disable() {
  enabled = false;
  Promise._47 = null;
  Promise._71 = null;
}

exports.enable = enable;
function enable(options) {
  options = options || {};
  if (enabled) disable();
  enabled = true;
  var id = 0;
  var displayId = 0;
  var rejections = {};
  Promise._47 = function (promise) {
    if (
      promise._83 === 2 && // IS REJECTED
      rejections[promise._56]
    ) {
      if (rejections[promise._56].logged) {
        onHandled(promise._56);
      } else {
        clearTimeout(rejections[promise._56].timeout);
      }
      delete rejections[promise._56];
    }
  };
  Promise._71 = function (promise, err) {
    if (promise._75 === 0) { // not yet handled
      promise._56 = id++;
      rejections[promise._56] = {
        displayId: null,
        error: err,
        timeout: setTimeout(
          onUnhandled.bind(null, promise._56),
          // For reference errors and type errors, this almost always
          // means the programmer made a mistake, so log them after just
          // 100ms
          // otherwise, wait 2 seconds to see if they get handled
          matchWhitelist(err, DEFAULT_WHITELIST)
            ? 100
            : 2000
        ),
        logged: false
      };
    }
  };
  function onUnhandled(id) {
    if (
      options.allRejections ||
      matchWhitelist(
        rejections[id].error,
        options.whitelist || DEFAULT_WHITELIST
      )
    ) {
      rejections[id].displayId = displayId++;
      if (options.onUnhandled) {
        rejections[id].logged = true;
        options.onUnhandled(
          rejections[id].displayId,
          rejections[id].error
        );
      } else {
        rejections[id].logged = true;
        logError(
          rejections[id].displayId,
          rejections[id].error
        );
      }
    }
  }
  function onHandled(id) {
    if (rejections[id].logged) {
      if (options.onHandled) {
        options.onHandled(rejections[id].displayId, rejections[id].error);
      } else if (!rejections[id].onUnhandled) {
        console.warn(
          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'
        );
        console.warn(
          '  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id ' +
          rejections[id].displayId + '.'
        );
      }
    }
  }
}

function logError(id, error) {
  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');
  var errStr = (error && (error.stack || error)) + '';
  errStr.split('\n').forEach(function (line) {
    console.warn('  ' + line);
  });
}

function matchWhitelist(error, list) {
  return list.some(function (cls) {
    return error instanceof cls;
  });
}

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(194);

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

var now = __webpack_require__(190)
  , root = typeof window === 'undefined' ? global : window
  , vendors = ['moz', 'webkit']
  , suffix = 'AnimationFrame'
  , raf = root['request' + suffix]
  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]

for(var i = 0; !raf && i < vendors.length; i++) {
  raf = root[vendors[i] + 'Request' + suffix]
  caf = root[vendors[i] + 'Cancel' + suffix]
      || root[vendors[i] + 'CancelRequest' + suffix]
}

// Some versions of FF have rAF but not cAF
if(!raf || !caf) {
  var last = 0
    , id = 0
    , queue = []
    , frameDuration = 1000 / 60

  raf = function(callback) {
    if(queue.length === 0) {
      var _now = now()
        , next = Math.max(0, frameDuration - (_now - last))
      last = next + _now
      setTimeout(function() {
        var cp = queue.slice(0)
        // Clear queue here to prevent
        // callbacks from appending listeners
        // to the current frame's queue
        queue.length = 0
        for(var i = 0; i < cp.length; i++) {
          if(!cp[i].cancelled) {
            try{
              cp[i].callback(last)
            } catch(e) {
              setTimeout(function() { throw e }, 0)
            }
          }
        }
      }, Math.round(next))
    }
    queue.push({
      handle: ++id,
      callback: callback,
      cancelled: false
    })
    return id
  }

  caf = function(handle) {
    for(var i = 0; i < queue.length; i++) {
      if(queue[i].handle === handle) {
        queue[i].cancelled = true
      }
    }
  }
}

module.exports = function(fn) {
  // Wrap in a new function to prevent
  // `cancel` potentially being assigned
  // to the native rAF function
  return raf.call(root, fn)
}
module.exports.cancel = function() {
  caf.apply(root, arguments)
}
module.exports.polyfill = function(object) {
  if (!object) {
    object = root;
  }
  object.requestAnimationFrame = raf
  object.cancelAnimationFrame = caf
}


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(195).polyfill()


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.1.0
 * react-dom.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
var aa=__webpack_require__(7),m=__webpack_require__(146),A=__webpack_require__(48),B=__webpack_require__(46),ca=__webpack_require__(145),da=__webpack_require__(149),ea=__webpack_require__(152),ha=__webpack_require__(147),ia=__webpack_require__(148),C=__webpack_require__(84);
function D(a){for(var b=arguments.length-1,c="Minified React error #"+a+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\x3d"+a,d=0;d<b;d++)c+="\x26args[]\x3d"+encodeURIComponent(arguments[d+1]);b=Error(c+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.");b.name="Invariant Violation";b.framesToPop=1;throw b;}aa?void 0:D("227");
var la={children:!0,dangerouslySetInnerHTML:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,suppressHydrationWarning:!0,style:!0};function qa(a,b){return(a&b)===b}
var ra={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(a){var b=ra,c=a.Properties||{},d=a.DOMAttributeNamespaces||{},e=a.DOMAttributeNames||{};a=a.DOMMutationMethods||{};for(var f in c){sa.hasOwnProperty(f)?D("48",f):void 0;var g=f.toLowerCase(),k=c[f];g={attributeName:g,attributeNamespace:null,propertyName:f,mutationMethod:null,mustUseProperty:qa(k,b.MUST_USE_PROPERTY),
hasBooleanValue:qa(k,b.HAS_BOOLEAN_VALUE),hasNumericValue:qa(k,b.HAS_NUMERIC_VALUE),hasPositiveNumericValue:qa(k,b.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:qa(k,b.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:qa(k,b.HAS_STRING_BOOLEAN_VALUE)};1>=g.hasBooleanValue+g.hasNumericValue+g.hasOverloadedBooleanValue?void 0:D("50",f);e.hasOwnProperty(f)&&(g.attributeName=e[f]);d.hasOwnProperty(f)&&(g.attributeNamespace=d[f]);a.hasOwnProperty(f)&&(g.mutationMethod=a[f]);sa[f]=g}}},sa={};
function ta(a,b){if(la.hasOwnProperty(a)||2<a.length&&("o"===a[0]||"O"===a[0])&&("n"===a[1]||"N"===a[1]))return!1;if(null===b)return!0;switch(typeof b){case "boolean":return la.hasOwnProperty(a)?a=!0:(b=ua(a))?a=b.hasBooleanValue||b.hasStringBooleanValue||b.hasOverloadedBooleanValue:(a=a.toLowerCase().slice(0,5),a="data-"===a||"aria-"===a),a;case "undefined":case "number":case "string":case "object":return!0;default:return!1}}function ua(a){return sa.hasOwnProperty(a)?sa[a]:null}
var va=ra,wa=va.MUST_USE_PROPERTY,H=va.HAS_BOOLEAN_VALUE,xa=va.HAS_NUMERIC_VALUE,ya=va.HAS_POSITIVE_NUMERIC_VALUE,za=va.HAS_STRING_BOOLEAN_VALUE,Aa={Properties:{allowFullScreen:H,autoFocus:za,async:H,autoPlay:H,capture:H,checked:wa|H,cols:ya,contentEditable:za,controls:H,"default":H,defer:H,disabled:H,download:va.HAS_OVERLOADED_BOOLEAN_VALUE,draggable:za,formNoValidate:H,hidden:H,loop:H,multiple:wa|H,muted:wa|H,noValidate:H,open:H,playsInline:H,readOnly:H,required:H,reversed:H,rows:ya,rowSpan:xa,
scoped:H,seamless:H,selected:wa|H,size:ya,start:xa,span:ya,spellCheck:za,style:0,tabIndex:0,itemScope:H,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:za},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMMutationMethods:{value:function(a,b){if(null==b)return a.removeAttribute("value");"number"!==a.type||!1===a.hasAttribute("value")?a.setAttribute("value",""+b):a.validity&&!a.validity.badInput&&a.ownerDocument.activeElement!==a&&
a.setAttribute("value",""+b)}}},Ba=va.HAS_STRING_BOOLEAN_VALUE,K={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"},Ca={Properties:{autoReverse:Ba,externalResourcesRequired:Ba,preserveAlpha:Ba},DOMAttributeNames:{autoReverse:"autoReverse",externalResourcesRequired:"externalResourcesRequired",preserveAlpha:"preserveAlpha"},DOMAttributeNamespaces:{xlinkActuate:K.xlink,xlinkArcrole:K.xlink,xlinkHref:K.xlink,xlinkRole:K.xlink,xlinkShow:K.xlink,xlinkTitle:K.xlink,xlinkType:K.xlink,
xmlBase:K.xml,xmlLang:K.xml,xmlSpace:K.xml}},Da=/[\-\:]([a-z])/g;function Ea(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space".split(" ").forEach(function(a){var b=a.replace(Da,
Ea);Ca.Properties[b]=0;Ca.DOMAttributeNames[b]=a});va.injectDOMPropertyConfig(Aa);va.injectDOMPropertyConfig(Ca);
var N={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(a){"function"!==typeof a.invokeGuardedCallback?D("197"):void 0;Ha=a.invokeGuardedCallback}},invokeGuardedCallback:function(a,b,c,d,e,f,g,k,h){Ha.apply(N,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,k,h){N.invokeGuardedCallback.apply(this,arguments);if(N.hasCaughtError()){var r=N.clearCaughtError();N._hasRethrowError||(N._hasRethrowError=!0,N._rethrowError=
r)}},rethrowCaughtError:function(){return Ia.apply(N,arguments)},hasCaughtError:function(){return N._hasCaughtError},clearCaughtError:function(){if(N._hasCaughtError){var a=N._caughtError;N._caughtError=null;N._hasCaughtError=!1;return a}D("198")}};function Ha(a,b,c,d,e,f,g,k,h){N._hasCaughtError=!1;N._caughtError=null;var r=Array.prototype.slice.call(arguments,3);try{b.apply(c,r)}catch(n){N._caughtError=n,N._hasCaughtError=!0}}
function Ia(){if(N._hasRethrowError){var a=N._rethrowError;N._rethrowError=null;N._hasRethrowError=!1;throw a;}}var Ja=null,Ka={};
function La(){if(Ja)for(var a in Ka){var b=Ka[a],c=Ja.indexOf(a);-1<c?void 0:D("96",a);if(!Ma[c]){b.extractEvents?void 0:D("97",a);Ma[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,k=d;Na.hasOwnProperty(k)?D("99",k):void 0;Na[k]=f;var h=f.phasedRegistrationNames;if(h){for(e in h)h.hasOwnProperty(e)&&Oa(h[e],g,k);e=!0}else f.registrationName?(Oa(f.registrationName,g,k),e=!0):e=!1;e?void 0:D("98",d,a)}}}}
function Oa(a,b,c){Pa[a]?D("100",a):void 0;Pa[a]=b;Qa[a]=b.eventTypes[c].dependencies}var Ma=[],Na={},Pa={},Qa={};function Ra(a){Ja?D("101"):void 0;Ja=Array.prototype.slice.call(a);La()}function Sa(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];Ka.hasOwnProperty(c)&&Ka[c]===d||(Ka[c]?D("102",c):void 0,Ka[c]=d,b=!0)}b&&La()}
var Ta=Object.freeze({plugins:Ma,eventNameDispatchConfigs:Na,registrationNameModules:Pa,registrationNameDependencies:Qa,possibleRegistrationNames:null,injectEventPluginOrder:Ra,injectEventPluginsByName:Sa}),Ua=null,Va=null,Wa=null;function Xa(a,b,c,d){b=a.type||"unknown-event";a.currentTarget=Wa(d);N.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}
function Ya(a,b){null==b?D("30"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Za(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var $a=null;
function ab(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)Xa(a,b,c[e],d[e]);else c&&Xa(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function bb(a){return ab(a,!0)}function cb(a){return ab(a,!1)}var db={injectEventPluginOrder:Ra,injectEventPluginsByName:Sa};
function eb(a,b){var c=a.stateNode;if(!c)return null;var d=Ua(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;c&&"function"!==typeof c?D("231",b,typeof c):void 0;
return c}function jb(a,b,c,d){for(var e,f=0;f<Ma.length;f++){var g=Ma[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Ya(e,g))}return e}function kb(a){a&&($a=Ya($a,a))}function lb(a){var b=$a;$a=null;a?Za(b,bb):Za(b,cb);$a?D("95"):void 0;N.rethrowCaughtError()}var mb=Object.freeze({injection:db,getListener:eb,extractEvents:jb,enqueueEvents:kb,processEventQueue:lb}),nb=Math.random().toString(36).slice(2),O="__reactInternalInstance$"+nb,ob="__reactEventHandlers$"+nb;
function pb(a){if(a[O])return a[O];for(var b=[];!a[O];)if(b.push(a),a.parentNode)a=a.parentNode;else return null;var c=void 0,d=a[O];if(5===d.tag||6===d.tag)return d;for(;a&&(d=a[O]);a=b.pop())c=d;return c}function qb(a){if(5===a.tag||6===a.tag)return a.stateNode;D("33")}function rb(a){return a[ob]||null}
var sb=Object.freeze({precacheFiberNode:function(a,b){b[O]=a},getClosestInstanceFromNode:pb,getInstanceFromNode:function(a){a=a[O];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:qb,getFiberCurrentPropsFromNode:rb,updateFiberProps:function(a,b){a[ob]=b}});function Q(a){do a=a["return"];while(a&&5!==a.tag);return a?a:null}function tb(a,b,c){for(var d=[];a;)d.push(a),a=Q(a);for(a=d.length;0<a--;)b(d[a],"captured",c);for(a=0;a<d.length;a++)b(d[a],"bubbled",c)}
function ub(a,b,c){if(b=eb(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Ya(c._dispatchListeners,b),c._dispatchInstances=Ya(c._dispatchInstances,a)}function vb(a){a&&a.dispatchConfig.phasedRegistrationNames&&tb(a._targetInst,ub,a)}function wb(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?Q(b):null;tb(b,ub,a)}}
function xb(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=eb(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Ya(c._dispatchListeners,b),c._dispatchInstances=Ya(c._dispatchInstances,a))}function yb(a){a&&a.dispatchConfig.registrationName&&xb(a._targetInst,null,a)}function zb(a){Za(a,vb)}
function Ab(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,k=e;k;k=Q(k))g++;k=0;for(var h=f;h;h=Q(h))k++;for(;0<g-k;)e=Q(e),g--;for(;0<k-g;)f=Q(f),k--;for(;g--;){if(e===f||e===f.alternate)break a;e=Q(e);f=Q(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=Q(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=Q(d)}for(d=0;d<e.length;d++)xb(e[d],"bubbled",a);for(a=c.length;0<a--;)xb(c[a],"captured",b)}
var Bb=Object.freeze({accumulateTwoPhaseDispatches:zb,accumulateTwoPhaseDispatchesSkipTarget:function(a){Za(a,wb)},accumulateEnterLeaveDispatches:Ab,accumulateDirectDispatches:function(a){Za(a,yb)}}),Cb=null;function Db(){!Cb&&m.canUseDOM&&(Cb="textContent"in document.documentElement?"textContent":"innerText");return Cb}var R={_root:null,_startText:null,_fallbackText:null};
function Eb(){if(R._fallbackText)return R._fallbackText;var a,b=R._startText,c=b.length,d,e=Fb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);R._fallbackText=e.slice(a,1<d?1-d:void 0);return R._fallbackText}function Fb(){return"value"in R._root?R._root.value:R._root[Db()]}
var Gb="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),Hb={type:null,target:null,currentTarget:B.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
function S(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?B.thatReturnsTrue:B.thatReturnsFalse;this.isPropagationStopped=B.thatReturnsFalse;return this}
A(S.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=B.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=B.thatReturnsTrue)},persist:function(){this.isPersistent=B.thatReturnsTrue},isPersistent:B.thatReturnsFalse,
destructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<Gb.length;a++)this[Gb[a]]=null}});S.Interface=Hb;S.augmentClass=function(a,b){function c(){}c.prototype=this.prototype;var d=new c;A(d,a.prototype);a.prototype=d;a.prototype.constructor=a;a.Interface=A({},this.Interface,b);a.augmentClass=this.augmentClass;Ib(a)};Ib(S);function Jb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}
function Qb(a){a instanceof this?void 0:D("223");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function Ib(a){a.eventPool=[];a.getPooled=Jb;a.release=Qb}function Rb(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Rb,{data:null});function Sb(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Sb,{data:null});var Tb=[9,13,27,32],Ub=m.canUseDOM&&"CompositionEvent"in window,Vb=null;m.canUseDOM&&"documentMode"in document&&(Vb=document.documentMode);var Wb;
if(Wb=m.canUseDOM&&"TextEvent"in window&&!Vb){var Xb=window.opera;Wb=!("object"===typeof Xb&&"function"===typeof Xb.version&&12>=parseInt(Xb.version(),10))}
var Yb=Wb,Zb=m.canUseDOM&&(!Ub||Vb&&8<Vb&&11>=Vb),$b=String.fromCharCode(32),ac={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["topCompositionEnd","topKeyPress","topTextInput","topPaste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
captured:"onCompositionStartCapture"},dependencies:"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")}},bc=!1;
function cc(a,b){switch(a){case "topKeyUp":return-1!==Tb.indexOf(b.keyCode);case "topKeyDown":return 229!==b.keyCode;case "topKeyPress":case "topMouseDown":case "topBlur":return!0;default:return!1}}function dc(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var ec=!1;function fc(a,b){switch(a){case "topCompositionEnd":return dc(b);case "topKeyPress":if(32!==b.which)return null;bc=!0;return $b;case "topTextInput":return a=b.data,a===$b&&bc?null:a;default:return null}}
function gc(a,b){if(ec)return"topCompositionEnd"===a||!Ub&&cc(a,b)?(a=Eb(),R._root=null,R._startText=null,R._fallbackText=null,ec=!1,a):null;switch(a){case "topPaste":return null;case "topKeyPress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "topCompositionEnd":return Zb?null:b.data;default:return null}}
var hc={eventTypes:ac,extractEvents:function(a,b,c,d){var e;if(Ub)b:{switch(a){case "topCompositionStart":var f=ac.compositionStart;break b;case "topCompositionEnd":f=ac.compositionEnd;break b;case "topCompositionUpdate":f=ac.compositionUpdate;break b}f=void 0}else ec?cc(a,c)&&(f=ac.compositionEnd):"topKeyDown"===a&&229===c.keyCode&&(f=ac.compositionStart);f?(Zb&&(ec||f!==ac.compositionStart?f===ac.compositionEnd&&ec&&(e=Eb()):(R._root=d,R._startText=Fb(),ec=!0)),f=Rb.getPooled(f,b,c,d),e?f.data=
e:(e=dc(c),null!==e&&(f.data=e)),zb(f),e=f):e=null;(a=Yb?fc(a,c):gc(a,c))?(b=Sb.getPooled(ac.beforeInput,b,c,d),b.data=a,zb(b)):b=null;return[e,b]}},ic=null,jc=null,kc=null;function lc(a){if(a=Va(a)){ic&&"function"===typeof ic.restoreControlledState?void 0:D("194");var b=Ua(a.stateNode);ic.restoreControlledState(a.stateNode,a.type,b)}}var mc={injectFiberControlledHostComponent:function(a){ic=a}};function nc(a){jc?kc?kc.push(a):kc=[a]:jc=a}
function oc(){if(jc){var a=jc,b=kc;kc=jc=null;lc(a);if(b)for(a=0;a<b.length;a++)lc(b[a])}}var pc=Object.freeze({injection:mc,enqueueStateRestore:nc,restoreStateIfNeeded:oc});function qc(a,b){return a(b)}var rc=!1;function sc(a,b){if(rc)return qc(a,b);rc=!0;try{return qc(a,b)}finally{rc=!1,oc()}}var tc={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};
function uc(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!tc[a.type]:"textarea"===b?!0:!1}function vc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var wc;m.canUseDOM&&(wc=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature("",""));
function xc(a,b){if(!m.canUseDOM||b&&!("addEventListener"in document))return!1;b="on"+a;var c=b in document;c||(c=document.createElement("div"),c.setAttribute(b,"return;"),c="function"===typeof c[b]);!c&&wc&&"wheel"===a&&(c=document.implementation.hasFeature("Events.wheel","3.0"));return c}function yc(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function zc(a){var b=yc(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"function"===typeof c.get&&"function"===typeof c.set)return Object.defineProperty(a,b,{enumerable:c.enumerable,configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=""+a;c.set.call(this,a)}}),{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}
function Ac(a){a._valueTracker||(a._valueTracker=zc(a))}function Bc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=yc(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Cc={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange".split(" ")}};
function Dc(a,b,c){a=S.getPooled(Cc.change,a,b,c);a.type="change";nc(c);zb(a);return a}var Ec=null,Fc=null;function Gc(a){kb(a);lb(!1)}function Hc(a){var b=qb(a);if(Bc(b))return a}function Ic(a,b){if("topChange"===a)return b}var Jc=!1;m.canUseDOM&&(Jc=xc("input")&&(!document.documentMode||9<document.documentMode));function Qc(){Ec&&(Ec.detachEvent("onpropertychange",Rc),Fc=Ec=null)}function Rc(a){"value"===a.propertyName&&Hc(Fc)&&(a=Dc(Fc,a,vc(a)),sc(Gc,a))}
function Sc(a,b,c){"topFocus"===a?(Qc(),Ec=b,Fc=c,Ec.attachEvent("onpropertychange",Rc)):"topBlur"===a&&Qc()}function Tc(a){if("topSelectionChange"===a||"topKeyUp"===a||"topKeyDown"===a)return Hc(Fc)}function Uc(a,b){if("topClick"===a)return Hc(b)}function Vc(a,b){if("topInput"===a||"topChange"===a)return Hc(b)}
var Wc={eventTypes:Cc,_isInputEventSupported:Jc,extractEvents:function(a,b,c,d){var e=b?qb(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if("select"===f||"input"===f&&"file"===e.type)var g=Ic;else if(uc(e))if(Jc)g=Vc;else{g=Tc;var k=Sc}else f=e.nodeName,!f||"input"!==f.toLowerCase()||"checkbox"!==e.type&&"radio"!==e.type||(g=Uc);if(g&&(g=g(a,b)))return Dc(g,c,d);k&&k(a,e,b);"topBlur"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&"number"===e.type&&(a=""+e.value,e.getAttribute("value")!==
a&&e.setAttribute("value",a))}};function Xc(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Xc,{view:null,detail:null});var Yc={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Zc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Yc[a])?!!b[a]:!1}function $c(){return Zc}function ad(a,b,c,d){return S.call(this,a,b,c,d)}
Xc.augmentClass(ad,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:$c,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}});
var bd={mouseEnter:{registrationName:"onMouseEnter",dependencies:["topMouseOut","topMouseOver"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["topMouseOut","topMouseOver"]}},cd={eventTypes:bd,extractEvents:function(a,b,c,d){if("topMouseOver"===a&&(c.relatedTarget||c.fromElement)||"topMouseOut"!==a&&"topMouseOver"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;"topMouseOut"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?pb(b):null):a=null;if(a===
b)return null;var f=null==a?e:qb(a);e=null==b?e:qb(b);var g=ad.getPooled(bd.mouseLeave,a,c,d);g.type="mouseleave";g.target=f;g.relatedTarget=e;c=ad.getPooled(bd.mouseEnter,b,c,d);c.type="mouseenter";c.target=e;c.relatedTarget=f;Ab(g,c,a,b);return[g,c]}},dd=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;function ed(a){a=a.type;return"string"===typeof a?a:"function"===typeof a?a.displayName||a.name:null}
function fd(a){var b=a;if(a.alternate)for(;b["return"];)b=b["return"];else{if(0!==(b.effectTag&2))return 1;for(;b["return"];)if(b=b["return"],0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function gd(a){return(a=a._reactInternalFiber)?2===fd(a):!1}function hd(a){2!==fd(a)?D("188"):void 0}
function id(a){var b=a.alternate;if(!b)return b=fd(a),3===b?D("188"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c["return"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return hd(e),a;if(g===d)return hd(e),b;g=g.sibling}D("188")}if(c["return"]!==d["return"])c=e,d=f;else{g=!1;for(var k=e.child;k;){if(k===c){g=!0;c=e;d=f;break}if(k===d){g=!0;d=e;c=f;break}k=k.sibling}if(!g){for(k=f.child;k;){if(k===c){g=!0;c=f;d=e;break}if(k===d){g=!0;d=f;c=e;break}k=k.sibling}g?
void 0:D("189")}}c.alternate!==d?D("190"):void 0}3!==c.tag?D("188"):void 0;return c.stateNode.current===c?a:b}function jd(a){a=id(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child["return"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b["return"]||b["return"]===a)return null;b=b["return"]}b.sibling["return"]=b["return"];b=b.sibling}}return null}
function kd(a){a=id(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child["return"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b["return"]||b["return"]===a)return null;b=b["return"]}b.sibling["return"]=b["return"];b=b.sibling}}return null}var ld=[];
function md(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c["return"];)c=c["return"];c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=pb(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],nd(a.topLevelType,b,a.nativeEvent,vc(a.nativeEvent))}var od=!0,nd=void 0;function pd(a){od=!!a}function U(a,b,c){return c?ca.listen(c,b,qd.bind(null,a)):null}function rd(a,b,c){return c?ca.capture(c,b,qd.bind(null,a)):null}
function qd(a,b){if(od){var c=vc(b);c=pb(c);null===c||"number"!==typeof c.tag||2===fd(c)||(c=null);if(ld.length){var d=ld.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{sc(md,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>ld.length&&ld.push(a)}}}
var sd=Object.freeze({get _enabled(){return od},get _handleTopLevel(){return nd},setHandleTopLevel:function(a){nd=a},setEnabled:pd,isEnabled:function(){return od},trapBubbledEvent:U,trapCapturedEvent:rd,dispatchEvent:qd});function td(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;c["ms"+a]="MS"+b;c["O"+a]="o"+b.toLowerCase();return c}
var ud={animationend:td("Animation","AnimationEnd"),animationiteration:td("Animation","AnimationIteration"),animationstart:td("Animation","AnimationStart"),transitionend:td("Transition","TransitionEnd")},vd={},wd={};m.canUseDOM&&(wd=document.createElement("div").style,"AnimationEvent"in window||(delete ud.animationend.animation,delete ud.animationiteration.animation,delete ud.animationstart.animation),"TransitionEvent"in window||delete ud.transitionend.transition);
function xd(a){if(vd[a])return vd[a];if(!ud[a])return a;var b=ud[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in wd)return vd[a]=b[c];return""}
var yd={topAbort:"abort",topAnimationEnd:xd("animationend")||"animationend",topAnimationIteration:xd("animationiteration")||"animationiteration",topAnimationStart:xd("animationstart")||"animationstart",topBlur:"blur",topCancel:"cancel",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topClose:"close",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",
topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoad:"load",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",
topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topToggle:"toggle",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",
topTouchStart:"touchstart",topTransitionEnd:xd("transitionend")||"transitionend",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},zd={},Ad=0,Bd="_reactListenersID"+(""+Math.random()).slice(2);function Cd(a){Object.prototype.hasOwnProperty.call(a,Bd)||(a[Bd]=Ad++,zd[a[Bd]]={});return zd[a[Bd]]}function Dd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
function Ed(a,b){var c=Dd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Dd(c)}}function Fd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&"text"===a.type||"textarea"===b||"true"===a.contentEditable)}
var Gd=m.canUseDOM&&"documentMode"in document&&11>=document.documentMode,Hd={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange".split(" ")}},Id=null,Jd=null,Kd=null,Ld=!1;
function Md(a,b){if(Ld||null==Id||Id!==da())return null;var c=Id;"selectionStart"in c&&Fd(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Kd&&ea(Kd,c)?null:(Kd=c,a=S.getPooled(Hd.select,Jd,a,b),a.type="select",a.target=Id,zb(a),a)}
var Nd={eventTypes:Hd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Cd(e);f=Qa.onSelect;for(var g=0;g<f.length;g++){var k=f[g];if(!e.hasOwnProperty(k)||!e[k]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?qb(b):window;switch(a){case "topFocus":if(uc(e)||"true"===e.contentEditable)Id=e,Jd=b,Kd=null;break;case "topBlur":Kd=Jd=Id=null;break;case "topMouseDown":Ld=!0;break;case "topContextMenu":case "topMouseUp":return Ld=!1,Md(c,d);case "topSelectionChange":if(Gd)break;
case "topKeyDown":case "topKeyUp":return Md(c,d)}return null}};function Od(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Od,{animationName:null,elapsedTime:null,pseudoElement:null});function Pd(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Pd,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}});function Qd(a,b,c,d){return S.call(this,a,b,c,d)}Xc.augmentClass(Qd,{relatedTarget:null});
function Rd(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;return 32<=a||13===a?a:0}
var Sd={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Td={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};function Ud(a,b,c,d){return S.call(this,a,b,c,d)}
Xc.augmentClass(Ud,{key:function(a){if(a.key){var b=Sd[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=Rd(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?Td[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:$c,charCode:function(a){return"keypress"===a.type?Rd(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===
a.type?Rd(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}});function Vd(a,b,c,d){return S.call(this,a,b,c,d)}ad.augmentClass(Vd,{dataTransfer:null});function Wd(a,b,c,d){return S.call(this,a,b,c,d)}Xc.augmentClass(Wd,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:$c});function Xd(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Xd,{propertyName:null,elapsedTime:null,pseudoElement:null});
function Yd(a,b,c,d){return S.call(this,a,b,c,d)}ad.augmentClass(Yd,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null});var Zd={},$d={};
"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel".split(" ").forEach(function(a){var b=a[0].toUpperCase()+
a.slice(1),c="on"+b;b="top"+b;c={phasedRegistrationNames:{bubbled:c,captured:c+"Capture"},dependencies:[b]};Zd[a]=c;$d[b]=c});
var ae={eventTypes:Zd,extractEvents:function(a,b,c,d){var e=$d[a];if(!e)return null;switch(a){case "topKeyPress":if(0===Rd(c))return null;case "topKeyDown":case "topKeyUp":a=Ud;break;case "topBlur":case "topFocus":a=Qd;break;case "topClick":if(2===c.button)return null;case "topDoubleClick":case "topMouseDown":case "topMouseMove":case "topMouseUp":case "topMouseOut":case "topMouseOver":case "topContextMenu":a=ad;break;case "topDrag":case "topDragEnd":case "topDragEnter":case "topDragExit":case "topDragLeave":case "topDragOver":case "topDragStart":case "topDrop":a=
Vd;break;case "topTouchCancel":case "topTouchEnd":case "topTouchMove":case "topTouchStart":a=Wd;break;case "topAnimationEnd":case "topAnimationIteration":case "topAnimationStart":a=Od;break;case "topTransitionEnd":a=Xd;break;case "topScroll":a=Xc;break;case "topWheel":a=Yd;break;case "topCopy":case "topCut":case "topPaste":a=Pd;break;default:a=S}b=a.getPooled(e,b,c,d);zb(b);return b}};nd=function(a,b,c,d){a=jb(a,b,c,d);kb(a);lb(!1)};db.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));
Ua=sb.getFiberCurrentPropsFromNode;Va=sb.getInstanceFromNode;Wa=sb.getNodeFromInstance;db.injectEventPluginsByName({SimpleEventPlugin:ae,EnterLeaveEventPlugin:cd,ChangeEventPlugin:Wc,SelectEventPlugin:Nd,BeforeInputEventPlugin:hc});var be=[],ce=-1;function V(a){0>ce||(a.current=be[ce],be[ce]=null,ce--)}function W(a,b){ce++;be[ce]=a.current;a.current=b}new Set;var de={current:C},X={current:!1},ee=C;function fe(a){return ge(a)?ee:de.current}
function he(a,b){var c=a.type.contextTypes;if(!c)return C;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function ge(a){return 2===a.tag&&null!=a.type.childContextTypes}function ie(a){ge(a)&&(V(X,a),V(de,a))}
function je(a,b,c){null!=de.cursor?D("168"):void 0;W(de,b,a);W(X,c,a)}function ke(a,b){var c=a.stateNode,d=a.type.childContextTypes;if("function"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:D("108",ed(a)||"Unknown",e);return A({},b,c)}function le(a){if(!ge(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||C;ee=de.current;W(de,b,a);W(X,X.current,a);return!0}
function me(a,b){var c=a.stateNode;c?void 0:D("169");if(b){var d=ke(a,ee);c.__reactInternalMemoizedMergedChildContext=d;V(X,a);V(de,a);W(de,d,a)}else V(X,a);W(X,b,a)}
function Y(a,b,c){this.tag=a;this.key=b;this.stateNode=this.type=null;this.sibling=this.child=this["return"]=null;this.index=0;this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null;this.internalContextTag=c;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}
function ne(a,b,c){var d=a.alternate;null===d?(d=new Y(a.tag,a.key,a.internalContextTag),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.pendingProps=b;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}
function oe(a,b,c){var d=void 0,e=a.type,f=a.key;"function"===typeof e?(d=e.prototype&&e.prototype.isReactComponent?new Y(2,f,b):new Y(0,f,b),d.type=e,d.pendingProps=a.props):"string"===typeof e?(d=new Y(5,f,b),d.type=e,d.pendingProps=a.props):"object"===typeof e&&null!==e&&"number"===typeof e.tag?(d=e,d.pendingProps=a.props):D("130",null==e?e:typeof e,"");d.expirationTime=c;return d}function pe(a,b,c,d){b=new Y(10,d,b);b.pendingProps=a;b.expirationTime=c;return b}
function qe(a,b,c){b=new Y(6,null,b);b.pendingProps=a;b.expirationTime=c;return b}function re(a,b,c){b=new Y(7,a.key,b);b.type=a.handler;b.pendingProps=a;b.expirationTime=c;return b}function se(a,b,c){a=new Y(9,null,b);a.expirationTime=c;return a}function te(a,b,c){b=new Y(4,a.key,b);b.pendingProps=a.children||[];b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}var ue=null,ve=null;
function we(a){return function(b){try{return a(b)}catch(c){}}}function xe(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);ue=we(function(a){return b.onCommitFiberRoot(c,a)});ve=we(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function ye(a){"function"===typeof ue&&ue(a)}function ze(a){"function"===typeof ve&&ve(a)}
function Ae(a){return{baseState:a,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function Be(a,b){null===a.last?a.first=a.last=b:(a.last.next=b,a.last=b);if(0===a.expirationTime||a.expirationTime>b.expirationTime)a.expirationTime=b.expirationTime}
function Ce(a,b){var c=a.alternate,d=a.updateQueue;null===d&&(d=a.updateQueue=Ae(null));null!==c?(a=c.updateQueue,null===a&&(a=c.updateQueue=Ae(null))):a=null;a=a!==d?a:null;null===a?Be(d,b):null===d.last||null===a.last?(Be(d,b),Be(a,b)):(Be(d,b),a.last=b)}function De(a,b,c,d){a=a.partialState;return"function"===typeof a?a.call(b,c,d):a}
function Ke(a,b,c,d,e,f){null!==a&&a.updateQueue===c&&(c=b.updateQueue={baseState:c.baseState,expirationTime:c.expirationTime,first:c.first,last:c.last,isInitialized:c.isInitialized,callbackList:null,hasForceUpdate:!1});c.expirationTime=0;c.isInitialized?a=c.baseState:(a=c.baseState=b.memoizedState,c.isInitialized=!0);for(var g=!0,k=c.first,h=!1;null!==k;){var r=k.expirationTime;if(r>f){var n=c.expirationTime;if(0===n||n>r)c.expirationTime=r;h||(h=!0,c.baseState=a)}else{h||(c.first=k.next,null===
c.first&&(c.last=null));if(k.isReplace)a=De(k,d,a,e),g=!0;else if(r=De(k,d,a,e))a=g?A({},a,r):A(a,r),g=!1;k.isForced&&(c.hasForceUpdate=!0);null!==k.callback&&(r=c.callbackList,null===r&&(r=c.callbackList=[]),r.push(k))}k=k.next}null!==c.callbackList?b.effectTag|=32:null!==c.first||c.hasForceUpdate||(b.updateQueue=null);h||(c.baseState=a);return a}
function Le(a,b){var c=a.callbackList;if(null!==c)for(a.callbackList=null,a=0;a<c.length;a++){var d=c[a],e=d.callback;d.callback=null;"function"!==typeof e?D("191",e):void 0;e.call(b)}}
function Me(a,b,c,d){function e(a,b){b.updater=f;a.stateNode=b;b._reactInternalFiber=a}var f={isMounted:gd,enqueueSetState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);Ce(c,{expirationTime:g,partialState:d,callback:e,isReplace:!1,isForced:!1,nextCallback:null,next:null});a(c,g)},enqueueReplaceState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var f=b(c);Ce(c,{expirationTime:f,partialState:d,callback:e,isReplace:!0,isForced:!1,nextCallback:null,next:null});
a(c,f)},enqueueForceUpdate:function(c,d){c=c._reactInternalFiber;d=void 0===d?null:d;var e=b(c);Ce(c,{expirationTime:e,partialState:null,callback:d,isReplace:!1,isForced:!0,nextCallback:null,next:null});a(c,e)}};return{adoptClassInstance:e,constructClassInstance:function(a,b){var c=a.type,d=fe(a),f=2===a.tag&&null!=a.type.contextTypes,g=f?he(a,d):C;b=new c(b,g);e(a,b);f&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=d,a.__reactInternalMemoizedMaskedChildContext=g);return b},mountClassInstance:function(a,
b){var c=a.alternate,d=a.stateNode,e=d.state||null,g=a.pendingProps;g?void 0:D("158");var k=fe(a);d.props=g;d.state=a.memoizedState=e;d.refs=C;d.context=he(a,k);null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent&&(a.internalContextTag|=1);"function"===typeof d.componentWillMount&&(e=d.state,d.componentWillMount(),e!==d.state&&f.enqueueReplaceState(d,d.state,null),e=a.updateQueue,null!==e&&(d.state=Ke(c,a,e,d,g,b)));"function"===typeof d.componentDidMount&&(a.effectTag|=
4)},updateClassInstance:function(a,b,e){var g=b.stateNode;g.props=b.memoizedProps;g.state=b.memoizedState;var k=b.memoizedProps,h=b.pendingProps;h||(h=k,null==h?D("159"):void 0);var u=g.context,x=fe(b);x=he(b,x);"function"!==typeof g.componentWillReceiveProps||k===h&&u===x||(u=g.state,g.componentWillReceiveProps(h,x),g.state!==u&&f.enqueueReplaceState(g,g.state,null));u=b.memoizedState;e=null!==b.updateQueue?Ke(a,b,b.updateQueue,g,h,e):u;if(!(k!==h||u!==e||X.current||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return"function"!==
typeof g.componentDidUpdate||k===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),!1;var F=h;if(null===k||null!==b.updateQueue&&b.updateQueue.hasForceUpdate)F=!0;else{var L=b.stateNode,G=b.type;F="function"===typeof L.shouldComponentUpdate?L.shouldComponentUpdate(F,e,x):G.prototype&&G.prototype.isPureReactComponent?!ea(k,F)||!ea(u,e):!0}F?("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(h,e,x),"function"===typeof g.componentDidUpdate&&(b.effectTag|=4)):("function"!==typeof g.componentDidUpdate||
k===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),c(b,h),d(b,e));g.props=h;g.state=e;g.context=x;return F}}}var Ne="function"===typeof Symbol&&Symbol["for"]&&Symbol["for"]("react.portal")||60106;function Oe(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ne,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}var Pe=Array.isArray,Qe="function"===typeof Symbol&&Symbol.iterator,Re,Se,Te,Ue;
"function"===typeof Symbol&&Symbol["for"]?(Re=Symbol["for"]("react.element"),Se=Symbol["for"]("react.call"),Te=Symbol["for"]("react.return"),Ue=Symbol["for"]("react.fragment")):(Re=60103,Se=60104,Te=60105,Ue=60107);function Ve(a){if(null===a||"undefined"===typeof a)return null;a=Qe&&a[Qe]||a["@@iterator"];return"function"===typeof a?a:null}
function We(a,b){var c=b.ref;if(null!==c&&"function"!==typeof c){if(b._owner){b=b._owner;var d=void 0;b&&(2!==b.tag?D("110"):void 0,d=b.stateNode);d?void 0:D("147",c);var e=""+c;if(null!==a&&null!==a.ref&&a.ref._stringRef===e)return a.ref;a=function(a){var b=d.refs===C?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};a._stringRef=e;return a}"string"!==typeof c?D("148"):void 0;b._owner?void 0:D("149",c)}return c}
function Xe(a,b){"textarea"!==a.type&&D("31","[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,"")}
function Ye(a,b){function c(c,d){if(b){if(!a){if(null===d.alternate)return;d=d.alternate}var p=c.lastEffect;null!==p?(p.nextEffect=d,c.lastEffect=d):c.firstEffect=c.lastEffect=d;d.nextEffect=null;d.effectTag=8}}function d(a,d){if(!b)return null;for(;null!==d;)c(a,d),d=d.sibling;return null}function e(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function f(b,c,d){if(a)return b=ne(b,c,d),b.index=0,b.sibling=null,b;b.expirationTime=d;b.effectTag=0;b.index=
0;b.sibling=null;b.pendingProps=c;return b}function g(a,c,d){a.index=d;if(!b)return c;d=a.alternate;if(null!==d)return d=d.index,d<c?(a.effectTag=2,c):d;a.effectTag=2;return c}function k(a){b&&null===a.alternate&&(a.effectTag=2);return a}function h(a,b,c,d){if(null===b||6!==b.tag)return b=qe(c,a.internalContextTag,d),b["return"]=a,b;b=f(b,c,d);b["return"]=a;return b}function r(a,b,c,d){if(null!==b&&b.type===c.type)return d=f(b,c.props,d),d.ref=We(b,c),d["return"]=a,d;d=oe(c,a.internalContextTag,d);
d.ref=We(b,c);d["return"]=a;return d}function n(a,b,c,d){if(null===b||7!==b.tag)return b=re(c,a.internalContextTag,d),b["return"]=a,b;b=f(b,c,d);b["return"]=a;return b}function y(a,b,c,d){if(null===b||9!==b.tag)return b=se(c,a.internalContextTag,d),b.type=c.value,b["return"]=a,b;b=f(b,null,d);b.type=c.value;b["return"]=a;return b}function u(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=te(c,a.internalContextTag,
d),b["return"]=a,b;b=f(b,c.children||[],d);b["return"]=a;return b}function x(a,b,c,d,e){if(null===b||10!==b.tag)return b=pe(c,a.internalContextTag,d,e),b["return"]=a,b;b=f(b,c,d);b["return"]=a;return b}function F(a,b,c){if("string"===typeof b||"number"===typeof b)return b=qe(""+b,a.internalContextTag,c),b["return"]=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case Re:if(b.type===Ue)return b=pe(b.props.children,a.internalContextTag,c,b.key),b["return"]=a,b;c=oe(b,a.internalContextTag,c);
c.ref=We(null,b);c["return"]=a;return c;case Se:return b=re(b,a.internalContextTag,c),b["return"]=a,b;case Te:return c=se(b,a.internalContextTag,c),c.type=b.value,c["return"]=a,c;case Ne:return b=te(b,a.internalContextTag,c),b["return"]=a,b}if(Pe(b)||Ve(b))return b=pe(b,a.internalContextTag,c,null),b["return"]=a,b;Xe(a,b)}return null}function L(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case Re:return c.key===
e?c.type===Ue?x(a,b,c.props.children,d,e):r(a,b,c,d):null;case Se:return c.key===e?n(a,b,c,d):null;case Te:return null===e?y(a,b,c,d):null;case Ne:return c.key===e?u(a,b,c,d):null}if(Pe(c)||Ve(c))return null!==e?null:x(a,b,c,d,null);Xe(a,c)}return null}function G(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case Re:return a=a.get(null===d.key?c:d.key)||null,d.type===Ue?x(b,a,d.props.children,e,d.key):
r(b,a,d,e);case Se:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e);case Te:return a=a.get(c)||null,y(b,a,d,e);case Ne:return a=a.get(null===d.key?c:d.key)||null,u(b,a,d,e)}if(Pe(d)||Ve(d))return a=a.get(c)||null,x(b,a,d,e,null);Xe(b,d)}return null}function T(a,f,v,k){for(var p=null,z=null,l=f,h=f=0,t=null;null!==l&&h<v.length;h++){l.index>h?(t=l,l=null):t=l.sibling;var w=L(a,l,v[h],k);if(null===w){null===l&&(l=t);break}b&&l&&null===w.alternate&&c(a,l);f=g(w,f,h);null===z?p=w:z.sibling=w;z=w;
l=t}if(h===v.length)return d(a,l),p;if(null===l){for(;h<v.length;h++)if(l=F(a,v[h],k))f=g(l,f,h),null===z?p=l:z.sibling=l,z=l;return p}for(l=e(a,l);h<v.length;h++)if(t=G(l,a,h,v[h],k)){if(b&&null!==t.alternate)l["delete"](null===t.key?h:t.key);f=g(t,f,h);null===z?p=t:z.sibling=t;z=t}b&&l.forEach(function(b){return c(a,b)});return p}function I(a,f,v,k){var p=Ve(v);"function"!==typeof p?D("150"):void 0;v=p.call(v);null==v?D("151"):void 0;for(var h=p=null,l=f,z=f=0,t=null,w=v.next();null!==l&&!w.done;z++,
w=v.next()){l.index>z?(t=l,l=null):t=l.sibling;var n=L(a,l,w.value,k);if(null===n){l||(l=t);break}b&&l&&null===n.alternate&&c(a,l);f=g(n,f,z);null===h?p=n:h.sibling=n;h=n;l=t}if(w.done)return d(a,l),p;if(null===l){for(;!w.done;z++,w=v.next())w=F(a,w.value,k),null!==w&&(f=g(w,f,z),null===h?p=w:h.sibling=w,h=w);return p}for(l=e(a,l);!w.done;z++,w=v.next())if(w=G(l,a,z,w.value,k),null!==w){if(b&&null!==w.alternate)l["delete"](null===w.key?z:w.key);f=g(w,f,z);null===h?p=w:h.sibling=w;h=w}b&&l.forEach(function(b){return c(a,
b)});return p}return function(a,b,e,g){var h="object"===typeof e&&null!==e;if(h)switch(e.$$typeof){case Re:a:{var v=e.key;for(h=b;null!==h;){if(h.key===v)if(10===h.tag?e.type===Ue:h.type===e.type){d(a,h.sibling);b=f(h,e.type===Ue?e.props.children:e.props,g);b.ref=We(h,e);b["return"]=a;a=b;break a}else{d(a,h);break}else c(a,h);h=h.sibling}e.type===Ue?(e=pe(e.props.children,a.internalContextTag,g,e.key),e["return"]=a,a=e):(g=oe(e,a.internalContextTag,g),g.ref=We(b,e),g["return"]=a,a=g)}return k(a);
case Se:a:{for(h=e.key;null!==b;){if(b.key===h)if(7===b.tag){d(a,b.sibling);e=f(b,e,g);e["return"]=a;a=e;break a}else{d(a,b);break}else c(a,b);b=b.sibling}e=re(e,a.internalContextTag,g);e["return"]=a;a=e}return k(a);case Te:a:{if(null!==b)if(9===b.tag){d(a,b.sibling);b=f(b,null,g);b.type=e.value;b["return"]=a;a=b;break a}else d(a,b);b=se(e,a.internalContextTag,g);b.type=e.value;b["return"]=a;a=b}return k(a);case Ne:a:{for(h=e.key;null!==b;){if(b.key===h)if(4===b.tag&&b.stateNode.containerInfo===e.containerInfo&&
b.stateNode.implementation===e.implementation){d(a,b.sibling);e=f(b,e.children||[],g);e["return"]=a;a=e;break a}else{d(a,b);break}else c(a,b);b=b.sibling}e=te(e,a.internalContextTag,g);e["return"]=a;a=e}return k(a)}if("string"===typeof e||"number"===typeof e)return e=""+e,null!==b&&6===b.tag?(d(a,b.sibling),e=f(b,e,g)):(d(a,b),e=qe(e,a.internalContextTag,g)),e["return"]=a,a=e,k(a);if(Pe(e))return T(a,b,e,g);if(Ve(e))return I(a,b,e,g);h&&Xe(a,e);if("undefined"===typeof e)switch(a.tag){case 2:case 1:e=
a.type,D("152",e.displayName||e.name||"Component")}return d(a,b)}}var Ze=Ye(!0,!0),$e=Ye(!1,!0),af=Ye(!1,!1);
function bf(a,b,c,d,e){function f(a,b,c){g(a,b,c,b.expirationTime)}function g(a,b,c,d){b.child=null===a?af(b,b.child,c,d):a.child===b.child?Ze(b,b.child,c,d):$e(b,b.child,c,d)}function k(a,b){var c=b.ref;null===c||a&&a.ref===c||(b.effectTag|=128)}function h(a,b,c,d){k(a,b);if(!c)return d&&me(b,!1),n(a,b);c=b.stateNode;dd.current=b;var e=c.render();b.effectTag|=1;f(a,b,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&me(b,!0);return b.child}function r(a){var b=a.stateNode;b.pendingContext?je(a,
b.pendingContext,b.pendingContext!==b.context):b.context&&je(a,b.context,!1);G(a,b.containerInfo)}function n(a,b){null!==a&&b.child!==a.child?D("153"):void 0;if(null!==b.child){a=b.child;var c=ne(a,a.pendingProps,a.expirationTime);b.child=c;for(c["return"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=ne(a,a.pendingProps,a.expirationTime),c["return"]=b;c.sibling=null}return b.child}function y(a,b){switch(b.tag){case 3:r(b);break;case 2:le(b);break;case 4:G(b,b.stateNode.containerInfo)}return null}var u=
a.shouldSetTextContent,x=a.useSyncScheduling,F=a.shouldDeprioritizeSubtree,L=b.pushHostContext,G=b.pushHostContainer,T=c.enterHydrationState,I=c.resetHydrationState,z=c.tryToClaimNextHydratableInstance;a=Me(d,e,function(a,b){a.memoizedProps=b},function(a,b){a.memoizedState=b});var p=a.adoptClassInstance,v=a.constructClassInstance,t=a.mountClassInstance,Kb=a.updateClassInstance;return{beginWork:function(a,b,c){if(0===b.expirationTime||b.expirationTime>c)return y(a,b);switch(b.tag){case 0:null!==a?
D("155"):void 0;var d=b.type,e=b.pendingProps,g=fe(b);g=he(b,g);d=d(e,g);b.effectTag|=1;"object"===typeof d&&null!==d&&"function"===typeof d.render?(b.tag=2,e=le(b),p(b,d),t(b,c),b=h(a,b,!0,e)):(b.tag=1,f(a,b,d),b.memoizedProps=e,b=b.child);return b;case 1:a:{e=b.type;c=b.pendingProps;d=b.memoizedProps;if(X.current)null===c&&(c=d);else if(null===c||d===c){b=n(a,b);break a}d=fe(b);d=he(b,d);e=e(c,d);b.effectTag|=1;f(a,b,e);b.memoizedProps=c;b=b.child}return b;case 2:return e=le(b),d=void 0,null===
a?b.stateNode?D("153"):(v(b,b.pendingProps),t(b,c),d=!0):d=Kb(a,b,c),h(a,b,d,e);case 3:return r(b),e=b.updateQueue,null!==e?(d=b.memoizedState,e=Ke(a,b,e,null,null,c),d===e?(I(),b=n(a,b)):(d=e.element,g=b.stateNode,(null===a||null===a.child)&&g.hydrate&&T(b)?(b.effectTag|=2,b.child=af(b,b.child,d,c)):(I(),f(a,b,d)),b.memoizedState=e,b=b.child)):(I(),b=n(a,b)),b;case 5:L(b);null===a&&z(b);e=b.type;var l=b.memoizedProps;d=b.pendingProps;null===d&&(d=l,null===d?D("154"):void 0);g=null!==a?a.memoizedProps:
null;X.current||null!==d&&l!==d?(l=d.children,u(e,d)?l=null:g&&u(e,g)&&(b.effectTag|=16),k(a,b),2147483647!==c&&!x&&F(e,d)?(b.expirationTime=2147483647,b=null):(f(a,b,l),b.memoizedProps=d,b=b.child)):b=n(a,b);return b;case 6:return null===a&&z(b),a=b.pendingProps,null===a&&(a=b.memoizedProps),b.memoizedProps=a,null;case 8:b.tag=7;case 7:e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null===e?D("154"):void 0);else if(null===e||b.memoizedProps===e)e=b.memoizedProps;d=e.children;b.stateNode=
null===a?af(b,b.stateNode,d,c):a.child===b.child?Ze(b,b.stateNode,d,c):$e(b,b.stateNode,d,c);b.memoizedProps=e;return b.stateNode;case 9:return null;case 4:a:{G(b,b.stateNode.containerInfo);e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null==e?D("154"):void 0);else if(null===e||b.memoizedProps===e){b=n(a,b);break a}null===a?b.child=$e(b,b.child,e,c):f(a,b,e);b.memoizedProps=e;b=b.child}return b;case 10:a:{c=b.pendingProps;if(X.current)null===c&&(c=b.memoizedProps);else if(null===c||
b.memoizedProps===c){b=n(a,b);break a}f(a,b,c);b.memoizedProps=c;b=b.child}return b;default:D("156")}},beginFailedWork:function(a,b,c){switch(b.tag){case 2:le(b);break;case 3:r(b);break;default:D("157")}b.effectTag|=64;null===a?b.child=null:b.child!==a.child&&(b.child=a.child);if(0===b.expirationTime||b.expirationTime>c)return y(a,b);b.firstEffect=null;b.lastEffect=null;g(a,b,null,c);2===b.tag&&(a=b.stateNode,b.memoizedProps=a.props,b.memoizedState=a.state);return b.child}}}
function cf(a,b,c){function d(a){a.effectTag|=4}var e=a.createInstance,f=a.createTextInstance,g=a.appendInitialChild,k=a.finalizeInitialChildren,h=a.prepareUpdate,r=a.persistence,n=b.getRootHostContainer,y=b.popHostContext,u=b.getHostContext,x=b.popHostContainer,F=c.prepareToHydrateHostInstance,L=c.prepareToHydrateHostTextInstance,G=c.popHydrationState,T=void 0,I=void 0,z=void 0;a.mutation?(T=function(){},I=function(a,b,c){(b.updateQueue=c)&&d(b)},z=function(a,b,c,e){c!==e&&d(b)}):r?D("235"):D("236");
return{completeWork:function(a,b,c){var p=b.pendingProps;if(null===p)p=b.memoizedProps;else if(2147483647!==b.expirationTime||2147483647===c)b.pendingProps=null;switch(b.tag){case 1:return null;case 2:return ie(b),null;case 3:x(b);V(X,b);V(de,b);p=b.stateNode;p.pendingContext&&(p.context=p.pendingContext,p.pendingContext=null);if(null===a||null===a.child)G(b),b.effectTag&=-3;T(b);return null;case 5:y(b);c=n();var v=b.type;if(null!==a&&null!=b.stateNode){var l=a.memoizedProps,t=b.stateNode,r=u();t=
h(t,v,l,p,c,r);I(a,b,t,v,l,p,c);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!p)return null===b.stateNode?D("166"):void 0,null;a=u();if(G(b))F(b,c,a)&&d(b);else{a=e(v,p,c,a,b);a:for(l=b.child;null!==l;){if(5===l.tag||6===l.tag)g(a,l.stateNode);else if(4!==l.tag&&null!==l.child){l.child["return"]=l;l=l.child;continue}if(l===b)break;for(;null===l.sibling;){if(null===l["return"]||l["return"]===b)break a;l=l["return"]}l.sibling["return"]=l["return"];l=l.sibling}k(a,v,p,c)&&d(b);b.stateNode=a}null!==b.ref&&
(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)z(a,b,a.memoizedProps,p);else{if("string"!==typeof p)return null===b.stateNode?D("166"):void 0,null;a=n();c=u();G(b)?L(b)&&d(b):b.stateNode=f(p,a,c,b)}return null;case 7:(p=b.memoizedProps)?void 0:D("165");b.tag=8;v=[];a:for((l=b.stateNode)&&(l["return"]=b);null!==l;){if(5===l.tag||6===l.tag||4===l.tag)D("247");else if(9===l.tag)v.push(l.type);else if(null!==l.child){l.child["return"]=l;l=l.child;continue}for(;null===l.sibling;){if(null===
l["return"]||l["return"]===b)break a;l=l["return"]}l.sibling["return"]=l["return"];l=l.sibling}l=p.handler;p=l(p.props,v);b.child=Ze(b,null!==a?a.child:null,p,c);return b.child;case 8:return b.tag=7,null;case 9:return null;case 10:return null;case 4:return x(b),T(b),null;case 0:D("167");default:D("156")}}}}
function df(a,b){function c(a){var c=a.ref;if(null!==c)try{c(null)}catch(v){b(a,v)}}function d(a){"function"===typeof ze&&ze(a);switch(a.tag){case 2:c(a);var d=a.stateNode;if("function"===typeof d.componentWillUnmount)try{d.props=a.memoizedProps,d.state=a.memoizedState,d.componentWillUnmount()}catch(v){b(a,v)}break;case 5:c(a);break;case 7:e(a.stateNode);break;case 4:h&&g(a)}}function e(a){for(var b=a;;)if(d(b),null===b.child||h&&4===b.tag){if(b===a)break;for(;null===b.sibling;){if(null===b["return"]||
b["return"]===a)return;b=b["return"]}b.sibling["return"]=b["return"];b=b.sibling}else b.child["return"]=b,b=b.child}function f(a){return 5===a.tag||3===a.tag||4===a.tag}function g(a){for(var b=a,c=!1,f=void 0,g=void 0;;){if(!c){c=b["return"];a:for(;;){null===c?D("160"):void 0;switch(c.tag){case 5:f=c.stateNode;g=!1;break a;case 3:f=c.stateNode.containerInfo;g=!0;break a;case 4:f=c.stateNode.containerInfo;g=!0;break a}c=c["return"]}c=!0}if(5===b.tag||6===b.tag)e(b),g?I(f,b.stateNode):T(f,b.stateNode);
else if(4===b.tag?f=b.stateNode.containerInfo:d(b),null!==b.child){b.child["return"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b["return"]||b["return"]===a)return;b=b["return"];4===b.tag&&(c=!1)}b.sibling["return"]=b["return"];b=b.sibling}}var k=a.getPublicInstance,h=a.mutation;a=a.persistence;h||(a?D("235"):D("236"));var r=h.commitMount,n=h.commitUpdate,y=h.resetTextContent,u=h.commitTextUpdate,x=h.appendChild,F=h.appendChildToContainer,L=h.insertBefore,G=h.insertInContainerBefore,
T=h.removeChild,I=h.removeChildFromContainer;return{commitResetTextContent:function(a){y(a.stateNode)},commitPlacement:function(a){a:{for(var b=a["return"];null!==b;){if(f(b)){var c=b;break a}b=b["return"]}D("160");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:D("161")}c.effectTag&16&&(y(b),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c["return"]||f(c["return"])){c=
null;break a}c=c["return"]}c.sibling["return"]=c["return"];for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;if(null===c.child||4===c.tag)continue b;else c.child["return"]=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)c?d?G(b,e.stateNode,c):L(b,e.stateNode,c):d?F(b,e.stateNode):x(b,e.stateNode);else if(4!==e.tag&&null!==e.child){e.child["return"]=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e["return"]||e["return"]===
a)return;e=e["return"]}e.sibling["return"]=e["return"];e=e.sibling}},commitDeletion:function(a){g(a);a["return"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate["return"]=null)},commitWork:function(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&n(c,f,e,a,d,b)}break;case 6:null===b.stateNode?D("162"):void 0;c=b.memoizedProps;u(b.stateNode,null!==a?a.memoizedProps:
c,c);break;case 3:break;default:D("163")}},commitLifeCycles:function(a,b){switch(b.tag){case 2:var c=b.stateNode;if(b.effectTag&4)if(null===a)c.props=b.memoizedProps,c.state=b.memoizedState,c.componentDidMount();else{var d=a.memoizedProps;a=a.memoizedState;c.props=b.memoizedProps;c.state=b.memoizedState;c.componentDidUpdate(d,a)}b=b.updateQueue;null!==b&&Le(b,c);break;case 3:c=b.updateQueue;null!==c&&Le(c,null!==b.child?b.child.stateNode:null);break;case 5:c=b.stateNode;null===a&&b.effectTag&4&&r(c,
b.type,b.memoizedProps,b);break;case 6:break;case 4:break;default:D("163")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:b(k(c));break;default:b(c)}}},commitDetachRef:function(a){a=a.ref;null!==a&&a(null)}}}var ef={};
function ff(a){function b(a){a===ef?D("174"):void 0;return a}var c=a.getChildHostContext,d=a.getRootHostContext,e={current:ef},f={current:ef},g={current:ef};return{getHostContext:function(){return b(e.current)},getRootHostContainer:function(){return b(g.current)},popHostContainer:function(a){V(e,a);V(f,a);V(g,a)},popHostContext:function(a){f.current===a&&(V(e,a),V(f,a))},pushHostContainer:function(a,b){W(g,b,a);b=d(b);W(f,a,a);W(e,b,a)},pushHostContext:function(a){var d=b(g.current),k=b(e.current);
d=c(k,a.type,d);k!==d&&(W(f,a,a),W(e,d,a))},resetHostContainer:function(){e.current=ef;g.current=ef}}}
function gf(a){function b(a,b){var c=new Y(5,null,0);c.type="DELETED";c.stateNode=b;c["return"]=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case 5:return f(b,a.type,a.pendingProps);case 6:return g(b,a.pendingProps);default:return!1}}function d(a){for(a=a["return"];null!==a&&5!==a.tag&&3!==a.tag;)a=a["return"];y=a}var e=a.shouldSetTextContent;a=a.hydration;if(!a)return{enterHydrationState:function(){return!1},
resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){D("175")},prepareToHydrateHostTextInstance:function(){D("176")},popHydrationState:function(){return!1}};var f=a.canHydrateInstance,g=a.canHydrateTextInstance,k=a.getNextHydratableSibling,h=a.getFirstHydratableChild,r=a.hydrateInstance,n=a.hydrateTextInstance,y=null,u=null,x=!1;return{enterHydrationState:function(a){u=h(a.stateNode.containerInfo);y=a;return x=!0},resetHydrationState:function(){u=
y=null;x=!1},tryToClaimNextHydratableInstance:function(a){if(x){var d=u;if(d){if(!c(a,d)){d=k(d);if(!d||!c(a,d)){a.effectTag|=2;x=!1;y=a;return}b(y,u)}a.stateNode=d;y=a;u=h(d)}else a.effectTag|=2,x=!1,y=a}},prepareToHydrateHostInstance:function(a,b,c){b=r(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return n(a.stateNode,a.memoizedProps,a)},popHydrationState:function(a){if(a!==y)return!1;if(!x)return d(a),x=!0,!1;var c=
a.type;if(5!==a.tag||"head"!==c&&"body"!==c&&!e(c,a.memoizedProps))for(c=u;c;)b(a,c),c=k(c);d(a);u=y?k(a.stateNode):null;return!0}}}
function hf(a){function b(a){Lb=ma=!0;var b=a.stateNode;b.current===a?D("177"):void 0;b.isReadyForCommit=!1;dd.current=null;if(1<a.effectTag)if(null!==a.lastEffect){a.lastEffect.nextEffect=a;var c=a.firstEffect}else c=a;else c=a.firstEffect;ug();for(q=c;null!==q;){var d=!1,e=void 0;try{for(;null!==q;){var f=q.effectTag;f&16&&vg(q);if(f&128){var g=q.alternate;null!==g&&wg(g)}switch(f&-242){case 2:Ge(q);q.effectTag&=-3;break;case 6:Ge(q);q.effectTag&=-3;He(q.alternate,q);break;case 4:He(q.alternate,
q);break;case 8:Lc=!0,xg(q),Lc=!1}q=q.nextEffect}}catch(Mc){d=!0,e=Mc}d&&(null===q?D("178"):void 0,k(q,e),null!==q&&(q=q.nextEffect))}yg();b.current=a;for(q=c;null!==q;){c=!1;d=void 0;try{for(;null!==q;){var h=q.effectTag;h&36&&zg(q.alternate,q);h&128&&Ag(q);if(h&64)switch(e=q,f=void 0,null!==P&&(f=P.get(e),P["delete"](e),null==f&&null!==e.alternate&&(e=e.alternate,f=P.get(e),P["delete"](e))),null==f?D("184"):void 0,e.tag){case 2:e.stateNode.componentDidCatch(f.error,{componentStack:f.componentStack});
break;case 3:null===ba&&(ba=f.error);break;default:D("157")}var Fa=q.nextEffect;q.nextEffect=null;q=Fa}}catch(Mc){c=!0,d=Mc}c&&(null===q?D("178"):void 0,k(q,d),null!==q&&(q=q.nextEffect))}ma=Lb=!1;"function"===typeof ye&&ye(a.stateNode);fa&&(fa.forEach(F),fa=null);null!==ba&&(a=ba,ba=null,v(a));b=b.current.expirationTime;0===b&&(na=P=null);return b}function c(a){for(;;){var b=ng(a.alternate,a,J),c=a["return"],d=a.sibling;var e=a;if(2147483647===J||2147483647!==e.expirationTime){if(2!==e.tag&&3!==
e.tag)var f=0;else f=e.updateQueue,f=null===f?0:f.expirationTime;for(var g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;
if(null!==c)a=c;else{a.stateNode.isReadyForCommit=!0;break}}return null}function d(a){var b=w(a.alternate,a,J);null===b&&(b=c(a));dd.current=null;return b}function e(a){var b=mg(a.alternate,a,J);null===b&&(b=c(a));dd.current=null;return b}function f(a){if(null!==P){if(!(0===J||J>a))if(J<=Nc)for(;null!==E;)E=h(E)?e(E):d(E);else for(;null!==E&&!p();)E=h(E)?e(E):d(E)}else if(!(0===J||J>a))if(J<=Nc)for(;null!==E;)E=d(E);else for(;null!==E&&!p();)E=d(E)}function g(a,b){ma?D("243"):void 0;ma=!0;a.isReadyForCommit=
!1;if(a!==fb||b!==J||null===E){for(;-1<ce;)be[ce]=null,ce--;ee=C;de.current=C;X.current=!1;lg();fb=a;J=b;E=ne(fb.current,null,b)}var c=!1,d=null;try{f(b)}catch(Kc){c=!0,d=Kc}for(;c;){if(gb){ba=d;break}var g=E;if(null===g)gb=!0;else{var h=k(g,d);null===h?D("183"):void 0;if(!gb){try{c=h;d=b;for(h=c;null!==g;){switch(g.tag){case 2:ie(g);break;case 5:l(g);break;case 3:Ee(g);break;case 4:Ee(g)}if(g===h||g.alternate===h)break;g=g["return"]}E=e(c);f(d)}catch(Kc){c=!0;d=Kc;continue}break}}}b=ba;gb=ma=!1;
ba=null;null!==b&&v(b);return a.isReadyForCommit?a.current.alternate:null}function k(a,b){var c=dd.current=null,d=!1,e=!1,f=null;if(3===a.tag)c=a,r(a)&&(gb=!0);else for(var g=a["return"];null!==g&&null===c;){2===g.tag?"function"===typeof g.stateNode.componentDidCatch&&(d=!0,f=ed(g),c=g,e=!0):3===g.tag&&(c=g);if(r(g)){if(Lc||null!==fa&&(fa.has(g)||null!==g.alternate&&fa.has(g.alternate)))return null;c=null;e=!1}g=g["return"]}if(null!==c){null===na&&(na=new Set);na.add(c);var h="";g=a;do{a:switch(g.tag){case 0:case 1:case 2:case 5:var k=
g._debugOwner,l=g._debugSource;var Fa=ed(g);var n=null;k&&(n=ed(k));k=l;Fa="\n    in "+(Fa||"Unknown")+(k?" (at "+k.fileName.replace(/^.*[\\\/]/,"")+":"+k.lineNumber+")":n?" (created by "+n+")":"");break a;default:Fa=""}h+=Fa;g=g["return"]}while(g);g=h;a=ed(a);null===P&&(P=new Map);b={componentName:a,componentStack:g,error:b,errorBoundary:d?c.stateNode:null,errorBoundaryFound:d,errorBoundaryName:f,willRetry:e};P.set(c,b);try{console.error(b.error)}catch(Bg){console.error(Bg)}Lb?(null===fa&&(fa=new Set),
fa.add(c)):F(c);return c}null===ba&&(ba=b);return null}function h(a){return null!==P&&(P.has(a)||null!==a.alternate&&P.has(a.alternate))}function r(a){return null!==na&&(na.has(a)||null!==a.alternate&&na.has(a.alternate))}function n(){return 20*(((L()+100)/20|0)+1)}function y(a){return 0!==ja?ja:ma?Lb?1:J:!Cg||a.internalContextTag&1?n():1}function u(a,b){return x(a,b,!1)}function x(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||
a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a["return"])if(3===a.tag){var c=a.stateNode;!ma&&c===fb&&b<=J&&(E=fb=null,J=0);var d=b;Mb>Dg&&D("185");if(null===c.nextScheduledRoot)c.remainingExpirationTime=d,null===M?(oa=M=c,c.nextScheduledRoot=c):(M=M.nextScheduledRoot=c,M.nextScheduledRoot=oa);else{var e=c.remainingExpirationTime;if(0===e||d<e)c.remainingExpirationTime=d}Ga||(ka?Nb&&z(c,1):1===d?I(1,null):hb||(hb=!0,Ie(T)))}else break;a=a["return"]}}function F(a){x(a,1,
!0)}function L(){return Nc=((Je()-Eg)/10|0)+2}function G(){var a=0,b=null;if(null!==M)for(var c=M,d=oa;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===M?D("244"):void 0;if(d===d.nextScheduledRoot){oa=M=d.nextScheduledRoot=null;break}else if(d===oa)oa=e=d.nextScheduledRoot,M.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===M){M=c;M.nextScheduledRoot=oa;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===
a||e<a)a=e,b=d;if(d===M)break;c=d;d=d.nextScheduledRoot}}c=pa;null!==c&&c===b?Mb++:Mb=0;pa=b;Ob=a}function T(a){I(0,a)}function I(a,b){ib=b;for(G();null!==pa&&0!==Ob&&(0===a||Ob<=a)&&!Oc;)z(pa,Ob),G();null!==ib&&(hb=!1);null===pa||hb||(hb=!0,Ie(T));ib=null;Oc=!1;Mb=0;if(Pb)throw a=Pc,Pc=null,Pb=!1,a;}function z(a,c){Ga?D("245"):void 0;Ga=!0;if(c<=L()){var d=a.finishedWork;null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(a.remainingExpirationTime=
b(d)))}else d=a.finishedWork,null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(p()?a.finishedWork=d:a.remainingExpirationTime=b(d)));Ga=!1}function p(){return null===ib||ib.timeRemaining()>Fg?!1:Oc=!0}function v(a){null===pa?D("246"):void 0;pa.remainingExpirationTime=0;Pb||(Pb=!0,Pc=a)}var t=ff(a),Kb=gf(a),Ee=t.popHostContainer,l=t.popHostContext,lg=t.resetHostContainer,Fe=bf(a,t,Kb,u,y),w=Fe.beginWork,mg=Fe.beginFailedWork,ng=cf(a,t,Kb).completeWork;
t=df(a,k);var vg=t.commitResetTextContent,Ge=t.commitPlacement,xg=t.commitDeletion,He=t.commitWork,zg=t.commitLifeCycles,Ag=t.commitAttachRef,wg=t.commitDetachRef,Je=a.now,Ie=a.scheduleDeferredCallback,Cg=a.useSyncScheduling,ug=a.prepareForCommit,yg=a.resetAfterCommit,Eg=Je(),Nc=2,ja=0,ma=!1,E=null,fb=null,J=0,q=null,P=null,na=null,fa=null,ba=null,gb=!1,Lb=!1,Lc=!1,oa=null,M=null,hb=!1,Ga=!1,pa=null,Ob=0,Oc=!1,Pb=!1,Pc=null,ib=null,ka=!1,Nb=!1,Dg=1E3,Mb=0,Fg=1;return{computeAsyncExpiration:n,computeExpirationForFiber:y,
scheduleWork:u,batchedUpdates:function(a,b){var c=ka;ka=!0;try{return a(b)}finally{(ka=c)||Ga||I(1,null)}},unbatchedUpdates:function(a){if(ka&&!Nb){Nb=!0;try{return a()}finally{Nb=!1}}return a()},flushSync:function(a){var b=ka;ka=!0;try{a:{var c=ja;ja=1;try{var d=a();break a}finally{ja=c}d=void 0}return d}finally{ka=b,Ga?D("187"):void 0,I(1,null)}},deferredUpdates:function(a){var b=ja;ja=n();try{return a()}finally{ja=b}}}}
function jf(a){function b(a){a=jd(a);return null===a?null:a.stateNode}var c=a.getPublicInstance;a=hf(a);var d=a.computeAsyncExpiration,e=a.computeExpirationForFiber,f=a.scheduleWork;return{createContainer:function(a,b){var c=new Y(3,null,0);a={current:c,containerInfo:a,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:b,nextScheduledRoot:null};return c.stateNode=a},updateContainer:function(a,b,c,r){var g=b.current;if(c){c=
c._reactInternalFiber;var h;b:{2===fd(c)&&2===c.tag?void 0:D("170");for(h=c;3!==h.tag;){if(ge(h)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}(h=h["return"])?void 0:D("171")}h=h.stateNode.context}c=ge(c)?ke(c,h):h}else c=C;null===b.context?b.context=c:b.pendingContext=c;b=r;b=void 0===b?null:b;r=null!=a&&null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent?d():e(g);Ce(g,{expirationTime:r,partialState:{element:a},callback:b,isReplace:!1,isForced:!1,
nextCallback:null,next:null});f(g,r)},batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return c(a.child.stateNode);default:return a.child.stateNode}},findHostInstance:b,findHostInstanceWithNoPortals:function(a){a=kd(a);return null===a?null:a.stateNode},injectIntoDevTools:function(a){var c=a.findFiberByHostInstance;return xe(A({},
a,{findHostInstanceByFiber:function(a){return b(a)},findFiberByHostInstance:function(a){return c?c(a):null}}))}}}var kf=Object.freeze({default:jf}),lf=kf&&jf||kf,mf=lf["default"]?lf["default"]:lf,nf="object"===typeof performance&&"function"===typeof performance.now,of=void 0;of=nf?function(){return performance.now()}:function(){return Date.now()};var pf=void 0;
if(m.canUseDOM)if("function"!==typeof requestIdleCallback){var qf=null,rf=!1,sf=!1,tf=0,uf=33,vf=33,wf;wf=nf?{timeRemaining:function(){return tf-performance.now()}}:{timeRemaining:function(){return tf-Date.now()}};var xf="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(a){a.source===window&&a.data===xf&&(rf=!1,a=qf,qf=null,null!==a&&a(wf))},!1);var yf=function(a){sf=!1;var b=a-tf+vf;b<vf&&uf<vf?(8>b&&(b=8),vf=b<uf?uf:b):uf=b;tf=a+vf;rf||(rf=!0,
window.postMessage(xf,"*"))};pf=function(a){qf=a;sf||(sf=!0,requestAnimationFrame(yf));return 0}}else pf=requestIdleCallback;else pf=function(a){setTimeout(function(){a({timeRemaining:function(){return Infinity}})});return 0};
var zf=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Af={},Bf={};function Cf(a){if(Bf.hasOwnProperty(a))return!0;if(Af.hasOwnProperty(a))return!1;if(zf.test(a))return Bf[a]=!0;Af[a]=!0;return!1}
function Df(a,b,c){var d=ua(b);if(d&&ta(b,c)){var e=d.mutationMethod;e?e(a,c):null==c||d.hasBooleanValue&&!c||d.hasNumericValue&&isNaN(c)||d.hasPositiveNumericValue&&1>c||d.hasOverloadedBooleanValue&&!1===c?Ef(a,b):d.mustUseProperty?a[d.propertyName]=c:(b=d.attributeName,(e=d.attributeNamespace)?a.setAttributeNS(e,b,""+c):d.hasBooleanValue||d.hasOverloadedBooleanValue&&!0===c?a.setAttribute(b,""):a.setAttribute(b,""+c))}else Ff(a,b,ta(b,c)?c:null)}
function Ff(a,b,c){Cf(b)&&(null==c?a.removeAttribute(b):a.setAttribute(b,""+c))}function Ef(a,b){var c=ua(b);c?(b=c.mutationMethod)?b(a,void 0):c.mustUseProperty?a[c.propertyName]=c.hasBooleanValue?!1:"":a.removeAttribute(c.attributeName):a.removeAttribute(b)}
function Gf(a,b){var c=b.value,d=b.checked;return A({type:void 0,step:void 0,min:void 0,max:void 0},b,{defaultChecked:void 0,defaultValue:void 0,value:null!=c?c:a._wrapperState.initialValue,checked:null!=d?d:a._wrapperState.initialChecked})}function Hf(a,b){var c=b.defaultValue;a._wrapperState={initialChecked:null!=b.checked?b.checked:b.defaultChecked,initialValue:null!=b.value?b.value:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}
function If(a,b){var c=b.checked;null!=c&&Df(a,"checked",c||!1);c=b.value;if(null!=c)if(0===c&&""===a.value)a.value="0";else if("number"===b.type){if(b=parseFloat(a.value)||0,c!=b||c==b&&a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else null==b.value&&null!=b.defaultValue&&a.defaultValue!==""+b.defaultValue&&(a.defaultValue=""+b.defaultValue),null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
function Jf(a,b){switch(b.type){case "submit":case "reset":break;case "color":case "date":case "datetime":case "datetime-local":case "month":case "time":case "week":a.value="";a.value=a.defaultValue;break;default:a.value=a.value}b=a.name;""!==b&&(a.name="");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;""!==b&&(a.name=b)}function Kf(a){var b="";aa.Children.forEach(a,function(a){null==a||"string"!==typeof a&&"number"!==typeof a||(b+=a)});return b}
function Lf(a,b){a=A({children:void 0},b);if(b=Kf(b.children))a.children=b;return a}function Mf(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
function Nf(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Of(a,b){null!=b.dangerouslySetInnerHTML?D("91"):void 0;return A({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function Pf(a,b){var c=b.value,d=c;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?D("92"):void 0,Array.isArray(b)&&(1>=b.length?void 0:D("93"),b=b[0]),c=""+b),null==c&&(c=""),d=c);a._wrapperState={initialValue:""+d}}
function Qf(a,b){var c=b.value;null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Rf(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Sf={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
function Tf(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Uf(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?Tf(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var Vf=void 0,Wf=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Sf.svg||"innerHTML"in a)a.innerHTML=b;else{Vf=Vf||document.createElement("div");Vf.innerHTML="\x3csvg\x3e"+b+"\x3c/svg\x3e";for(b=Vf.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}}),Xf=/["'&<>]/;
function Yf(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}
m.canUseDOM&&("textContent"in document.documentElement||(Yf=function(a,b){if(3===a.nodeType)a.nodeValue=b;else{if("boolean"===typeof b||"number"===typeof b)b=""+b;else{b=""+b;var c=Xf.exec(b);if(c){var d="",e,f=0;for(e=c.index;e<b.length;e++){switch(b.charCodeAt(e)){case 34:c="\x26quot;";break;case 38:c="\x26amp;";break;case 39:c="\x26#x27;";break;case 60:c="\x26lt;";break;case 62:c="\x26gt;";break;default:continue}f!==e&&(d+=b.substring(f,e));f=e+1;d+=c}b=f!==e?d+b.substring(f,e):d}}Wf(a,b)}}));
var Zf=Yf,$f={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,
floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ag=["Webkit","ms","Moz","O"];Object.keys($f).forEach(function(a){ag.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);$f[b]=$f[a]})});
function bg(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--");var e=c;var f=b[c];e=null==f||"boolean"===typeof f||""===f?"":d||"number"!==typeof f||0===f||$f.hasOwnProperty(e)&&$f[e]?(""+f).trim():f+"px";"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var cg=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function dg(a,b,c){b&&(cg[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?D("137",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?D("60"):void 0,"object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML?void 0:D("61")),null!=b.style&&"object"!==typeof b.style?D("62",c()):void 0)}
function eg(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var fg=Sf.html,gg=B.thatReturns("");
function hg(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Cd(a);b=Qa[b];for(var d=0;d<b.length;d++){var e=b[d];c.hasOwnProperty(e)&&c[e]||("topWheel"===e?xc("wheel")?U("topWheel","wheel",a):xc("mousewheel")?U("topWheel","mousewheel",a):U("topWheel","DOMMouseScroll",a):"topScroll"===e?rd("topScroll","scroll",a):"topFocus"===e||"topBlur"===e?(rd("topFocus","focus",a),rd("topBlur","blur",a),c.topBlur=!0,c.topFocus=!0):"topCancel"===e?(xc("cancel",!0)&&rd("topCancel","cancel",a),c.topCancel=
!0):"topClose"===e?(xc("close",!0)&&rd("topClose","close",a),c.topClose=!0):yd.hasOwnProperty(e)&&U(e,yd[e],a),c[e]=!0)}}
var ig={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",
topWaiting:"waiting"};function jg(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===fg&&(d=Tf(a));d===fg?"script"===a?(a=c.createElement("div"),a.innerHTML="\x3cscript\x3e\x3c/script\x3e",a=a.removeChild(a.firstChild)):a="string"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function kg(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}
function og(a,b,c,d){var e=eg(b,c);switch(b){case "iframe":case "object":U("topLoad","load",a);var f=c;break;case "video":case "audio":for(f in ig)ig.hasOwnProperty(f)&&U(f,ig[f],a);f=c;break;case "source":U("topError","error",a);f=c;break;case "img":case "image":U("topError","error",a);U("topLoad","load",a);f=c;break;case "form":U("topReset","reset",a);U("topSubmit","submit",a);f=c;break;case "details":U("topToggle","toggle",a);f=c;break;case "input":Hf(a,c);f=Gf(a,c);U("topInvalid","invalid",a);
hg(d,"onChange");break;case "option":f=Lf(a,c);break;case "select":Nf(a,c);f=A({},c,{value:void 0});U("topInvalid","invalid",a);hg(d,"onChange");break;case "textarea":Pf(a,c);f=Of(a,c);U("topInvalid","invalid",a);hg(d,"onChange");break;default:f=c}dg(b,f,gg);var g=f,k;for(k in g)if(g.hasOwnProperty(k)){var h=g[k];"style"===k?bg(a,h,gg):"dangerouslySetInnerHTML"===k?(h=h?h.__html:void 0,null!=h&&Wf(a,h)):"children"===k?"string"===typeof h?("textarea"!==b||""!==h)&&Zf(a,h):"number"===typeof h&&Zf(a,
""+h):"suppressContentEditableWarning"!==k&&"suppressHydrationWarning"!==k&&"autoFocus"!==k&&(Pa.hasOwnProperty(k)?null!=h&&hg(d,k):e?Ff(a,k,h):null!=h&&Df(a,k,h))}switch(b){case "input":Ac(a);Jf(a,c);break;case "textarea":Ac(a);Rf(a,c);break;case "option":null!=c.value&&a.setAttribute("value",c.value);break;case "select":a.multiple=!!c.multiple;b=c.value;null!=b?Mf(a,!!c.multiple,b,!1):null!=c.defaultValue&&Mf(a,!!c.multiple,c.defaultValue,!0);break;default:"function"===typeof f.onClick&&(a.onclick=
B)}}
function pg(a,b,c,d,e){var f=null;switch(b){case "input":c=Gf(a,c);d=Gf(a,d);f=[];break;case "option":c=Lf(a,c);d=Lf(a,d);f=[];break;case "select":c=A({},c,{value:void 0});d=A({},d,{value:void 0});f=[];break;case "textarea":c=Of(a,c);d=Of(a,d);f=[];break;default:"function"!==typeof c.onClick&&"function"===typeof d.onClick&&(a.onclick=B)}dg(b,d,gg);var g,k;a=null;for(g in c)if(!d.hasOwnProperty(g)&&c.hasOwnProperty(g)&&null!=c[g])if("style"===g)for(k in b=c[g],b)b.hasOwnProperty(k)&&(a||(a={}),a[k]=
"");else"dangerouslySetInnerHTML"!==g&&"children"!==g&&"suppressContentEditableWarning"!==g&&"suppressHydrationWarning"!==g&&"autoFocus"!==g&&(Pa.hasOwnProperty(g)?f||(f=[]):(f=f||[]).push(g,null));for(g in d){var h=d[g];b=null!=c?c[g]:void 0;if(d.hasOwnProperty(g)&&h!==b&&(null!=h||null!=b))if("style"===g)if(b){for(k in b)!b.hasOwnProperty(k)||h&&h.hasOwnProperty(k)||(a||(a={}),a[k]="");for(k in h)h.hasOwnProperty(k)&&b[k]!==h[k]&&(a||(a={}),a[k]=h[k])}else a||(f||(f=[]),f.push(g,a)),a=h;else"dangerouslySetInnerHTML"===
g?(h=h?h.__html:void 0,b=b?b.__html:void 0,null!=h&&b!==h&&(f=f||[]).push(g,""+h)):"children"===g?b===h||"string"!==typeof h&&"number"!==typeof h||(f=f||[]).push(g,""+h):"suppressContentEditableWarning"!==g&&"suppressHydrationWarning"!==g&&(Pa.hasOwnProperty(g)?(null!=h&&hg(e,g),f||b===h||(f=[])):(f=f||[]).push(g,h))}a&&(f=f||[]).push("style",a);return f}
function qg(a,b,c,d,e){eg(c,d);d=eg(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],k=b[f+1];"style"===g?bg(a,k,gg):"dangerouslySetInnerHTML"===g?Wf(a,k):"children"===g?Zf(a,k):d?null!=k?Ff(a,g,k):a.removeAttribute(g):null!=k?Df(a,g,k):Ef(a,g)}switch(c){case "input":If(a,e);Bc(a);break;case "textarea":Qf(a,e);break;case "select":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Mf(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=
e.defaultValue?Mf(a,!!e.multiple,e.defaultValue,!0):Mf(a,!!e.multiple,e.multiple?[]:"",!1))}}
function rg(a,b,c,d,e){switch(b){case "iframe":case "object":U("topLoad","load",a);break;case "video":case "audio":for(var f in ig)ig.hasOwnProperty(f)&&U(f,ig[f],a);break;case "source":U("topError","error",a);break;case "img":case "image":U("topError","error",a);U("topLoad","load",a);break;case "form":U("topReset","reset",a);U("topSubmit","submit",a);break;case "details":U("topToggle","toggle",a);break;case "input":Hf(a,c);U("topInvalid","invalid",a);hg(e,"onChange");break;case "select":Nf(a,c);
U("topInvalid","invalid",a);hg(e,"onChange");break;case "textarea":Pf(a,c),U("topInvalid","invalid",a),hg(e,"onChange")}dg(b,c,gg);d=null;for(var g in c)c.hasOwnProperty(g)&&(f=c[g],"children"===g?"string"===typeof f?a.textContent!==f&&(d=["children",f]):"number"===typeof f&&a.textContent!==""+f&&(d=["children",""+f]):Pa.hasOwnProperty(g)&&null!=f&&hg(e,g));switch(b){case "input":Ac(a);Jf(a,c);break;case "textarea":Ac(a);Rf(a,c);break;case "select":case "option":break;default:"function"===typeof c.onClick&&
(a.onclick=B)}return d}function sg(a,b){return a.nodeValue!==b}
var tg=Object.freeze({createElement:jg,createTextNode:kg,setInitialProperties:og,diffProperties:pg,updateProperties:qg,diffHydratedProperties:rg,diffHydratedText:sg,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case "input":If(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=
c.parentNode;c=c.querySelectorAll("input[name\x3d"+JSON.stringify(""+b)+'][type\x3d"radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=rb(d);e?void 0:D("90");If(d,e)}}}break;case "textarea":Qf(a,c);break;case "select":b=c.value,null!=b&&Mf(a,!!c.multiple,b,!1)}}});mc.injectFiberControlledHostComponent(tg);var Gg=null,Hg=null;function Ig(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}
function Jg(a){a=a?9===a.nodeType?a.documentElement:a.firstChild:null;return!(!a||1!==a.nodeType||!a.hasAttribute("data-reactroot"))}
var Z=mf({getRootHostContext:function(a){var b=a.nodeType;switch(b){case 9:case 11:a=(a=a.documentElement)?a.namespaceURI:Uf(null,"");break;default:b=8===b?a.parentNode:a,a=b.namespaceURI||null,b=b.tagName,a=Uf(a,b)}return a},getChildHostContext:function(a,b){return Uf(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){Gg=od;var a=da();if(Fd(a)){if("selectionStart"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{var c=window.getSelection&&window.getSelection();
if(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(x){b=null;break a}var f=0,g=-1,k=-1,h=0,r=0,n=a,y=null;b:for(;;){for(var u;;){n!==b||0!==d&&3!==n.nodeType||(g=f+d);n!==e||0!==c&&3!==n.nodeType||(k=f+c);3===n.nodeType&&(f+=n.nodeValue.length);if(null===(u=n.firstChild))break;y=n;n=u}for(;;){if(n===a)break b;y===b&&++h===d&&(g=f);y===e&&++r===c&&(k=f);if(null!==(u=n.nextSibling))break;n=y;y=n.parentNode}n=u}b=-1===g||-1===k?null:
{start:g,end:k}}else b=null}b=b||{start:0,end:0}}else b=null;Hg={focusedElem:a,selectionRange:b};pd(!1)},resetAfterCommit:function(){var a=Hg,b=da(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&ha(document.documentElement,c)){if(Fd(c))if(b=d.start,a=d.end,void 0===a&&(a=b),"selectionStart"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(window.getSelection){b=window.getSelection();var e=c[Db()].length;a=Math.min(d.start,e);d=void 0===d.end?a:Math.min(d.end,e);!b.extend&&a>
d&&(e=d,d=a,a=e);e=Ed(c,a);var f=Ed(c,d);if(e&&f&&(1!==b.rangeCount||b.anchorNode!==e.node||b.anchorOffset!==e.offset||b.focusNode!==f.node||b.focusOffset!==f.offset)){var g=document.createRange();g.setStart(e.node,e.offset);b.removeAllRanges();a>d?(b.addRange(g),b.extend(f.node,f.offset)):(g.setEnd(f.node,f.offset),b.addRange(g))}}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});ia(c);for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=
a.top}Hg=null;pd(Gg);Gg=null},createInstance:function(a,b,c,d,e){a=jg(a,b,c,d);a[O]=e;a[ob]=b;return a},appendInitialChild:function(a,b){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){og(a,b,c,d);a:{switch(b){case "button":case "input":case "select":case "textarea":a=!!c.autoFocus;break a}a=!1}return a},prepareUpdate:function(a,b,c,d,e){return pg(a,b,c,d,e)},shouldSetTextContent:function(a,b){return"textarea"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===
typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&"string"===typeof b.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=kg(a,b);a[O]=d;return a},now:of,mutation:{commitMount:function(a){a.focus()},commitUpdate:function(a,b,c,d,e){a[ob]=e;qg(a,b,c,d,e)},resetTextContent:function(a){a.textContent=""},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,
b){8===a.nodeType?a.parentNode.insertBefore(b,a):a.appendChild(b)},insertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,b,c){8===a.nodeType?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){8===a.nodeType?a.parentNode.removeChild(b):a.removeChild(b)}},hydration:{canHydrateInstance:function(a,b){return 1===a.nodeType&&b.toLowerCase()===a.nodeName.toLowerCase()},canHydrateTextInstance:function(a,
b){return""===b?!1:3===a.nodeType},getNextHydratableSibling:function(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){a[O]=f;a[ob]=c;return rg(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){a[O]=c;return sg(a,b)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},
didNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},didNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:pf,useSyncScheduling:!0});qc=Z.batchedUpdates;
function Kg(a,b,c,d,e){Ig(c)?void 0:D("200");var f=c._reactRootContainer;if(f)Z.updateContainer(b,f,a,e);else{d=d||Jg(c);if(!d)for(f=void 0;f=c.lastChild;)c.removeChild(f);var g=Z.createContainer(c,d);f=c._reactRootContainer=g;Z.unbatchedUpdates(function(){Z.updateContainer(b,g,a,e)})}return Z.getPublicRootInstance(f)}function Lg(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Ig(b)?void 0:D("200");return Oe(a,b,null,c)}
function Mg(a,b){this._reactRootContainer=Z.createContainer(a,b)}Mg.prototype.render=function(a,b){Z.updateContainer(a,this._reactRootContainer,null,b)};Mg.prototype.unmount=function(a){Z.updateContainer(null,this._reactRootContainer,null,a)};
var Ng={createPortal:Lg,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(b)return Z.findHostInstance(b);"function"===typeof a.render?D("188"):D("213",Object.keys(a))},hydrate:function(a,b,c){return Kg(null,a,b,!0,c)},render:function(a,b,c){return Kg(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?D("38"):void 0;return Kg(a,b,c,!1,d)},unmountComponentAtNode:function(a){Ig(a)?void 0:
D("40");return a._reactRootContainer?(Z.unbatchedUpdates(function(){Kg(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:Lg,unstable_batchedUpdates:sc,unstable_deferredUpdates:Z.deferredUpdates,flushSync:Z.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:mb,EventPluginRegistry:Ta,EventPropagators:Bb,ReactControlledComponent:pc,ReactDOMComponentTree:sb,ReactDOMEventListener:sd}};
Z.injectIntoDevTools({findFiberByHostInstance:pb,bundleType:0,version:"16.1.0",rendererPackageName:"react-dom"});var Og=Object.freeze({default:Ng}),Pg=Og&&Ng||Og;module.exports=Pg["default"]?Pg["default"]:Pg;


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (false) {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (true) {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(197);
} else {
  module.exports = require('./cjs/react-dom.development.js');
}


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.8.6
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

Object.defineProperty(exports,"__esModule",{value:!0});
var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?Symbol.for("react.memo"):
60115,r=b?Symbol.for("react.lazy"):60116;function t(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return u}}case r:case q:case d:return u}}}function v(a){return t(a)===m}exports.typeOf=t;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;
exports.Fragment=e;exports.Lazy=r;exports.Memo=q;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||"object"===typeof a&&null!==a&&(a.$$typeof===r||a.$$typeof===q||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n)};exports.isAsyncMode=function(a){return v(a)||t(a)===l};exports.isConcurrentMode=v;exports.isContextConsumer=function(a){return t(a)===k};
exports.isContextProvider=function(a){return t(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return t(a)===n};exports.isFragment=function(a){return t(a)===e};exports.isLazy=function(a){return t(a)===r};exports.isMemo=function(a){return t(a)===q};exports.isPortal=function(a){return t(a)===d};exports.isProfiler=function(a){return t(a)===g};exports.isStrictMode=function(a){return t(a)===f};
exports.isSuspense=function(a){return t(a)===p};


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(5);

exports.__esModule = true;
exports.createProvider = createProvider;
exports.default = void 0;

var _inheritsLoose2 = _interopRequireDefault(__webpack_require__(55));

var _react = __webpack_require__(7);

var _propTypes = _interopRequireDefault(__webpack_require__(94));

var _PropTypes = __webpack_require__(98);

var _warning = _interopRequireDefault(__webpack_require__(49));

var didWarnAboutReceivingStore = false;

function warnAboutReceivingStore() {
  if (didWarnAboutReceivingStore) {
    return;
  }

  didWarnAboutReceivingStore = true;
  (0, _warning.default)('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reduxjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
}

function createProvider(storeKey) {
  var _Provider$childContex;

  if (storeKey === void 0) {
    storeKey = 'store';
  }

  var subscriptionKey = storeKey + "Subscription";

  var Provider =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(Provider, _Component);
    var _proto = Provider.prototype;

    _proto.getChildContext = function getChildContext() {
      var _ref;

      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;
    };

    function Provider(props, context) {
      var _this;

      _this = _Component.call(this, props, context) || this;
      _this[storeKey] = props.store;
      return _this;
    }

    _proto.render = function render() {
      return _react.Children.only(this.props.children);
    };

    return Provider;
  }(_react.Component);

  if (false) {
    Provider.prototype.componentWillReceiveProps = function (nextProps) {
      if (this[storeKey] !== nextProps.store) {
        warnAboutReceivingStore();
      }
    };
  }

  Provider.propTypes = {
    store: _PropTypes.storeShape.isRequired,
    children: _propTypes.default.element.isRequired
  };
  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = _PropTypes.storeShape.isRequired, _Provider$childContex[subscriptionKey] = _PropTypes.subscriptionShape, _Provider$childContex);
  return Provider;
}

var _default = createProvider();

exports.default = _default;

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(5);

exports.__esModule = true;
exports.createConnect = createConnect;
exports.default = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(33));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(34));

var _connectAdvanced = _interopRequireDefault(__webpack_require__(96));

var _shallowEqual = _interopRequireDefault(__webpack_require__(209));

var _mapDispatchToProps = _interopRequireDefault(__webpack_require__(202));

var _mapStateToProps = _interopRequireDefault(__webpack_require__(203));

var _mergeProps = _interopRequireDefault(__webpack_require__(204));

var _selectorFactory = _interopRequireDefault(__webpack_require__(205));

/*
  connect is a facade over connectAdvanced. It turns its args into a compatible
  selectorFactory, which has the signature:

    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
  
  connect passes its args to connectAdvanced as options, which will in turn pass them to
  selectorFactory each time a Connect component instance is instantiated or hot reloaded.

  selectorFactory returns a final props selector from its mapStateToProps,
  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
  mergePropsFactories, and pure args.

  The resulting final props selector is called by the Connect component instance whenever
  it receives new props or store state.
 */
function match(arg, factories, name) {
  for (var i = factories.length - 1; i >= 0; i--) {
    var result = factories[i](arg);
    if (result) return result;
  }

  return function (dispatch, options) {
    throw new Error("Invalid value of type " + typeof arg + " for " + name + " argument when connecting component " + options.wrappedComponentName + ".");
  };
}

function strictEqual(a, b) {
  return a === b;
} // createConnect with default args builds the 'official' connect behavior. Calling it with
// different options opens up some testing and extensibility scenarios


function createConnect(_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$connectHOC = _ref.connectHOC,
      connectHOC = _ref$connectHOC === void 0 ? _connectAdvanced.default : _ref$connectHOC,
      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
      mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? _mapStateToProps.default : _ref$mapStateToPropsF,
      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
      mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? _mapDispatchToProps.default : _ref$mapDispatchToPro,
      _ref$mergePropsFactor = _ref.mergePropsFactories,
      mergePropsFactories = _ref$mergePropsFactor === void 0 ? _mergeProps.default : _ref$mergePropsFactor,
      _ref$selectorFactory = _ref.selectorFactory,
      selectorFactory = _ref$selectorFactory === void 0 ? _selectorFactory.default : _ref$selectorFactory;

  return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {
    if (_ref2 === void 0) {
      _ref2 = {};
    }

    var _ref3 = _ref2,
        _ref3$pure = _ref3.pure,
        pure = _ref3$pure === void 0 ? true : _ref3$pure,
        _ref3$areStatesEqual = _ref3.areStatesEqual,
        areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual,
        _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,
        areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? _shallowEqual.default : _ref3$areOwnPropsEqua,
        _ref3$areStatePropsEq = _ref3.areStatePropsEqual,
        areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? _shallowEqual.default : _ref3$areStatePropsEq,
        _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,
        areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? _shallowEqual.default : _ref3$areMergedPropsE,
        extraOptions = (0, _objectWithoutPropertiesLoose2.default)(_ref3, ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"]);
    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');
    return connectHOC(selectorFactory, (0, _extends2.default)({
      // used in error messages
      methodName: 'connect',
      // used to compute Connect's displayName from the wrapped component's displayName.
      getDisplayName: function getDisplayName(name) {
        return "Connect(" + name + ")";
      },
      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
      shouldHandleStateChanges: Boolean(mapStateToProps),
      // passed through to selectorFactory
      initMapStateToProps: initMapStateToProps,
      initMapDispatchToProps: initMapDispatchToProps,
      initMergeProps: initMergeProps,
      pure: pure,
      areStatesEqual: areStatesEqual,
      areOwnPropsEqual: areOwnPropsEqual,
      areStatePropsEqual: areStatePropsEqual,
      areMergedPropsEqual: areMergedPropsEqual
    }, extraOptions));
  };
}

var _default = createConnect();

exports.default = _default;

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.whenMapDispatchToPropsIsFunction = whenMapDispatchToPropsIsFunction;
exports.whenMapDispatchToPropsIsMissing = whenMapDispatchToPropsIsMissing;
exports.whenMapDispatchToPropsIsObject = whenMapDispatchToPropsIsObject;
exports.default = void 0;

var _redux = __webpack_require__(19);

var _wrapMapToProps = __webpack_require__(97);

function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
  return typeof mapDispatchToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;
}

function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
  return !mapDispatchToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
    return {
      dispatch: dispatch
    };
  }) : undefined;
}

function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
    return (0, _redux.bindActionCreators)(mapDispatchToProps, dispatch);
  }) : undefined;
}

var _default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];
exports.default = _default;

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.whenMapStateToPropsIsFunction = whenMapStateToPropsIsFunction;
exports.whenMapStateToPropsIsMissing = whenMapStateToPropsIsMissing;
exports.default = void 0;

var _wrapMapToProps = __webpack_require__(97);

function whenMapStateToPropsIsFunction(mapStateToProps) {
  return typeof mapStateToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;
}

function whenMapStateToPropsIsMissing(mapStateToProps) {
  return !mapStateToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function () {
    return {};
  }) : undefined;
}

var _default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];
exports.default = _default;

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(5);

exports.__esModule = true;
exports.defaultMergeProps = defaultMergeProps;
exports.wrapMergePropsFunc = wrapMergePropsFunc;
exports.whenMergePropsIsFunction = whenMergePropsIsFunction;
exports.whenMergePropsIsOmitted = whenMergePropsIsOmitted;
exports.default = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(33));

var _verifyPlainObject = _interopRequireDefault(__webpack_require__(99));

function defaultMergeProps(stateProps, dispatchProps, ownProps) {
  return (0, _extends2.default)({}, ownProps, stateProps, dispatchProps);
}

function wrapMergePropsFunc(mergeProps) {
  return function initMergePropsProxy(dispatch, _ref) {
    var displayName = _ref.displayName,
        pure = _ref.pure,
        areMergedPropsEqual = _ref.areMergedPropsEqual;
    var hasRunOnce = false;
    var mergedProps;
    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

      if (hasRunOnce) {
        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
      } else {
        hasRunOnce = true;
        mergedProps = nextMergedProps;
        if (false) (0, _verifyPlainObject.default)(mergedProps, displayName, 'mergeProps');
      }

      return mergedProps;
    };
  };
}

function whenMergePropsIsFunction(mergeProps) {
  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
}

function whenMergePropsIsOmitted(mergeProps) {
  return !mergeProps ? function () {
    return defaultMergeProps;
  } : undefined;
}

var _default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];
exports.default = _default;

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(5);

exports.__esModule = true;
exports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;
exports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;
exports.default = finalPropsSelectorFactory;

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(34));

var _verifySubselectors = _interopRequireDefault(__webpack_require__(206));

function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
  return function impureFinalPropsSelector(state, ownProps) {
    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
  };
}

function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
  var areStatesEqual = _ref.areStatesEqual,
      areOwnPropsEqual = _ref.areOwnPropsEqual,
      areStatePropsEqual = _ref.areStatePropsEqual;
  var hasRunAtLeastOnce = false;
  var state;
  var ownProps;
  var stateProps;
  var dispatchProps;
  var mergedProps;

  function handleFirstCall(firstState, firstOwnProps) {
    state = firstState;
    ownProps = firstOwnProps;
    stateProps = mapStateToProps(state, ownProps);
    dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    hasRunAtLeastOnce = true;
    return mergedProps;
  }

  function handleNewPropsAndNewState() {
    stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewProps() {
    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewState() {
    var nextStateProps = mapStateToProps(state, ownProps);
    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
    stateProps = nextStateProps;
    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleSubsequentCalls(nextState, nextOwnProps) {
    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
    var stateChanged = !areStatesEqual(nextState, state);
    state = nextState;
    ownProps = nextOwnProps;
    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
    if (propsChanged) return handleNewProps();
    if (stateChanged) return handleNewState();
    return mergedProps;
  }

  return function pureFinalPropsSelector(nextState, nextOwnProps) {
    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
  };
} // TODO: Add more comments
// If pure is true, the selector returned by selectorFactory will memoize its results,
// allowing connectAdvanced's shouldComponentUpdate to return false if final
// props have not changed. If false, the selector will always return a new
// object and shouldComponentUpdate will always return true.


function finalPropsSelectorFactory(dispatch, _ref2) {
  var initMapStateToProps = _ref2.initMapStateToProps,
      initMapDispatchToProps = _ref2.initMapDispatchToProps,
      initMergeProps = _ref2.initMergeProps,
      options = (0, _objectWithoutPropertiesLoose2.default)(_ref2, ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"]);
  var mapStateToProps = initMapStateToProps(dispatch, options);
  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
  var mergeProps = initMergeProps(dispatch, options);

  if (false) {
    (0, _verifySubselectors.default)(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
  }

  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
}

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(5);

exports.__esModule = true;
exports.default = verifySubselectors;

var _warning = _interopRequireDefault(__webpack_require__(49));

function verify(selector, methodName, displayName) {
  if (!selector) {
    throw new Error("Unexpected value for " + methodName + " in " + displayName + ".");
  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
    if (!selector.hasOwnProperty('dependsOnOwnProps')) {
      (0, _warning.default)("The selector for " + methodName + " of " + displayName + " did not specify a value for dependsOnOwnProps.");
    }
  }
}

function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
  verify(mapStateToProps, 'mapStateToProps', displayName);
  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
  verify(mergeProps, 'mergeProps', displayName);
}

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;
// encapsulates the subscription logic for connecting a component to the redux store, as
// well as nesting subscriptions of descendant components, so that we can ensure the
// ancestor components re-render before descendants
var CLEARED = null;
var nullListeners = {
  notify: function notify() {}
};

function createListenerCollection() {
  // the current/next pattern is copied from redux's createStore code.
  // TODO: refactor+expose that code to be reusable here?
  var current = [];
  var next = [];
  return {
    clear: function clear() {
      next = CLEARED;
      current = CLEARED;
    },
    notify: function notify() {
      var listeners = current = next;

      for (var i = 0; i < listeners.length; i++) {
        listeners[i]();
      }
    },
    get: function get() {
      return next;
    },
    subscribe: function subscribe(listener) {
      var isSubscribed = true;
      if (next === current) next = current.slice();
      next.push(listener);
      return function unsubscribe() {
        if (!isSubscribed || current === CLEARED) return;
        isSubscribed = false;
        if (next === current) next = current.slice();
        next.splice(next.indexOf(listener), 1);
      };
    }
  };
}

var Subscription =
/*#__PURE__*/
function () {
  function Subscription(store, parentSub, onStateChange) {
    this.store = store;
    this.parentSub = parentSub;
    this.onStateChange = onStateChange;
    this.unsubscribe = null;
    this.listeners = nullListeners;
  }

  var _proto = Subscription.prototype;

  _proto.addNestedSub = function addNestedSub(listener) {
    this.trySubscribe();
    return this.listeners.subscribe(listener);
  };

  _proto.notifyNestedSubs = function notifyNestedSubs() {
    this.listeners.notify();
  };

  _proto.isSubscribed = function isSubscribed() {
    return Boolean(this.unsubscribe);
  };

  _proto.trySubscribe = function trySubscribe() {
    if (!this.unsubscribe) {
      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);
      this.listeners = createListenerCollection();
    }
  };

  _proto.tryUnsubscribe = function tryUnsubscribe() {
    if (this.unsubscribe) {
      this.unsubscribe();
      this.unsubscribe = null;
      this.listeners.clear();
      this.listeners = nullListeners;
    }
  };

  return Subscription;
}();

exports.default = Subscription;

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = isPlainObject;

/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = Object.getPrototypeOf(obj);
  if (proto === null) return true;
  var baseProto = proto;

  while (Object.getPrototypeOf(baseProto) !== null) {
    baseProto = Object.getPrototypeOf(baseProto);
  }

  return proto === baseProto;
}

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = shallowEqual;
var hasOwn = Object.prototype.hasOwnProperty;

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) return true;

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) return false;

  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.1.0
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var m=__webpack_require__(48),n=__webpack_require__(84),p=__webpack_require__(46);
function q(a){for(var b=arguments.length-1,e="Minified React error #"+a+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\x3d"+a,d=0;d<b;d++)e+="\x26args[]\x3d"+encodeURIComponent(arguments[d+1]);b=Error(e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.");b.name="Invariant Violation";b.framesToPop=1;throw b;}
var r={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function t(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||r}t.prototype.isReactComponent={};t.prototype.setState=function(a,b){"object"!==typeof a&&"function"!==typeof a&&null!=a?q("85"):void 0;this.updater.enqueueSetState(this,a,b,"setState")};t.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};
function u(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||r}function v(){}v.prototype=t.prototype;var w=u.prototype=new v;w.constructor=u;m(w,t.prototype);w.isPureReactComponent=!0;function x(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||r}var y=x.prototype=new v;y.constructor=x;m(y,t.prototype);y.unstable_isAsyncReactComponent=!0;y.render=function(){return this.props.children};
var z={current:null},A=Object.prototype.hasOwnProperty,B="function"===typeof Symbol&&Symbol["for"]&&Symbol["for"]("react.element")||60103,C={key:!0,ref:!0,__self:!0,__source:!0};
function D(a,b,e){var d,c={},h=null,k=null;if(null!=b)for(d in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(h=""+b.key),b)A.call(b,d)&&!C.hasOwnProperty(d)&&(c[d]=b[d]);var f=arguments.length-2;if(1===f)c.children=e;else if(1<f){for(var g=Array(f),l=0;l<f;l++)g[l]=arguments[l+2];c.children=g}if(a&&a.defaultProps)for(d in f=a.defaultProps,f)void 0===c[d]&&(c[d]=f[d]);return{$$typeof:B,type:a,key:h,ref:k,props:c,_owner:z.current}}function E(a){return"object"===typeof a&&null!==a&&a.$$typeof===B}
var F="function"===typeof Symbol&&Symbol.iterator,G="function"===typeof Symbol&&Symbol["for"]&&Symbol["for"]("react.element")||60103,H="function"===typeof Symbol&&Symbol["for"]&&Symbol["for"]("react.portal")||60106;function escape(a){var b={"\x3d":"\x3d0",":":"\x3d2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}var I=/\/+/g,J=[];
function K(a,b,e,d){if(J.length){var c=J.pop();c.result=a;c.keyPrefix=b;c.func=e;c.context=d;c.count=0;return c}return{result:a,keyPrefix:b,func:e,context:d,count:0}}function L(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>J.length&&J.push(a)}
function M(a,b,e,d){var c=typeof a;if("undefined"===c||"boolean"===c)a=null;if(null===a||"string"===c||"number"===c||"object"===c&&a.$$typeof===G||"object"===c&&a.$$typeof===H)return e(d,a,""===b?"."+N(a,0):b),1;var h=0;b=""===b?".":b+":";if(Array.isArray(a))for(var k=0;k<a.length;k++){c=a[k];var f=b+N(c,k);h+=M(c,f,e,d)}else if(f=F&&a[F]||a["@@iterator"],"function"===typeof f)for(a=f.call(a),k=0;!(c=a.next()).done;)c=c.value,f=b+N(c,k++),h+=M(c,f,e,d);else"object"===c&&(e=""+a,q("31","[object Object]"===
e?"object with keys {"+Object.keys(a).join(", ")+"}":e,""));return h}function N(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function O(a,b){a.func.call(a.context,b,a.count++)}
function P(a,b,e){var d=a.result,c=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?Q(a,d,e,p.thatReturnsArgument):null!=a&&(E(a)&&(b=c+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(I,"$\x26/")+"/")+e,a={$$typeof:B,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),d.push(a))}function Q(a,b,e,d,c){var h="";null!=e&&(h=(""+e).replace(I,"$\x26/")+"/");b=K(b,h,d,c);null==a||M(a,"",P,b);L(b)}"function"===typeof Symbol&&Symbol["for"]&&Symbol["for"]("react.fragment");
var R={Children:{map:function(a,b,e){if(null==a)return a;var d=[];Q(a,d,null,b,e);return d},forEach:function(a,b,e){if(null==a)return a;b=K(null,null,b,e);null==a||M(a,"",O,b);L(b)},count:function(a){return null==a?0:M(a,"",p.thatReturnsNull,null)},toArray:function(a){var b=[];Q(a,b,null,p.thatReturnsArgument);return b},only:function(a){E(a)?void 0:q("143");return a}},Component:t,PureComponent:u,unstable_AsyncComponent:x,createElement:D,cloneElement:function(a,b,e){var d=m({},a.props),c=a.key,h=a.ref,
k=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,k=z.current);void 0!==b.key&&(c=""+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(g in b)A.call(b,g)&&!C.hasOwnProperty(g)&&(d[g]=void 0===b[g]&&void 0!==f?f[g]:b[g])}var g=arguments.length-2;if(1===g)d.children=e;else if(1<g){f=Array(g);for(var l=0;l<g;l++)f[l]=arguments[l+2];d.children=f}return{$$typeof:B,type:a.type,key:c,ref:h,props:d,_owner:k}},createFactory:function(a){var b=D.bind(null,a);b.type=a;return b},isValidElement:E,
version:"16.1.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:z,assign:m}},S=Object.freeze({default:R}),T=S&&R||S;module.exports=T["default"]?T["default"]:T;


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var compose = __webpack_require__(19).compose;

exports.__esModule = true;
exports.composeWithDevTools = (
  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?
    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ :
    function() {
      if (arguments.length === 0) return undefined;
      if (typeof arguments[0] === 'object') return compose;
      return compose.apply(null, arguments);
    }
);

exports.devToolsEnhancer = (
  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ ?
    window.__REDUX_DEVTOOLS_EXTENSION__ :
    function() { return function(noop) { return noop; } }
);


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
function createThunkMiddleware(extraArgument) {
  return function (_ref) {
    var dispatch = _ref.dispatch,
        getState = _ref.getState;
    return function (next) {
      return function (action) {
        if (typeof action === 'function') {
          return action(dispatch, getState, extraArgument);
        }

        return next(action);
      };
    };
  };
}

var thunk = createThunkMiddleware();
thunk.withExtraArgument = createThunkMiddleware;

exports['default'] = thunk;

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports['default'] = applyMiddleware;

var _compose = __webpack_require__(100);

var _compose2 = _interopRequireDefault(_compose);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */
function applyMiddleware() {
  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function (reducer, preloadedState, enhancer) {
      var store = createStore(reducer, preloadedState, enhancer);
      var _dispatch = store.dispatch;
      var chain = [];

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch(action) {
          return _dispatch(action);
        }
      };
      chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);

      return _extends({}, store, {
        dispatch: _dispatch
      });
    };
  };
}

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports['default'] = bindActionCreators;
function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(undefined, arguments));
  };
}

/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass a single function as the first argument,
 * and get a function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */
function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
  }

  var keys = Object.keys(actionCreators);
  var boundActionCreators = {};
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var actionCreator = actionCreators[key];
    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }
  return boundActionCreators;
}

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports['default'] = combineReducers;

var _createStore = __webpack_require__(101);

var _isPlainObject = __webpack_require__(92);

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _warning = __webpack_require__(102);

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function getUndefinedStateErrorMessage(key, action) {
  var actionType = action && action.type;
  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';

  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';
}

function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
  var reducerKeys = Object.keys(reducers);
  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

  if (reducerKeys.length === 0) {
    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
  }

  if (!(0, _isPlainObject2['default'])(inputState)) {
    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
  }

  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
  });

  unexpectedKeys.forEach(function (key) {
    unexpectedKeyCache[key] = true;
  });

  if (unexpectedKeys.length > 0) {
    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
  }
}

function assertReducerShape(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });

    if (typeof initialState === 'undefined') {
      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');
    }

    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
    if (typeof reducer(undefined, { type: type }) === 'undefined') {
      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');
    }
  });
}

/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */
function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};
  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];

    if (false) {
      if (typeof reducers[key] === 'undefined') {
        (0, _warning2['default'])('No reducer provided for key "' + key + '"');
      }
    }

    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }
  var finalReducerKeys = Object.keys(finalReducers);

  var unexpectedKeyCache = void 0;
  if (false) {
    unexpectedKeyCache = {};
  }

  var shapeAssertionError = void 0;
  try {
    assertReducerShape(finalReducers);
  } catch (e) {
    shapeAssertionError = e;
  }

  return function combination() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var action = arguments[1];

    if (shapeAssertionError) {
      throw shapeAssertionError;
    }

    if (false) {
      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
      if (warningMessage) {
        (0, _warning2['default'])(warningMessage);
      }
    }

    var hasChanged = false;
    var nextState = {};
    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
      var _key = finalReducerKeys[_i];
      var reducer = finalReducers[_key];
      var previousStateForKey = state[_key];
      var nextStateForKey = reducer(previousStateForKey, action);
      if (typeof nextStateForKey === 'undefined') {
        var errorMessage = getUndefinedStateErrorMessage(_key, action);
        throw new Error(errorMessage);
      }
      nextState[_key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }
    return hasChanged ? nextState : state;
  };
}

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ponyfill = __webpack_require__(217);

var _ponyfill2 = _interopRequireDefault(_ponyfill);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var root; /* global window */


if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof global !== 'undefined') {
  root = global;
} else if (true) {
  root = module;
} else {
  root = Function('return this')();
}

var result = (0, _ponyfill2['default'])(root);
exports['default'] = result;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(111)(module)))

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports['default'] = symbolObservablePonyfill;
function symbolObservablePonyfill(root) {
	var result;
	var _Symbol = root.Symbol;

	if (typeof _Symbol === 'function') {
		if (_Symbol.observable) {
			result = _Symbol.observable;
		} else {
			result = _Symbol('observable');
			_Symbol.observable = result;
		}
	} else {
		result = '@@observable';
	}

	return result;
};

/***/ }),
/* 218 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export myApp */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return App; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_redux__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__sign__ = __webpack_require__(104);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


// import { bindActionCreators, Dispatch } from 'redux';
// import { DmState } from '@brightsign/bsdatamodel';
// import { postMessage } from '../store/stateMachine';

// import { ArState } from '../type/runtime';
// HACK
var myApp = {};
var AppComponent = /** @class */ (function (_super) {
    __extends(AppComponent, _super);
    function AppComponent(props) {
        var _this = _super.call(this, props) || this;
        myApp = _this;
        return _this;
    }
    AppComponent.prototype.render = function () {
        console.log('app render invoked');
        if (this.props.bsdm.zones.allZones.length === 0 ||
            Object.keys(this.props.activeMediaStates.activeMediaStateIdByZone).length === 0) {
            return (__WEBPACK_IMPORTED_MODULE_0_react__["createElement"]("div", null, "Waiting for the presentation to be loaded..."));
        }
        // postMessage={this.props.postMessage}
        return (__WEBPACK_IMPORTED_MODULE_0_react__["createElement"](__WEBPACK_IMPORTED_MODULE_2__sign__["a" /* Sign */], { bsdm: this.props.bsdm }));
    };
    return AppComponent;
}(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]));
function mapStateToProps(state) {
    return {
        bsdm: state.bsdm,
        activeMediaStates: state.bsAutotron.activeMediaStates,
    };
}
var App = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, null)(AppComponent);


/***/ }),
/* 219 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export ImageComponent */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Image; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_redux__);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

// import { Dispatch } from 'redux';
// import { bindActionCreators } from 'redux';

// -----------------------------------------------------------------------
// Component
// -----------------------------------------------------------------------
var ImageComponent = /** @class */ (function (_super) {
    __extends(ImageComponent, _super);
    function ImageComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ImageComponent.prototype.render = function () {
        return (__WEBPACK_IMPORTED_MODULE_0_react__["createElement"]("img", { src: this.props.src, width: this.props.width.toString(), height: this.props.height.toString() }));
    };
    return ImageComponent;
}(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]));

// -----------------------------------------------------------------------
// Container
// -----------------------------------------------------------------------
// const mapDispatchToProps = (dispatch: Dispatch<any>) => {
//   return bindActionCreators({
//   }, dispatch);
// };
// const mapStateToProps = (state: any, ownProps: undefined): Partial<ImageProps> => {
// const mapStateToProps = (state: any, ownProps: undefined): ImageProps => {
var mapStateToProps = function (state, ownProps) {
    return {
        src: ownProps.src,
        width: ownProps.width,
        height: ownProps.height,
    };
};
// export const Image = connect(mapStateToProps, mapDispatchToProps)(ImageComponent);
var Image = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps)(ImageComponent);


/***/ }),
/* 220 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export VideoComponent */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Video; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_redux__);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


// -----------------------------------------------------------------------
// Component
// -----------------------------------------------------------------------
var VideoComponent = /** @class */ (function (_super) {
    __extends(VideoComponent, _super);
    function VideoComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VideoComponent.prototype.onVideoEnd = function () {
        console.log('onVideoEnd invoked');
        this.props.onVideoEnd();
    };
    VideoComponent.prototype.render = function () {
        var self = this;
        // type="video/mp4"
        return (__WEBPACK_IMPORTED_MODULE_0_react__["createElement"]("video", { src: this.props.src, autoPlay: true, width: this.props.width.toString(), height: this.props.height.toString(), onEnded: function () {
                console.log('**** - videoEnd');
                self.onVideoEnd();
            } }));
    };
    return VideoComponent;
}(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]));

// -----------------------------------------------------------------------
// Container
// -----------------------------------------------------------------------
// const mapDispatchToProps = (dispatch: Dispatch<any>) => {
//   return bindActionCreators({
//     onVideoEnd: videoEnded,
//   }, dispatch);
// };
var mapStateToProps = function (state, ownProps) {
    return {
        src: ownProps.src,
        width: ownProps.width,
        height: ownProps.height,
    };
};
// export const Image = connect(mapStateToProps, mapDispatchToProps)(VideoComponent);
var Video = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps)(VideoComponent);


/***/ }),
/* 221 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export initModel */
/* unused harmony export resetModel */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__model__ = __webpack_require__(51);

// -----------------------------------------------------------------------
// Utilities
// -----------------------------------------------------------------------
var fetchModelAsync = function () {
    return new Promise(function (resolve) {
        var activeMediaStateIdByZone = {};
        var activeMediaStates = {
            activeMediaStateIdByZone: activeMediaStateIdByZone,
        };
        var model = {
            activeMediaStates: activeMediaStates,
        };
        resolve(model);
    });
};
// -----------------------------------------------------------------------
// Controller Methods
// -----------------------------------------------------------------------
var initModel = function () {
    return function (dispatch, getState) {
        return fetchModelAsync()
            .then(function (model) { return dispatch(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__model__["e" /* bsBrightSignPlayerModelRehydrateModel */])(model)); });
    };
};
var resetModel = function () {
    return function (dispatch, getState) {
        return dispatch(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__model__["f" /* bsBrightSignPlayerModelResetModel */])());
    };
};


/***/ }),
/* 222 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base__ = __webpack_require__(221);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__runtime__ = __webpack_require__(223);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_1__runtime__["a"]; });
/** @module Controller:index */




/***/ }),
/* 223 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export initRuntime */
/* unused harmony export getRuntimeFiles */
/* harmony export (immutable) */ __webpack_exports__["a"] = getPoolFilePath;
/* unused harmony export postRuntimeMessage */
/* unused harmony export postMessage */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(32);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_fs_extra__ = __webpack_require__(164);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_fs_extra___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_fs_extra__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_isomorphic_path__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_isomorphic_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_isomorphic_path__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__runtime_hsm_playerHSM__ = __webpack_require__(228);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__brightsign_bsdatamodel__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__brightsign_bsdatamodel___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__brightsign_bsdatamodel__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__runtime_hsm_mediaZoneHSM__ = __webpack_require__(227);

// import {
//   // BsDmThunkAction,
//   dmOpenSign,
// } from '@brightsign/bsdatamodel';





// TEDTODO - this should come from platform
var srcDirectory = '/Users/tedshaffer/Desktop/ag';
// TEDTODO
var _autotronStore;
var _syncSpec;
var _poolAssetFiles;
var _autoSchedule;
var _hsmList = [];
var _playerHSM;
// -----------------------------------------------------------------------
// Controller Methods
// -----------------------------------------------------------------------
function initRuntime(store) {
    return (function (dispatch, getState) {
        debugger;
        _autotronStore = store;
        var autotronState = _autotronStore.getState();
        console.log(autotronState);
        return getRuntimeFiles();
    });
}
function getRuntimeFiles() {
    return getSyncSpec()
        .then(function (syncSpec) {
        _syncSpec = syncSpec;
        _poolAssetFiles = getPoolAssetFiles(syncSpec, getRootDirectory());
        return getAutoschedule(syncSpec, getRootDirectory());
    }).then(function (autoSchedule) {
        _autoSchedule = autoSchedule;
        _hsmList = [];
        launchHSM();
        return Promise.resolve();
    });
}
function launchHSM() {
    _playerHSM = new __WEBPACK_IMPORTED_MODULE_3__runtime_hsm_playerHSM__["a" /* PlayerHSM */](startPlayback, restartPlayback, postMessage, dispatchEvent);
    _playerHSM.initialize();
}
function getAutoschedule(syncSpec, rootPath) {
    return getSyncSpecReferencedFile('autoschedule.json', syncSpec, rootPath);
}
function getSyncSpecReferencedFile(fileName, syncSpec, rootPath) {
    var syncSpecFile = getFile(syncSpec, fileName);
    if (syncSpecFile == null) {
        return Promise.reject('file not found');
    }
    // const fileSize = syncSpecFile.size;
    var filePath = __WEBPACK_IMPORTED_MODULE_2_isomorphic_path___default.a.join(rootPath, syncSpecFile.link);
    return __WEBPACK_IMPORTED_MODULE_1_fs_extra__["readFile"](filePath, 'utf8')
        .then(function (fileStr) {
        var file = JSON.parse(fileStr);
        // I have commented out the following code to allow hacking of files -
        // that is, overwriting files in the pool without updating the sync spec with updated sha1
        // if (fileSize !== fileStr.length) {
        //   debugger;
        // }
        return Promise.resolve(file);
    });
}
function getFile(syncSpec, fileName) {
    var file = null;
    syncSpec.files.download.forEach(function (syncSpecFile) {
        if (syncSpecFile.name === fileName) {
            file = syncSpecFile;
            return;
        }
    });
    return file;
}
function getSyncSpec() {
    return getSyncSpecFilePath()
        .then(function (syncSpecFilePath) {
        if (!syncSpecFilePath) {
            // TEDTODO - error object
            return Promise.reject('no sync spec found');
        }
        else {
            return Promise.resolve(readSyncSpec(syncSpecFilePath));
        }
    });
}
function readSyncSpec(syncSpecFilePath) {
    return __WEBPACK_IMPORTED_MODULE_1_fs_extra__["readFile"](syncSpecFilePath, 'utf8')
        .then(function (syncSpecStr) {
        var syncSpec = JSON.parse(syncSpecStr);
        return Promise.resolve(syncSpec);
    });
}
function getPoolAssetFiles(syncSpec, pathToRoot) {
    var poolAssetFiles = {};
    syncSpec.files.download.forEach(function (syncSpecFile) {
        poolAssetFiles[syncSpecFile.name] = __WEBPACK_IMPORTED_MODULE_2_isomorphic_path___default.a.join(pathToRoot, syncSpecFile.link);
    });
    return poolAssetFiles;
}
function getSyncSpecFilePath() {
    return getLocalSyncSpec()
        .then(function (localSyncSpecFilePath) {
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_lodash__["isNil"])(localSyncSpecFilePath)) {
            return getNetworkedSyncSpec();
        }
        else {
            return Promise.resolve(localSyncSpecFilePath);
        }
    });
}
function getNetworkedSyncSpec() {
    var filePath = getNetworkedSyncSpecFilePath();
    return __WEBPACK_IMPORTED_MODULE_1_fs_extra__["pathExists"](filePath)
        .then(function (exists) {
        if (exists) {
            return Promise.resolve(filePath);
        }
        else {
            return Promise.resolve(null);
        }
    });
}
function getLocalSyncSpec() {
    var filePath = getLocalSyncSpecFilePath();
    return __WEBPACK_IMPORTED_MODULE_1_fs_extra__["pathExists"](filePath)
        .then(function (exists) {
        if (exists) {
            return Promise.resolve(filePath);
        }
        else {
            return Promise.resolve(null);
        }
    });
}
function getLocalSyncSpecFilePath() {
    // return isomorphicPath.join(PlatformService.default.getRootDirectory(), 'local-sync.json');
    return __WEBPACK_IMPORTED_MODULE_2_isomorphic_path___default.a.join(getRootDirectory(), 'local-sync.json');
}
function getNetworkedSyncSpecFilePath() {
    // return isomorphicPath.join(PlatformService.default.getRootDirectory(), 'current-sync.json');
    return __WEBPACK_IMPORTED_MODULE_2_isomorphic_path___default.a.join(getRootDirectory(), 'current-sync.json');
}
function getPoolFilePath(fileName) {
    var filePath = _poolAssetFiles[fileName];
    console.log('fileName: ' + fileName + ', filePath: ' + filePath);
    return filePath;
}
// function getPoolDirectory(): string {
//   return isomorphicPath.join(getRootDirectory(), 'pool');
// }
function getRootDirectory() {
    return srcDirectory;
}
function restartPlayback(presentationName) {
    console.log('restart: ', presentationName);
    var rootPath = getRootDirectory();
    // TEDTODO - only a single scheduled item is currently supported
    var scheduledPresentation = _autoSchedule.scheduledPresentations[0];
    var presentationToSchedule = scheduledPresentation.presentationToSchedule;
    // TEDTODO - why does restartPlayback get a presentationName if it's also in the schedule?
    presentationName = presentationToSchedule.name;
    var autoplayFileName = presentationName + '.bml';
    return getSyncSpecReferencedFile(autoplayFileName, _syncSpec, rootPath)
        .then(function (bpfxState) {
        console.log(bpfxState);
        var autoPlay = bpfxState.bsdm;
        var signState = autoPlay;
        _autotronStore.dispatch(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__brightsign_bsdatamodel__["dmOpenSign"])(signState));
        console.log(_autotronStore.getState());
        return Promise.resolve();
    });
}
// failed try??
/*
export function dispatchPostMessage(event : ArEventType): void {
  _autotronStore.dispatch(postMessage(event));
  // postMessage(event);
}

function postMessage(event: ArEventType): () => void {
  return () => {
    dispatchEvent(event);
  };
}

// export function postRuntimeMessage(event: ArEventType) {
//   console.log('flibbet');
//   dispatchEvent(event);
// }

// export function postMessage(event: ArEventType) {
//   console.log('pizza');
//   dispatchEvent(event);
// }
*/
// restored code
// function dispatchPostMessage(event : ArEventType): void {
//   postMessage(event);
// }
function postRuntimeMessage(event) {
    console.log('flibbet');
    dispatchEvent(event);
}
function postMessage(event) {
    console.log('pizza');
    dispatchEvent(event);
}
// end of restored code
function dispatchEvent(event) {
    _playerHSM.Dispatch(event);
    _hsmList.forEach(function (hsm) {
        hsm.Dispatch(event);
    });
}
function startPlayback() {
    var bsdm = _autotronStore.getState().bsdm;
    var zoneHSMs = [];
    var zoneIds = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__brightsign_bsdatamodel__["dmGetZonesForSign"])(bsdm);
    zoneIds.forEach(function (zoneId) {
        var bsdmZone = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__brightsign_bsdatamodel__["dmGetZoneById"])(bsdm, { id: zoneId });
        var zoneHSM;
        switch (bsdmZone.type) {
            default: {
                zoneHSM = new __WEBPACK_IMPORTED_MODULE_5__runtime_hsm_mediaZoneHSM__["a" /* MediaZoneHSM */](_autotronStore, zoneId, dispatchEvent);
                break;
            }
        }
        zoneHSMs.push(zoneHSM);
        _hsmList.push(zoneHSM);
    });
    zoneHSMs.forEach(function (zoneHSM) {
        zoneHSM.constructorFunction();
        zoneHSM.initialize();
    });
}


/***/ }),
/* 224 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BSBSBRIGHTSIGNPLAYERMODEL_BATCH; });
/* unused harmony export BSBSBRIGHTSIGNPLAYERMODEL_REHYDRATE */
/* unused harmony export BSBSBRIGHTSIGNPLAYERMODEL_RESET */
/* unused harmony export bsBrightSignPlayerModelBatchAction */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return bsBrightSignPlayerModelRehydrateModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return bsBrightSignPlayerModelResetModel; });
/** @module Model:base */
// -----------------------------------------------------------------------
// Actions
// -----------------------------------------------------------------------
/** @internal */
/** @private */
var BSBSBRIGHTSIGNPLAYERMODEL_BATCH = 'BSBSBRIGHTSIGNPLAYERMODEL_BATCH';
/** @internal */
/** @private */
var BSBSBRIGHTSIGNPLAYERMODEL_REHYDRATE = 'BSBSBRIGHTSIGNPLAYERMODEL_REHYDRATE';
/** @internal */
/** @private */
var BSBSBRIGHTSIGNPLAYERMODEL_RESET = 'BSBSBRIGHTSIGNPLAYERMODEL_RESET';
/** @internal */
/** @private */
var bsBrightSignPlayerModelBatchAction = function (action) {
    return { type: BSBSBRIGHTSIGNPLAYERMODEL_BATCH, payload: action };
};
var bsBrightSignPlayerModelRehydrateModel = function (bsBrightSignPlayerModelState) {
    return {
        type: BSBSBRIGHTSIGNPLAYERMODEL_REHYDRATE,
        payload: {
            newBsBrightSignPlayerModelState: bsBrightSignPlayerModelState,
        },
    };
};
var bsBrightSignPlayerModelResetModel = function () {
    return {
        type: BSBSBRIGHTSIGNPLAYERMODEL_RESET,
        payload: null,
    };
};


/***/ }),
/* 225 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return bsBspReducer; });
/* unused harmony export isValidBsBrightSignPlayerModelState */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return isValidBsBrightSignPlayerModelStateShallow; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_redux__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_redux___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_redux__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__activeMediaState__ = __webpack_require__(105);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2____ = __webpack_require__(51);
/** @module Model:base */



var enableBatching = function (reduce) {
    return function batchingReducer(state, action) {
        switch (action.type) {
            case __WEBPACK_IMPORTED_MODULE_2____["c" /* BSBSBRIGHTSIGNPLAYERMODEL_BATCH */]:
                return action.payload.reduce(batchingReducer, state);
            default:
                return reduce(state, action);
        }
    };
};
var bsBspReducer = enableBatching(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_redux__["combineReducers"])({
    activeMediaStates: __WEBPACK_IMPORTED_MODULE_1__activeMediaState__["a" /* activeMediaStateReducer */]
}));
// -----------------------------------------------------------------------
// Validators
// -----------------------------------------------------------------------
var isValidBsBrightSignPlayerModelState = function (state) {
    return true;
};
var isValidBsBrightSignPlayerModelStateShallow = function (state) {
    return true;
};


/***/ }),
/* 226 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mediaHState__ = __webpack_require__(106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__index__ = __webpack_require__(24);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var ImageState = /** @class */ (function (_super) {
    __extends(ImageState, _super);
    function ImageState(zoneHSM, mediaState) {
        var _this = _super.call(this, zoneHSM, mediaState.id) || this;
        _this.mediaState = mediaState;
        _this.superState = zoneHSM.stTop;
        _this.HStateEventHandler = _this.STDisplayingImageEventHandler;
        return _this;
    }
    ImageState.prototype.STDisplayingImageEventHandler = function (event, stateData) {
        if (event.EventType === 'ENTRY_SIGNAL') {
            console.log(this.id + ': entry signal');
            this.stateMachine.autotronStore.dispatch(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__index__["d" /* setActiveMediaState */])(this.stateMachine.id, this.id));
            this.launchTimer();
            return 'HANDLED';
        }
        else if (event.EventType === 'EXIT_SIGNAL') {
            this.mediaHStateExitHandler();
        }
        else {
            return this.mediaHStateEventHandler(event, stateData);
        }
        stateData.nextState = this.superState;
        return 'SUPER';
    };
    return ImageState;
}(__WEBPACK_IMPORTED_MODULE_0__mediaHState__["a" /* MediaHState */]));
/* harmony default export */ __webpack_exports__["a"] = (ImageState);


/***/ }),
/* 227 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MediaZoneHSM; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__zoneHSM__ = __webpack_require__(230);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__brightsign_bsdatamodel__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__brightsign_bsdatamodel___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__brightsign_bsdatamodel__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__imageState__ = __webpack_require__(226);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__videoState__ = __webpack_require__(229);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var MediaZoneHSM = /** @class */ (function (_super) {
    __extends(MediaZoneHSM, _super);
    function MediaZoneHSM(autotronStore, zoneId, dispatchEvent) {
        var _this = _super.call(this, autotronStore, zoneId, dispatchEvent) || this;
        _this.mediaStateIdToHState = {};
        _this.type = 'media';
        _this.constructorHandler = _this.videoOrImagesZoneConstructor;
        _this.initialPseudoStateHandler = _this.videoOrImagesZoneGetInitialState;
        // build playlist
        var bsdm = autotronStore.getState().bsdm;
        _this.bsdmZone = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__brightsign_bsdatamodel__["dmGetZoneById"])(bsdm, { id: zoneId });
        _this.id = _this.bsdmZone.id;
        _this.name = _this.bsdmZone.name;
        _this.x = _this.bsdmZone.position.x;
        _this.y = _this.bsdmZone.position.y;
        _this.width = _this.bsdmZone.position.width;
        _this.height = _this.bsdmZone.position.height;
        _this.initialMediaStateId = _this.bsdmZone.initialMediaStateId;
        _this.mediaStateIds = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__brightsign_bsdatamodel__["dmGetMediaStateIdsForZone"])(bsdm, { id: zoneId });
        _this.mediaStates = [];
        // states
        var newState;
        _this.mediaStateIds.forEach(function (mediaStateId, index) {
            var bsdmMediaState = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__brightsign_bsdatamodel__["dmGetMediaStateById"])(bsdm, { id: mediaStateId });
            if (bsdmMediaState.contentItem.type === 'Image') {
                newState = new __WEBPACK_IMPORTED_MODULE_2__imageState__["a" /* default */](_this, bsdmMediaState);
            }
            else if (bsdmMediaState.contentItem.type === 'Video') {
                newState = new __WEBPACK_IMPORTED_MODULE_3__videoState__["a" /* default */](_this, bsdmMediaState);
            }
            _this.mediaStates.push(newState);
            _this.mediaStateIdToHState[mediaStateId] = newState;
        });
        // events / transitions
        _this.mediaStateIds.forEach(function (mediaStateId, index) {
            var targetHState = _this.mediaStateIdToHState[mediaStateId];
            var eventIds = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__brightsign_bsdatamodel__["dmGetEventIdsForMediaState"])(bsdm, { id: mediaStateId });
            targetHState.addEvents(_this, eventIds);
        });
        return _this;
    }
    MediaZoneHSM.prototype.videoOrImagesZoneConstructor = function () {
        console.log('VideoOrImagesZoneConstructor invoked');
        // const mediaStateIds = dmGetZoneSimplePlaylist(this.bsdm, { id: this.zoneId });
        // should really look at initialMediaStateId, but the following should work for non interactive playlists
        this.activeState = this.mediaStates[0];
    };
    MediaZoneHSM.prototype.videoOrImagesZoneGetInitialState = function () {
        console.log('videoOrImagesZoneGetInitialState invoked');
        return this.activeState;
    };
    return MediaZoneHSM;
}(__WEBPACK_IMPORTED_MODULE_0__zoneHSM__["a" /* ZoneHSM */]));



/***/ }),
/* 228 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PlayerHSM; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__HSM__ = __webpack_require__(52);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var PlayerHSM = /** @class */ (function (_super) {
    __extends(PlayerHSM, _super);
    function PlayerHSM(startPlayback, restartPlayback, postMessage, dispatchEvent) {
        var _this = _super.call(this, dispatchEvent) || this;
        _this.type = 'player';
        _this.stTop = new __WEBPACK_IMPORTED_MODULE_0__HSM__["a" /* HState */](_this, 'Top');
        _this.stTop.HStateEventHandler = __WEBPACK_IMPORTED_MODULE_0__HSM__["b" /* STTopEventHandler */];
        // TEDTODO - who owns this??
        _this.initialPseudoStateHandler = _this.initializePlayerStateMachine;
        _this.stPlayer = new STPlayer(_this, 'Player', _this.stTop);
        _this.stPlaying = new STPlaying(_this, 'Playing', _this.stPlayer);
        _this.stWaiting = new STWaiting(_this, 'Waiting', _this.stPlayer);
        _this.topState = _this.stTop;
        _this.startPlayback = startPlayback;
        _this.restartPlayback = restartPlayback;
        _this.postMessage = postMessage;
        return _this;
    }
    // TEDTODO - args
    PlayerHSM.prototype.initializePlayerStateMachine = function (args) {
        var _this = this;
        console.log('initializePlayerStateMachine invoked');
        this.restartPlayback('').then(function () {
            // send event to cause transition to stPlaying
            var event = {
                EventType: 'TRANSITION_TO_PLAYING'
            };
            _this.postMessage(event);
        });
        return this.stWaiting;
    };
    return PlayerHSM;
}(__WEBPACK_IMPORTED_MODULE_0__HSM__["c" /* HSM */]));

var STPlayer = /** @class */ (function (_super) {
    __extends(STPlayer, _super);
    function STPlayer(stateMachine, id, superState) {
        var _this = _super.call(this, stateMachine, id) || this;
        _this.HStateEventHandler = _this.STPlayerEventHandler;
        _this.superState = superState;
        return _this;
    }
    STPlayer.prototype.STPlayerEventHandler = function (event, stateData) {
        stateData.nextState = null;
        stateData.nextState = this.superState;
        return 'SUPER';
    };
    return STPlayer;
}(__WEBPACK_IMPORTED_MODULE_0__HSM__["a" /* HState */]));
var STPlaying = /** @class */ (function (_super) {
    __extends(STPlaying, _super);
    function STPlaying(stateMachine, id, superState) {
        var _this = _super.call(this, stateMachine, id) || this;
        _this.HStateEventHandler = _this.STPlayingEventHandler;
        _this.superState = superState;
        return _this;
    }
    STPlaying.prototype.STPlayingEventHandler = function (event, stateData) {
        stateData.nextState = null;
        if (event.EventType && event.EventType === 'ENTRY_SIGNAL') {
            console.log(this.id + ': entry signal');
            // const stateMachine = this.stateMachine as PlayerHSM;
            // launch playback
            this.stateMachine.startPlayback();
            return 'HANDLED';
        }
        stateData.nextState = this.superState;
        return 'SUPER';
    };
    return STPlaying;
}(__WEBPACK_IMPORTED_MODULE_0__HSM__["a" /* HState */]));
var STWaiting = /** @class */ (function (_super) {
    __extends(STWaiting, _super);
    function STWaiting(stateMachine, id, superState) {
        var _this = _super.call(this, stateMachine, id) || this;
        _this.HStateEventHandler = _this.STWaitingEventHandler;
        _this.superState = superState;
        return _this;
    }
    STWaiting.prototype.STWaitingEventHandler = function (event, stateData) {
        stateData.nextState = null;
        if (event.EventType && event.EventType === 'ENTRY_SIGNAL') {
            console.log(this.id + ': entry signal');
            return 'HANDLED';
        }
        else if (event.EventType && event.EventType === 'TRANSITION_TO_PLAYING') {
            console.log(this.id + ': TRANSITION_TO_PLAYING event received');
            stateData.nextState = this.stateMachine.stPlaying;
            return 'TRANSITION';
        }
        stateData.nextState = this.superState;
        return 'SUPER';
    };
    return STWaiting;
}(__WEBPACK_IMPORTED_MODULE_0__HSM__["a" /* HState */]));


/***/ }),
/* 229 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__brightsign_bscore__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__brightsign_bscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__brightsign_bscore__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mediaHState__ = __webpack_require__(106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index__ = __webpack_require__(24);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



var VideoState = /** @class */ (function (_super) {
    __extends(VideoState, _super);
    function VideoState(zoneHSM, mediaState) {
        var _this = _super.call(this, zoneHSM, mediaState.id) || this;
        _this.mediaState = mediaState;
        _this.superState = zoneHSM.stTop;
        _this.HStateEventHandler = _this.STDisplayingVideoEventHandler;
        return _this;
    }
    VideoState.prototype.STDisplayingVideoEventHandler = function (event, stateData) {
        stateData.nextState = null;
        if (event.EventType && event.EventType === 'ENTRY_SIGNAL') {
            console.log('entry signal');
            this.stateMachine.autotronStore.dispatch(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__index__["d" /* setActiveMediaState */])(this.stateMachine.id, this.id));
            this.launchTimer();
            return 'HANDLED';
        }
        else if (event.EventType && event.EventType === 'EXIT_SIGNAL') {
            this.mediaHStateExitHandler();
        }
        else if (event.EventType === __WEBPACK_IMPORTED_MODULE_0__brightsign_bscore__["EventType"].MediaEnd) {
            // const eventList : DmcEvent[] = (this.mediaState as DmcMediaState).eventList;
            var bsEventKey = this.getBsEventKey(event);
            if (this.eventLUT.hasOwnProperty(bsEventKey)) {
                stateData.nextState = this.eventLUT[bsEventKey];
                return 'TRANSITION';
            }
        }
        else {
            return this.mediaHStateEventHandler(event, stateData);
        }
        stateData.nextState = this.superState;
        return 'SUPER';
    };
    return VideoState;
}(__WEBPACK_IMPORTED_MODULE_1__mediaHState__["a" /* MediaHState */]));
/* harmony default export */ __webpack_exports__["a"] = (VideoState);


/***/ }),
/* 230 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ZoneHSM; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__HSM__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__brightsign_bsdatamodel__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__brightsign_bsdatamodel___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__brightsign_bsdatamodel__);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var ZoneHSM = /** @class */ (function (_super) {
    __extends(ZoneHSM, _super);
    function ZoneHSM(autotronStore, zoneId, dispatchEvent) {
        var _this = _super.call(this, dispatchEvent) || this;
        _this.autotronStore = autotronStore;
        _this.zoneId = zoneId;
        _this.stTop = new __WEBPACK_IMPORTED_MODULE_0__HSM__["a" /* HState */](_this, 'Top');
        _this.stTop.HStateEventHandler = __WEBPACK_IMPORTED_MODULE_0__HSM__["b" /* STTopEventHandler */];
        _this.topState = _this.stTop;
        var bsdm = autotronStore.getState().bsdm;
        _this.bsdmZone = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__brightsign_bsdatamodel__["dmGetZoneById"])(bsdm, { id: zoneId });
        _this.id = _this.bsdmZone.id;
        _this.name = _this.bsdmZone.name;
        _this.x = _this.bsdmZone.position.x;
        _this.y = _this.bsdmZone.position.y;
        _this.width = _this.bsdmZone.position.width;
        _this.height = _this.bsdmZone.position.height;
        _this.initialMediaStateId = _this.bsdmZone.initialMediaStateId;
        _this.mediaStateIds = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__brightsign_bsdatamodel__["dmGetZoneSimplePlaylist"])(bsdm, { id: zoneId });
        return _this;
    }
    return ZoneHSM;
}(__WEBPACK_IMPORTED_MODULE_0__HSM__["c" /* HSM */]));



/***/ }),
/* 231 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export bsBrightSignPlayerModelFilterBaseState */
/* unused harmony export bsBrightSignPlayerModelGetBaseState */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utility_BsBrightSignPlayerError__ = __webpack_require__(233);


/** @module Selector:base */
/** @internal */
/** @private */
var bsBrightSignPlayerModelFilterBaseState = function (state) {
    if (state.hasOwnProperty('bsautotronmodel') && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__index__["c" /* isValidBsBrightSignPlayerModelStateShallow */])(state.bsautotronmodel)) {
        return state.bsautotronmodel;
    }
    else if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__index__["c" /* isValidBsBrightSignPlayerModelStateShallow */])(state)) {
        return state;
    }
    else {
        var exceptionMessage = "state must be of type BsBrightSignPlayerModelState or have a field bsautotronmodel\n      of type BsBrightSignPlayerModelState. invalid state " + JSON.stringify(state);
        throw new __WEBPACK_IMPORTED_MODULE_1__utility_BsBrightSignPlayerError__["a" /* BsBrightSignPlayerError */](__WEBPACK_IMPORTED_MODULE_1__utility_BsBrightSignPlayerError__["b" /* BsBrightSignPlayerErrorType */].invalidParameters, exceptionMessage);
    }
};
/** @internal */
/** @private */
var bsBrightSignPlayerModelGetBaseState = function (state) {
    return bsBrightSignPlayerModelFilterBaseState(state);
};


/***/ }),
/* 232 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base__ = __webpack_require__(231);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__activeMediaState__ = __webpack_require__(107);
/* unused harmony namespace reexport */
/** @module Selector:index */




/***/ }),
/* 233 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return BsBrightSignPlayerErrorType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BsBrightSignPlayerError; });
/* unused harmony export isBsBrightSignPlayerError */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BsBrightSignPlayerErrorType;
(function (BsBrightSignPlayerErrorType) {
    BsBrightSignPlayerErrorType[BsBrightSignPlayerErrorType["unknownError"] = 0] = "unknownError";
    BsBrightSignPlayerErrorType[BsBrightSignPlayerErrorType["unexpectedError"] = 1] = "unexpectedError";
    BsBrightSignPlayerErrorType[BsBrightSignPlayerErrorType["invalidParameters"] = 2] = "invalidParameters";
    BsBrightSignPlayerErrorType[BsBrightSignPlayerErrorType["invalidOperation"] = 3] = "invalidOperation";
    BsBrightSignPlayerErrorType[BsBrightSignPlayerErrorType["apiError"] = 4] = "apiError";
    BsBrightSignPlayerErrorType[BsBrightSignPlayerErrorType["invalidModel"] = 5] = "invalidModel";
})(BsBrightSignPlayerErrorType = BsBrightSignPlayerErrorType || (BsBrightSignPlayerErrorType = {}));
var bsBrightSignPlayerErrorMessage = (_a = {},
    _a[BsBrightSignPlayerErrorType.unknownError] = 'Unknown error',
    _a[BsBrightSignPlayerErrorType.unexpectedError] = 'Unexpected error',
    _a[BsBrightSignPlayerErrorType.invalidParameters] = 'Invalid parameters',
    _a[BsBrightSignPlayerErrorType.invalidOperation] = 'Invalid operation attempt',
    _a[BsBrightSignPlayerErrorType.apiError] = 'API error',
    _a[BsBrightSignPlayerErrorType.invalidModel] = 'Invalid model',
    _a);
var BsBrightSignPlayerError = /** @class */ (function (_super) {
    __extends(BsBrightSignPlayerError, _super);
    function BsBrightSignPlayerError(type, reason) {
        var _this = _super.call(this) || this;
        _this.name = 'BsBrightSignPlayerError';
        _this.type = type;
        if (reason) {
            _this.message = bsBrightSignPlayerErrorMessage[type] + ': ' + reason;
        }
        else {
            _this.message = bsBrightSignPlayerErrorMessage[type];
        }
        Object.setPrototypeOf(_this, BsBrightSignPlayerError.prototype);
        return _this;
    }
    return BsBrightSignPlayerError;
}(Error));

function isBsBrightSignPlayerError(error) {
    return error instanceof BsBrightSignPlayerError;
}
var _a;


/***/ }),
/* 234 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export BsUiErrorType */
/* unused harmony export BsUiError */
/* unused harmony export isBsUiError */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BsUiErrorType;
(function (BsUiErrorType) {
    BsUiErrorType[BsUiErrorType["unknownError"] = 0] = "unknownError";
    BsUiErrorType[BsUiErrorType["unexpectedError"] = 1] = "unexpectedError";
    BsUiErrorType[BsUiErrorType["invalidParameters"] = 2] = "invalidParameters";
    BsUiErrorType[BsUiErrorType["invalidOperation"] = 3] = "invalidOperation";
    BsUiErrorType[BsUiErrorType["apiError"] = 4] = "apiError";
    BsUiErrorType[BsUiErrorType["invalidModel"] = 5] = "invalidModel";
})(BsUiErrorType = BsUiErrorType || (BsUiErrorType = {}));
var bsUiErrorMessage = (_a = {},
    _a[BsUiErrorType.unknownError] = 'Unknown error',
    _a[BsUiErrorType.unexpectedError] = 'Unexpected error',
    _a[BsUiErrorType.invalidParameters] = 'Invalid parameters',
    _a[BsUiErrorType.invalidOperation] = 'Invalid operation attempt',
    _a[BsUiErrorType.apiError] = 'API error',
    _a[BsUiErrorType.invalidModel] = 'Invalid model',
    _a);
var BsUiError = /** @class */ (function (_super) {
    __extends(BsUiError, _super);
    function BsUiError(type, reason) {
        var _this = _super.call(this) || this;
        _this.name = 'BsUiError';
        _this.type = type;
        if (reason) {
            _this.message = bsUiErrorMessage[type] + ': ' + reason;
        }
        else {
            _this.message = bsUiErrorMessage[type];
        }
        Object.setPrototypeOf(_this, BsUiError.prototype);
        return _this;
    }
    return BsUiError;
}(Error));

function isBsUiError(error) {
    return error instanceof BsUiError;
}
var _a;


/***/ }),
/* 235 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__BsUiError__ = __webpack_require__(234);
/* unused harmony namespace reexport */



/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

var rng = __webpack_require__(110);
var bytesToUuid = __webpack_require__(109);

// **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html

var _nodeId;
var _clockseq;

// Previous uuid creation time
var _lastMSecs = 0;
var _lastNSecs = 0;

// See https://github.com/broofa/node-uuid for API details
function v1(options, buf, offset) {
  var i = buf && offset || 0;
  var b = buf || [];

  options = options || {};
  var node = options.node || _nodeId;
  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;

  // node and clockseq need to be initialized to random values if they're not
  // specified.  We do this lazily to minimize issues related to insufficient
  // system entropy.  See #189
  if (node == null || clockseq == null) {
    var seedBytes = rng();
    if (node == null) {
      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
      node = _nodeId = [
        seedBytes[0] | 0x01,
        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]
      ];
    }
    if (clockseq == null) {
      // Per 4.2.2, randomize (14 bit) clockseq
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
    }
  }

  // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();

  // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock
  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;

  // Time since last uuid creation (in msecs)
  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;

  // Per 4.2.1.2, Bump clockseq on clock regression
  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  }

  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval
  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  }

  // Per 4.2.1.2 Throw error if too many uuids are requested
  if (nsecs >= 10000) {
    throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq;

  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch
  msecs += 12219292800000;

  // `time_low`
  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff;

  // `time_mid`
  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff;

  // `time_high_and_version`
  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version
  b[i++] = tmh >>> 16 & 0xff;

  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
  b[i++] = clockseq >>> 8 | 0x80;

  // `clock_seq_low`
  b[i++] = clockseq & 0xff;

  // `node`
  for (var n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf ? buf : bytesToUuid(b);
}

module.exports = v1;


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

var rng = __webpack_require__(110);
var bytesToUuid = __webpack_require__(109);

function v4(options, buf, offset) {
  var i = buf && offset || 0;

  if (typeof(options) == 'string') {
    buf = options === 'binary' ? new Array(16) : null;
    options = null;
  }
  options = options || {};

  var rnds = options.random || (options.rng || rng)();

  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
  rnds[6] = (rnds[6] & 0x0f) | 0x40;
  rnds[8] = (rnds[8] & 0x3f) | 0x80;

  // Copy bytes to buffer, if provided
  if (buf) {
    for (var ii = 0; ii < 16; ++ii) {
      buf[i + ii] = rnds[ii];
    }
  }

  return buf || bytesToUuid(rnds);
}

module.exports = v4;


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

(function (global, factory) {
   true ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (factory((global.WHATWGFetch = {})));
}(this, (function (exports) { 'use strict';

  var support = {
    searchParams: 'URLSearchParams' in self,
    iterable: 'Symbol' in self && 'iterator' in Symbol,
    blob:
      'FileReader' in self &&
      'Blob' in self &&
      (function() {
        try {
          new Blob();
          return true
        } catch (e) {
          return false
        }
      })(),
    formData: 'FormData' in self,
    arrayBuffer: 'ArrayBuffer' in self
  };

  function isDataView(obj) {
    return obj && DataView.prototype.isPrototypeOf(obj)
  }

  if (support.arrayBuffer) {
    var viewClasses = [
      '[object Int8Array]',
      '[object Uint8Array]',
      '[object Uint8ClampedArray]',
      '[object Int16Array]',
      '[object Uint16Array]',
      '[object Int32Array]',
      '[object Uint32Array]',
      '[object Float32Array]',
      '[object Float64Array]'
    ];

    var isArrayBufferView =
      ArrayBuffer.isView ||
      function(obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
      };
  }

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name);
    }
    if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) {
      throw new TypeError('Invalid character in header field name')
    }
    return name.toLowerCase()
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value);
    }
    return value
  }

  // Build a destructive iterator for the value list
  function iteratorFor(items) {
    var iterator = {
      next: function() {
        var value = items.shift();
        return {done: value === undefined, value: value}
      }
    };

    if (support.iterable) {
      iterator[Symbol.iterator] = function() {
        return iterator
      };
    }

    return iterator
  }

  function Headers(headers) {
    this.map = {};

    if (headers instanceof Headers) {
      headers.forEach(function(value, name) {
        this.append(name, value);
      }, this);
    } else if (Array.isArray(headers)) {
      headers.forEach(function(header) {
        this.append(header[0], header[1]);
      }, this);
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function(name) {
        this.append(name, headers[name]);
      }, this);
    }
  }

  Headers.prototype.append = function(name, value) {
    name = normalizeName(name);
    value = normalizeValue(value);
    var oldValue = this.map[name];
    this.map[name] = oldValue ? oldValue + ', ' + value : value;
  };

  Headers.prototype['delete'] = function(name) {
    delete this.map[normalizeName(name)];
  };

  Headers.prototype.get = function(name) {
    name = normalizeName(name);
    return this.has(name) ? this.map[name] : null
  };

  Headers.prototype.has = function(name) {
    return this.map.hasOwnProperty(normalizeName(name))
  };

  Headers.prototype.set = function(name, value) {
    this.map[normalizeName(name)] = normalizeValue(value);
  };

  Headers.prototype.forEach = function(callback, thisArg) {
    for (var name in this.map) {
      if (this.map.hasOwnProperty(name)) {
        callback.call(thisArg, this.map[name], name, this);
      }
    }
  };

  Headers.prototype.keys = function() {
    var items = [];
    this.forEach(function(value, name) {
      items.push(name);
    });
    return iteratorFor(items)
  };

  Headers.prototype.values = function() {
    var items = [];
    this.forEach(function(value) {
      items.push(value);
    });
    return iteratorFor(items)
  };

  Headers.prototype.entries = function() {
    var items = [];
    this.forEach(function(value, name) {
      items.push([name, value]);
    });
    return iteratorFor(items)
  };

  if (support.iterable) {
    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
  }

  function consumed(body) {
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'))
    }
    body.bodyUsed = true;
  }

  function fileReaderReady(reader) {
    return new Promise(function(resolve, reject) {
      reader.onload = function() {
        resolve(reader.result);
      };
      reader.onerror = function() {
        reject(reader.error);
      };
    })
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsArrayBuffer(blob);
    return promise
  }

  function readBlobAsText(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsText(blob);
    return promise
  }

  function readArrayBufferAsText(buf) {
    var view = new Uint8Array(buf);
    var chars = new Array(view.length);

    for (var i = 0; i < view.length; i++) {
      chars[i] = String.fromCharCode(view[i]);
    }
    return chars.join('')
  }

  function bufferClone(buf) {
    if (buf.slice) {
      return buf.slice(0)
    } else {
      var view = new Uint8Array(buf.byteLength);
      view.set(new Uint8Array(buf));
      return view.buffer
    }
  }

  function Body() {
    this.bodyUsed = false;

    this._initBody = function(body) {
      this._bodyInit = body;
      if (!body) {
        this._bodyText = '';
      } else if (typeof body === 'string') {
        this._bodyText = body;
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body;
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body;
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString();
      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
        this._bodyArrayBuffer = bufferClone(body.buffer);
        // IE 10-11 can't handle a DataView body.
        this._bodyInit = new Blob([this._bodyArrayBuffer]);
      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
        this._bodyArrayBuffer = bufferClone(body);
      } else {
        this._bodyText = body = Object.prototype.toString.call(body);
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8');
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type);
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
      }
    };

    if (support.blob) {
      this.blob = function() {
        var rejected = consumed(this);
        if (rejected) {
          return rejected
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob)
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(new Blob([this._bodyArrayBuffer]))
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob')
        } else {
          return Promise.resolve(new Blob([this._bodyText]))
        }
      };

      this.arrayBuffer = function() {
        if (this._bodyArrayBuffer) {
          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)
        } else {
          return this.blob().then(readBlobAsArrayBuffer)
        }
      };
    }

    this.text = function() {
      var rejected = consumed(this);
      if (rejected) {
        return rejected
      }

      if (this._bodyBlob) {
        return readBlobAsText(this._bodyBlob)
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as text')
      } else {
        return Promise.resolve(this._bodyText)
      }
    };

    if (support.formData) {
      this.formData = function() {
        return this.text().then(decode)
      };
    }

    this.json = function() {
      return this.text().then(JSON.parse)
    };

    return this
  }

  // HTTP methods whose capitalization should be normalized
  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

  function normalizeMethod(method) {
    var upcased = method.toUpperCase();
    return methods.indexOf(upcased) > -1 ? upcased : method
  }

  function Request(input, options) {
    options = options || {};
    var body = options.body;

    if (input instanceof Request) {
      if (input.bodyUsed) {
        throw new TypeError('Already read')
      }
      this.url = input.url;
      this.credentials = input.credentials;
      if (!options.headers) {
        this.headers = new Headers(input.headers);
      }
      this.method = input.method;
      this.mode = input.mode;
      this.signal = input.signal;
      if (!body && input._bodyInit != null) {
        body = input._bodyInit;
        input.bodyUsed = true;
      }
    } else {
      this.url = String(input);
    }

    this.credentials = options.credentials || this.credentials || 'same-origin';
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers);
    }
    this.method = normalizeMethod(options.method || this.method || 'GET');
    this.mode = options.mode || this.mode || null;
    this.signal = options.signal || this.signal;
    this.referrer = null;

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests')
    }
    this._initBody(body);
  }

  Request.prototype.clone = function() {
    return new Request(this, {body: this._bodyInit})
  };

  function decode(body) {
    var form = new FormData();
    body
      .trim()
      .split('&')
      .forEach(function(bytes) {
        if (bytes) {
          var split = bytes.split('=');
          var name = split.shift().replace(/\+/g, ' ');
          var value = split.join('=').replace(/\+/g, ' ');
          form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
      });
    return form
  }

  function parseHeaders(rawHeaders) {
    var headers = new Headers();
    // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
    // https://tools.ietf.org/html/rfc7230#section-3.2
    var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
    preProcessedHeaders.split(/\r?\n/).forEach(function(line) {
      var parts = line.split(':');
      var key = parts.shift().trim();
      if (key) {
        var value = parts.join(':').trim();
        headers.append(key, value);
      }
    });
    return headers
  }

  Body.call(Request.prototype);

  function Response(bodyInit, options) {
    if (!options) {
      options = {};
    }

    this.type = 'default';
    this.status = options.status === undefined ? 200 : options.status;
    this.ok = this.status >= 200 && this.status < 300;
    this.statusText = 'statusText' in options ? options.statusText : 'OK';
    this.headers = new Headers(options.headers);
    this.url = options.url || '';
    this._initBody(bodyInit);
  }

  Body.call(Response.prototype);

  Response.prototype.clone = function() {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    })
  };

  Response.error = function() {
    var response = new Response(null, {status: 0, statusText: ''});
    response.type = 'error';
    return response
  };

  var redirectStatuses = [301, 302, 303, 307, 308];

  Response.redirect = function(url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code')
    }

    return new Response(null, {status: status, headers: {location: url}})
  };

  exports.DOMException = self.DOMException;
  try {
    new exports.DOMException();
  } catch (err) {
    exports.DOMException = function(message, name) {
      this.message = message;
      this.name = name;
      var error = Error(message);
      this.stack = error.stack;
    };
    exports.DOMException.prototype = Object.create(Error.prototype);
    exports.DOMException.prototype.constructor = exports.DOMException;
  }

  function fetch(input, init) {
    return new Promise(function(resolve, reject) {
      var request = new Request(input, init);

      if (request.signal && request.signal.aborted) {
        return reject(new exports.DOMException('Aborted', 'AbortError'))
      }

      var xhr = new XMLHttpRequest();

      function abortXhr() {
        xhr.abort();
      }

      xhr.onload = function() {
        var options = {
          status: xhr.status,
          statusText: xhr.statusText,
          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
        };
        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
        var body = 'response' in xhr ? xhr.response : xhr.responseText;
        resolve(new Response(body, options));
      };

      xhr.onerror = function() {
        reject(new TypeError('Network request failed'));
      };

      xhr.ontimeout = function() {
        reject(new TypeError('Network request failed'));
      };

      xhr.onabort = function() {
        reject(new exports.DOMException('Aborted', 'AbortError'));
      };

      xhr.open(request.method, request.url, true);

      if (request.credentials === 'include') {
        xhr.withCredentials = true;
      } else if (request.credentials === 'omit') {
        xhr.withCredentials = false;
      }

      if ('responseType' in xhr && support.blob) {
        xhr.responseType = 'blob';
      }

      request.headers.forEach(function(value, name) {
        xhr.setRequestHeader(name, value);
      });

      if (request.signal) {
        request.signal.addEventListener('abort', abortXhr);

        xhr.onreadystatechange = function() {
          // DONE (success or failure)
          if (xhr.readyState === 4) {
            request.signal.removeEventListener('abort', abortXhr);
          }
        };
      }

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
    })
  }

  fetch.polyfill = true;

  if (!self.fetch) {
    self.fetch = fetch;
    self.Headers = Headers;
    self.Request = Request;
    self.Response = Response;
  }

  exports.Headers = Headers;
  exports.Request = Request;
  exports.Response = Response;
  exports.fetch = fetch;

  Object.defineProperty(exports, '__esModule', { value: true });

})));


/***/ }),
/* 239 */
/***/ (function(module, exports) {

module.exports = require("constants");

/***/ }),
/* 240 */
/***/ (function(module, exports) {

module.exports = require("crypto");

/***/ }),
/* 241 */
/***/ (function(module, exports) {

module.exports = require("domain");

/***/ }),
/* 242 */
/***/ (function(module, exports) {

module.exports = require("os");

/***/ }),
/* 243 */
/***/ (function(module, exports) {

module.exports = require("stream");

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(113);
module.exports = __webpack_require__(114);


/***/ })
/******/ ]);
});
//# sourceMappingURL=main.c8a43149.standalone.js.map